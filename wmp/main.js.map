{"version":3,"sources":["./src/app/pages/navbar/navbar.component.ts","./src/app/pages/navbar/navbar.component.html","./src/app/pages/game/game.component.ts","./src/app/pages/game/game.component.html","./src/app/pages/home/home.component.html","./src/app/pages/home/home.component.ts","./src/app/graphql.module.ts","./src/environments/environment.ts","./src/app/pages/join/join.component.html","./src/app/pages/join/join.component.ts","./src/app/pages/game/keyboard/keyboard.component.ts","./src/app/pages/game/keyboard/keyboard.component.html","./src/app/services/round.service.ts","./src/app/services/matches.service.ts","./src/app/services/player.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/assets/eng-word5.ts","./src/app/pages/create/create.component.html","./src/app/pages/create/create.component.ts","./src/app/app-routing.module.ts","./src/main.ts","./src/app/pages/game/gameboard/gameboard.component.ts","./src/app/pages/game/gameboard/gameboard.component.html","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"navbar\">\n    <div>\n      GraphQL Angular App\n    </div>\n    <nav>\n      <ul>\n        <li><a routerLink=\"/\">Home</a></li>\n      </ul>\n    </nav>\n  </div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { lexicographicSortSchema } from 'graphql';\nimport { first } from 'rxjs/operators';\nimport { Match, Player, Round, Score } from 'src/app/models/match';\nimport { MatchesService } from 'src/app/services/matches.service';\nimport { PlayerService } from 'src/app/services/player.service';\nimport { RoundService } from 'src/app/services/round.service';\nimport { parseISO, differenceInSeconds } from 'date-fns'\nimport { fadeInOnEnterAnimation, fadeOutOnLeaveAnimation } from 'angular-animations';\nimport { Location } from '@angular/common'\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.scss'],\n  animations: [\n    fadeInOnEnterAnimation(),\n    fadeOutOnLeaveAnimation()\n  ]\n})\nexport class GameComponent implements OnInit, OnDestroy {\n\n  public match: Match = { id: '', name: '', players: [], playerNumber: 0, roundNumber: 0, rounds: [] }; //TODO init with null?\n  public playerName: string = '';\n  public matchName: string = '';\n\n  public message: string = '';\n\n  public currentPlayer: Player;\n  public currentRound: Round;\n\n  public isSpectator = false;\n\n  public roundTime: any = 0;\n\n\n  public leaderboard: Score[] = [];\n\n\n  public waitingForPlayers: boolean = true;\n  public playing = true;\n\n  //DEBUG\n  public word: string = 'tears';\n\n  public currentWord: string = '';\n\n\n  private lastMatchJson = '';\n  private timerInterval = 2000;\n  private timerBasicIntervalMs = 2000;\n  private timerIntervalMultiplier = 1.2;\n\n\n\n  constructor(\n    private matchesService: MatchesService,\n    private playerService: PlayerService,\n    private roundService: RoundService,\n    private router: Router,\n    private location: Location,\n    private route: ActivatedRoute\n  ) { }\n\n  async ngOnInit() {\n\n    const params: ParamMap = await this.route.queryParamMap.pipe(first()).toPromise() as ParamMap;\n    this.matchName = params.get('match') ? params.get('match') as string : '';\n    if (this.matchName) {\n      this.match = await this.matchesService.getMatch(this.matchName);\n      if (this.playerService.isObserver) {\n        this.isSpectator = true;\n      } else {\n        this.playerName = this.playerService.getName();\n        if (this.match.players.findIndex(x => x.name == this.playerName) < 0) {\n          if (this.match.playerNumber > this.match.players.length) {\n            await this.matchesService.addPlayerToMatch(this.matchName, this.playerName);\n            this.isSpectator = false;\n          } else {\n            this.isSpectator = true;\n          }\n\n        }\n      }\n\n      this.refresh();\n    }\n    else {\n      //TODO ERROR\n      this.word = params.get('word') as string;\n    }\n\n    this.autoRefresh();\n\n    setInterval(() => {\n      if (this.currentRound?.startTime) {\n        this.roundTime = differenceInSeconds(new Date(), parseISO(this.currentRound.startTime));\n      }\n    })\n  }\n\n  back(): void {\n    this.location.back()\n  }\n\n  autoRefresh() {\n    // const matchJson = JSON.stringify(match);\n    // if (this.lastMatchJson == matchJson) {\n    //   this.timerInterval *= this.timerIntervalMultiplier;\n    // }\n    // else {\n    //   this.timerInterval = this.timerBasicIntervalMs;\n    // }\n    // this.lastMatchJson = matchJson;\n\n    setTimeout(() => {\n      if (this.playing) {\n        this.refresh();\n      }\n      this.autoRefresh();\n    }, this.timerInterval);\n  }\n\n\n\n  async refresh() {\n    const match = await this.matchesService.getMatch(this.matchName);\n    this.updateValues(match);\n  }\n\n  updateValues(newMatch: Match) {\n    this.match = newMatch;\n    this.waitingForPlayers = this.isWaitingForPlayers();\n\n    this.playing = this.isStillPlaying();\n\n    this.currentRound = this.roundService.getCurrentRound(this.match) as Round; // TODO possibile eerore a fine match\n    this.currentPlayer = this.match.players.find(player => player.name == this.playerName) as Player;\n\n    this.leaderboard = this.roundService.getMatchLeaderboard(this.match);\n\n  }\n\n  isWaitingForPlayers(): boolean {\n    return this.match.players.length < this.match.playerNumber;\n  }\n\n  isStillPlaying(): boolean {\n    if (this.waitingForPlayers) {\n      return true;\n    }\n    let res = true;\n    this.match.rounds.forEach(round => {\n      let everyPlayerTerminate = true;\n      this.match.players.forEach(player => {\n        everyPlayerTerminate = everyPlayerTerminate && !!round.answers.find(answ => answ.complete && answ.player.name == player.name)\n      });\n      res = res && !everyPlayerTerminate;\n    })\n    return res;\n  }\n\n  ngOnDestroy(): void {\n    this.playing = false;\n  }\n\n\n  public addLetter(letter: string) {\n    if (this.currentWord.length < this.currentRound.word.length) {\n      this.currentWord += letter;\n    }\n  }\n\n  public deleteLetter() {\n    if (this.currentWord.length > 0) {\n      this.currentWord = this.currentWord.slice(0, this.currentWord.length - 1);\n    }\n\n  }\n\n  public async sendAnswer() {\n    this.message = '';\n    if (this.currentWord.length < this.currentRound.word.length) {\n      this.message = \"Parola troppo corta\";\n    }\n    if (!this.roundService.isWordAcceptable(this.currentRound, this.currentWord)) {\n      this.message = \"Parola non valida\";\n    } else {\n      await this.roundService.sendAnswer(this.currentRound, this.currentWord, this.currentPlayer);\n      this.currentWord = '';\n      this.refresh();\n    }\n\n  }\n\n}\n","<div class=\"\">\n    <p-card class=\"p-p-5\">\n        <ng-template pTemplate=\"header\">\n            <i class=\"pi pi-chevron-left \" (click)=\"back()\"></i>\n\n            Partita: {{matchName}}\n        </ng-template>\n\n    <div class=\"p-component\" *ngIf=\"isSpectator && !playerName\" [@fadeInOnEnter] [@fadeOutOnLeave]>\n        Modalità spettatore\n    </div>\n\n    <div class=\"p-component\" *ngIf=\"waitingForPlayers\" [@fadeInOnEnter] [@fadeOutOnLeave]>\n        In attesa di altri giocatori\n    </div>\n\n    <div class=\"p-component\" *ngIf=\"isSpectator && playerName && !waitingForPlayers\" [@fadeInOnEnter] [@fadeOutOnLeave]>\n        Partita al completo, modalità spettatore\n    </div>\n\n\n\n    <div *ngIf=\"!waitingForPlayers\" [@fadeInOnEnter] [@fadeOutOnLeave]>\n        <div class=\"leaderboard\"  class=\"p-component\">\n            Classifica\n            <div class=\"player\" *ngFor=\"let score of leaderboard\">{{score.player.name}} {{score.points}}</div>\n        </div>\n    </div>\n\n\n    {{roundTime}}\n    <div class=\"board\" *ngIf=\"!isSpectator && !waitingForPlayers\" [@fadeInOnEnter] [@fadeOutOnLeave]>\n        <app-gameboard [player]=\"currentPlayer\" [round]=\"currentRound\" [currentWord]=\"currentWord\"></app-gameboard>\n        <div class=\"message\">{{message}}</div>\n        <app-keyboard [player]=\"currentPlayer\" [round]=\"currentRound\" (letter)=\"addLetter($event)\"\n            (delete)=\"deleteLetter()\" (send)=\"sendAnswer()\"></app-keyboard>\n    </div>\n\n    </p-card>\n\n</div>","<div class=\"container\">\n\n    <p-card class=\"p-p-5\">\n        <ng-template pTemplate=\"header\">\n            AROUND THE WORDLE\n        </ng-template>\n\n        <div class=\"actions\">\n            <div class=\"section\"><button pButton (click)=\"create()\">crea partita</button></div>\n            <div class=\"section\"><button pButton (click)=\"join()\">unisciti a una partita</button></div>\n        </div>\n\n\n        \n    </p-card>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n\n  constructor(\n    private router: Router\n  ) { }\n\n  async ngOnInit(): Promise<void> {\n\n\n  }\n\n\n\n  create() {\n    this.router.navigate([`create`])\n  }\n\n  join() {\n    this.router.navigate([`join`])\n  }\n\n\n}\n","import {NgModule} from '@angular/core';\nimport {ApolloClientOptions, ApolloLink,InMemoryCache} from '@apollo/client/core';\nimport {HttpLink} from 'apollo-angular/http';\n// import { HttpClientModule } from '@angular/common/http';\n// import { ApolloModule, Apollo, APOLLO_OPTIONS } from 'apollo-angular';\nimport { APOLLO_OPTIONS } from 'apollo-angular';\nimport { setContext } from '@apollo/client/link/context';\n\nconst uri = 'https://api-eu-central-1.graphcms.com/v2/ckzihjs4d1q5s01xs5lcf6hjr/master'; // <-- add the URL of the GraphQL server here\nconst token = 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImdjbXMtbWFpbi1wcm9kdWN0aW9uIn0.eyJ2ZXJzaW9uIjozLCJpYXQiOjE2NDUxMzkwMTgsImF1ZCI6WyJodHRwczovL2FwaS1ldS1jZW50cmFsLTEuZ3JhcGhjbXMuY29tL3YyL2NremloanM0ZDFxNXMwMXhzNWxjZjZoanIvbWFzdGVyIiwiaHR0cHM6Ly9tYW5hZ2VtZW50LW5leHQuZ3JhcGhjbXMuY29tIl0sImlzcyI6Imh0dHBzOi8vbWFuYWdlbWVudC5ncmFwaGNtcy5jb20vIiwic3ViIjoiNjRkODU0ZjMtMTdhYS00NDBjLTg2Y2MtMWExMzg4ZmMwYjBiIiwianRpIjoiY2t6cmxhbWc5MTU2ZTAxeXowYmRrZ2NzNSJ9.0J2dV5AkPUiq57i_C0cGHAl479dhOakf2XAWgYqQTxX5o-rffGROEFM9Is155vz8cTpb-VS5_iS4M5aqD37xWL4Z-N0sb1feL1ZF1UuncrmWujLF0-0soTBfeJ-kjEXBhtyhho82KM21Zx5VxErBcSqU5VqvbMvBb6bbfLeXBYIQePxaA9Zvw1bRhSF3oDv-tGOD1Fpc06FqwyZ5si2Fs2dqx1Tj-LrzzDk1anpi5n4M_cmgO8JREjjx9ivhEBlVNkf8UZo0Crjz-U3jCiQi_ncdcld7DslUAC-iO47Nu8mSqY3lZ9fprgItnebjPDH6VX9TWc5oBuGNq9MdjzoCtMg56-QlzayUF-35Rv2e1AMMiPLTCGpKtMDFcNzvaUuM7cPgLypKhmLDwq52-jfXMDStpXFIg6qhvMKDtAsETuA8_IfNkD6LL2E4hfXhmASHi1gtS7fGnPHR2gsUeSbptzhEHqmdUJveatgETCQDdyabpd5Pg10KNC7Et0u8HliwO0WlXBhrim2HZX07ZRML0FIvYSEP0hlKOQDHuMra32go16eHG3YKWtRy1bxkuZ0JXTRbDY_mIAK2G47Tu3_vZzKfRmCcQeUOjXUjuEygKAtpdetc3nm536rs1N86vAFxALBar_sTVGuPetZYJ4Ug3-Z0P4TIia2ZtkNQmxGmUDE';\nexport function createApollo(httpLink: HttpLink): ApolloClientOptions<any> {\n  const basic = setContext((operation, context) => ({\n    headers: {\n      Accept: 'charset=utf-8'\n    }\n  }));\n\n  const auth = setContext((operation, context) => {\n\n    if (token === null) {\n      return {};\n    } else {\n      return {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n    }\n  });\n\n  const link = ApolloLink.from([basic, auth, httpLink.create({ uri })]);\n  const cache = new InMemoryCache();\n\n  return {\n    link,\n    cache\n  }\n}\n\n@NgModule({\n  providers: [\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory: createApollo,\n      deps: [HttpLink],\n    },\n  ],\n})\nexport class GraphQLModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","<div class=\"container\">\n    <p-card class=\"p-p-5\">\n        <ng-template pTemplate=\"header\">\n            <i class=\"pi pi-chevron-left \" (click)=\"back()\"></i>\n\n            Unisciti\n        </ng-template>\n\n        <div class=\"join\">\n\n            <div class=\"label p-component\">Nome della partita</div>\n            <input pInputText type=\"text\" [(ngModel)]=\"matchname\">\n\n            <div class=\"section\">\n                <p-toggleButton onLabel=\"Osservatore\" offLabel=\"Giocatore\" onIcon=\"pi pi-eye\" offIcon=\"pi pi-user\"\n                    [(ngModel)]=\"observer\"></p-toggleButton>\n            </div>\n\n            <div *ngIf=\"!observer\">\n                <div class=\"label  p-component\">Inserisci il nome del tuo giocatore</div>\n                <input pInputText type=\"text\" [(ngModel)]=\"playername\" (change)=\"changeName()\">\n            </div>\n\n            <div class=\"section\">\n                <button pButton (click)=\"joinMatch()\" [disabled]=\"!((playername || observer) && matchname)\">Entra</button>\n                <p-message severity=\"error\" [text]=\"error\" *ngIf=\"error\"></p-message>\n            </div>\n\n        </div>\n    </p-card>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatchesService } from 'src/app/services/matches.service';\nimport { PlayerService } from 'src/app/services/player.service';\nimport { Location } from '@angular/common'\n\n@Component({\n  selector: 'app-join',\n  templateUrl: './join.component.html',\n  styleUrls: ['./join.component.scss']\n})\nexport class JoinComponent implements OnInit {\n\n  public matches: any[] = [];\n\n  public playername: string = '';\n  public matchname: string = '';\n  public error: string = '';\n\n  public creating: boolean = false;\n  public joining: boolean = false;\n  public observer: boolean = false;\n\n  constructor(\n    private matchesService: MatchesService,\n    private playerService: PlayerService,\n    private location: Location,\n    private router: Router) { }\n\n  async ngOnInit() {\n    this.playername = await this.playerService.getName();\n  }\n\n  back(): void {\n    this.location.back()\n  }\n\n  async joinMatch() {\n    const result = await this.matchesService.getMatch(this.matchname);\n    if (result) {\n      this.playerService.isObserver = this.observer;\n      this.router.navigate([`game`], { queryParams: { match: this.matchname } })\n    } else {\n      this.error = \"Partita non esistente\"\n    }\n  }\n\n  changeName() {\n    this.playerService.setName(this.playername);\n  }\n\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Player, Round } from 'src/app/models/match';\nimport { pulseAnimation } from 'angular-animations';\n\nexport interface BoardKey {\n  label: string,\n  icon?: string,\n  action: string,\n  class?: string,\n  valueClass?: string,\n  animate?: boolean\n}\n\n@Component({\n  selector: 'app-keyboard',\n  templateUrl: './keyboard.component.html',\n  styleUrls: ['./keyboard.component.scss'],\n  animations: [\n    pulseAnimation({scale: 1.2, direction: '=>', duration: 200})\n  ]\n})\n\nexport class KeyboardComponent implements OnInit {\n\n\n  @Output('letter') letter: EventEmitter<string> = new EventEmitter();\n  @Output('delete') delete: EventEmitter<null> = new EventEmitter();\n  @Output('send') send: EventEmitter<null> = new EventEmitter();\n\n  public actualKey: BoardKey[][] = [[]];\n\n  private keyEn: BoardKey[][] = [\n    [\n      {\n        label: 'q',\n        action: 'letter'\n      },\n      {\n        label: 'w',\n        action: 'letter'\n      },\n      {\n        label: 'e',\n        action: 'letter'\n      },\n      {\n        label: 'r',\n        action: 'letter'\n      },\n      {\n        label: 't',\n        action: 'letter'\n      },\n      {\n        label: 'y',\n        action: 'letter'\n      },\n      {\n        label: 'u',\n        action: 'letter'\n      },\n      {\n        label: 'i',\n        action: 'letter'\n      },\n      {\n        label: 'o',\n        action: 'letter'\n      },\n      {\n        label: 'p',\n        action: 'letter'\n      }\n    ],\n    [\n      {\n        label: 'a',\n        action: 'letter',\n        class: 'letter-space'\n      },\n      {\n        label: 's',\n        action: 'letter'\n      },\n      {\n        label: 'd',\n        action: 'letter'\n      },\n      {\n        label: 'f',\n        action: 'letter'\n      },\n      {\n        label: 'g',\n        action: 'letter'\n      },\n      {\n        label: 'h',\n        action: 'letter'\n      },\n      {\n        label: 'j',\n        action: 'letter'\n      },\n      {\n        label: 'k',\n        action: 'letter'\n      },\n      {\n        label: 'l',\n        action: 'letter'\n      }\n    ],\n    [\n      {\n        label: '',\n        icon: 'pi-backward',\n        action: 'delete',\n        class: 'letter-size2'\n      },\n      {\n        label: 'z',\n        action: 'letter',\n        class: 'letter'\n      },\n      {\n        label: 'x',\n        action: 'letter'\n      },\n      {\n        label: 'c',\n        action: 'letter'\n      },\n      {\n        label: 'v',\n        action: 'letter'\n      },\n      {\n        label: 'b',\n        action: 'letter'\n      },\n      {\n        label: 'n',\n        action: 'letter'\n      },\n      {\n        label: 'm',\n        action: 'letter'\n\n      },\n      {\n        label: '',\n        icon: 'pi-reply',\n        action: 'send',\n        class: 'letter-size2'\n      }\n\n    ]\n  ]\n\n  public round: Round;\n  public player: Player;\n  @Input('round') set setRound(value: Round) {\n    this.round = value;\n    this.update();\n  };\n  @Input('player')set setPlayer(value: Player) {\n    this.player = value;\n    this.update();\n  };\n\n  constructor() { \n  }\n\n  ngOnInit(): void {\n  }\n\n  action(key:BoardKey) {\n    key.animate = true;\n    // setTimeout(()=>{key.animate = false;},300);\n    switch (key.action) {\n      case 'letter':\n        this.letter.emit(key.label);\n        break;\n      case 'delete':\n        this.delete.emit(null);\n        break;\n      case 'send':\n        this.send.emit(null);\n        break;\n    }\n  }\n\n  update() {\n    const type = this.round && this.round.type ? this.round.type : '';\n    switch (type) {\n      default:\n        this.actualKey = JSON.parse(JSON.stringify(this.keyEn));\n    }\n    const word = this.round && this.round.word ? this.round.word : '';\n    const answers = this.round && this.round.answers ?  this.round.answers.filter(x => x.player.name == this.player.name) : [];\n    answers.forEach(answer => {\n      for (let i = 0; i < answer.value.length; i++) {\n        const letter = answer.value[i];\n        if (word[i] == letter) { this.setLetter(letter, 1); }\n        else if (word.includes(letter)) { this.setLetter(letter, -1); }\n        else { this.setLetter(letter, 0); }\n      }\n    })\n  }\n\n  setLetter(letter: string, value: number) {\n    this.actualKey.forEach(line => {\n      line.filter((x: BoardKey) => x.label == letter).forEach((key: BoardKey) => {\n        key.valueClass = value == 0 ? 'gray' : value == -1 ? 'yellow' : 'green';\n      })\n    })\n  }\n\n}\n","<div class=\"keyboard\">\n    <div class=\"keyline\" *ngFor=\"let line of actualKey\">\n        <div class=\"key {{key.class}} {{key.valueClass}}\" *ngFor=\"let key of line\"\n            (click)=\"action(key)\" [@pulse]=\"!!key.animate\">\n            <i *ngIf=\"key.icon\" class=\"pi {{key.icon}}\"></i>\n            {{key.label}}</div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { Answer, Match, Player, Round, Score } from '../models/match';\nimport { OtherWords, wordleWords } from 'src/assets/eng-word5';\nimport { MatchesService } from './matches.service';\nimport { parseISO, differenceInMilliseconds } from 'date-fns'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoundService {\n\n  private maxTry = MatchesService.MAXTRY;\n  private POINTSSAMEANSWERDIFF: number = 1;\n  private POINTSDIFFERENTANSWERDIFF: number = 2;\n  private MAXPOINTSFACTOR: number = 2;\n\n  constructor(\n    private matchService: MatchesService\n  ) { }\n\n  public isWordAcceptable(round: Round, word: string) {\n    // TODO check round type\n    return OtherWords.includes(word) || wordleWords.includes(word);\n  }\n\n  async sendAnswer(round: Round, answer: string, player: Player): Promise<any> {\n    const attempt: number = round.answers.filter(x => x.player.name == player.name).length + 1;\n    const result = this.getResult(round, answer);\n    return this.matchService.addAnswer(round.id, player.id, answer, result, attempt, answer == round.word);\n  }\n\n  getCurrentRound(match: Match): Round | undefined {\n    // match.rounds.sort((a, b) => a.order - b.order);\n    const nextRound: Round | undefined = match.rounds.find(round => !this.isRoundComplete(round, match));\n    if (nextRound && !nextRound.startTime) {\n      this.matchService.setRoundStartTime(nextRound.id);\n    }\n    return nextRound;\n  }\n\n  getResult(round: Round, answer: string) {\n    const chars: number[] = [];\n    answer.split('').forEach((letter, idx) => {\n      let val = 0;\n      if (round.word.includes(letter)) { val = -1 };\n      if (round.word[idx] == letter) { val = 1 };\n      chars.push(val);\n    });\n    return { chars };\n  }\n\n  isRoundComplete(round: Round, match: Match): boolean {\n    let isComplete = true;\n    match.players.forEach(player => {\n      isComplete = isComplete && !!round.answers.find(answer => (answer.complete || answer.attempt == this.maxTry) && answer.player.name == player.name);\n    })\n    return isComplete;\n  }\n\n  getMatchLeaderboard(match: Match): Score[] {\n    const matchScores: Score[] = [];\n    match.players.forEach(player => matchScores.push({ player: player, points: 0, answers: 0, timeSec: 0 }));\n    match.rounds.forEach(round => {\n      if (this.isRoundComplete(round, match)) {\n        const roundScores = this.getRoundLeaderBoard(round, match);\n        roundScores.forEach(score => {\n          console.log(\"------- ~ RoundService ~ getMatchLeaderboard ~ score\", score);\n          const matchScore = matchScores.find(x => x.player.name == score.player.name);\n          if (matchScore) {\n            matchScore.answers += score.answers;\n            matchScore.timeSec += score.timeSec;\n            matchScore.points += score.points;\n          }\n        })\n      }\n    })\n    return matchScores;\n  }\n\n  getRoundLeaderBoard(round: Round, match: Match): Score[] {\n    const roundScores: Score[] = [];\n    match.players.forEach(player => roundScores.push({ player: player, points: 0, answers: this.maxTry + 1, timeSec: 0 }));\n    round.answers.forEach(answer => {\n      if (answer.complete || answer.attempt == this.maxTry) {\n        let score = roundScores.find(x => x.player.name == answer.player.name);\n        if (score) {\n          score.answers = answer.complete ? answer.attempt : this.maxTry + 1;\n          score.timeSec = this.getTimeElapsed(answer, round);\n        }\n      }\n    })\n\n    roundScores.sort((a, b) => {\n      if (a.answers != b.answers) { return a.answers - b.answers }\n      return a.timeSec - b.timeSec;\n    })\n\n    let lastPoint = this.getMaxPoints(match);\n    let lastAnswerNum = 0;\n    let lastTimeSec = 0;\n    console.log(\"------- ~ RoundService ~ getRoundLeaderBoard ~ roundScores\", roundScores);\n    roundScores.forEach(x => {\n      if (lastAnswerNum != 0 || lastTimeSec != 0) {\n        if (lastAnswerNum == x.answers) {\n          if (x.timeSec > lastTimeSec) {\n            lastPoint -= this.POINTSSAMEANSWERDIFF;\n          }\n        } else {\n          lastPoint -= this.POINTSDIFFERENTANSWERDIFF;\n        }\n      }\n      x.points = lastPoint;\n      lastTimeSec = x.timeSec;\n      lastAnswerNum = x.answers;\n    })\n    console.log(\"+++++++ ~ RoundService ~ getRoundLeaderBoard ~ roundScores\", roundScores);\n\n    return roundScores;\n  }\n  getMaxPoints(match: Match) {\n    return match.playerNumber * this.MAXPOINTSFACTOR;\n  }\n\n  getTimeElapsed(answer: Answer, round: Round): number {\n    let diff = 0;\n    if (answer.createdAt) {\n      diff = differenceInMilliseconds(parseISO(answer.createdAt), parseISO(round.startTime));\n    }\n\n    return diff; // TODO computer time of the answer\n  }\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { Apollo, gql, QueryRef } from 'apollo-angular';\nimport { OtherWords, wordleWords } from 'src/assets/eng-word5';\nimport { addSeconds } from 'date-fns'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatchesService {\n\n  public static MAXTRY = 6;\n  public STARTROUNDDELAYSECONDS = 10;\n\n\n  constructor(private apollo: Apollo) {\n\n  }\n\n\n  async addPlayerToMatch(matchName: string, playerName: string): Promise<any> {\n\n    const result = await this.apollo.mutate({\n      mutation: gql`mutation CreatePlayer($playerName:String!,$matchName:String!) {\n        createPlayer(\n          data: {name: $playerName, match: {connect: {name: $matchName}}, points: 0}\n        ) {\n          id\n        }\n      }\n      `, variables: {\n        playerName,\n        matchName\n      }\n    }).toPromise();\n    return result;\n  }\n\n  async setRoundStartTime(roundId: string): Promise<any> {\n    let startDateTime = new Date();\n    startDateTime = addSeconds(startDateTime, this.STARTROUNDDELAYSECONDS)\n\n    const result = await this.apollo.mutate({\n      mutation: gql`mutation updateRoundStartTime($startTime: DateTime, $roundId: ID!) {\n        updateRound(data: {startTime: $startTime}, where: {id: $roundId}) {\n          id\n        }\n      }`,\n      variables: {\n        startTime: startDateTime.toISOString(),\n        roundId\n      }\n    }).toPromise();\n    return result;\n  }\n  async getMatch(matchName: string): Promise<any> {\n    const result: any = await this.apollo.watchQuery({\n      query: gql`query GetMatch($matchName: String!) {\n        match(where: {name: $matchName}) {\n          id\n          playerNumber\n          players {\n            ... on Player {\n              id\n              name\n              points\n            }\n          }\n          roundnumber\n          rounds {\n            ... on Round {\n              id\n              word\n              startTime\n              answers {\n                ... on Asnwer {\n                  id\n                  attempt\n                  complete\n                  result\n                  value\n                  createdAt\n                  player {\n                    name\n                  }\n                }\n              }\n              order\n            }\n          }\n        }\n      }\n      `, variables: {\n        matchName\n      }\n    }).refetch();\n    return result.data.match;\n  }\n\n\n  async createNewMatch(matchName: string, playerNumber: number, wordNumber: number, completeWordPool = false): Promise<any> {\n    const roundsWords: string[] = this.createRounds(wordNumber, completeWordPool);\n\n    const roundArray: any[] = []; let i = 1;\n    roundsWords.forEach(word => {\n      roundArray.push(\n        {\n          \"Round\":\n            { \"order\": i, \"word\": word }\n        });\n      i++;\n    })\n\n    const createMatch = await this.apollo.mutate({\n      mutation: gql`mutation newMatch($name: String!, $playerNumber: Int!, $roundnumber: Int!, $rounds: MatchRoundsCreateManyInlineInput!) {\n        createMatch(\n          data: {name: $name, playerNumber: $playerNumber, roundnumber: $roundnumber, rounds: $rounds}\n        ) {\n          id\n        }\n      }\n      `, variables:\n      {\n        \"rounds\": {\n          \"create\": roundArray\n        }, \"name\": matchName, \"playerNumber\": playerNumber, \"roundnumber\": wordNumber\n      }\n    }).toPromise();\n\n    return createMatch;\n\n  }\n\n  async addAnswer(roundId: string, playerId: string, answerString: string, answerValue: any, attempt: number, isCorrect: boolean): Promise<any> {\n    const result = await this.apollo.mutate({\n      mutation: gql`mutation addAnswer($attempt: Int!, $complete: Boolean!, $playerId: ID!, $result: Json!, $roundId: ID!, $value: String!) {\n        createAsnwer(\n          data: {attempt: $attempt, complete: $complete, player: {connect: {id: $playerId}}, result: $result, value: $value, round: {connect: {id: $roundId}}}\n        ) {\n          id\n        }\n      }\n      `, variables: { \"attempt\": attempt, \"complete\": isCorrect, \"playerId\": playerId, \"result\": answerValue, \"roundId\": roundId, \"value\": answerString }\n    }).toPromise();\n    return result;\n  }\n\n  createRounds(wordNumber: number, completeWordPool: boolean): string[] {\n    let saveCounter = 0;\n    const res: string[] = [];\n    const maxIndex = completeWordPool ? wordleWords.length : OtherWords.length + wordleWords.length;\n    while (res.length < wordNumber && saveCounter < 100) {\n      const randomIndex = Math.round(Math.random() * (maxIndex - 1));\n      let word = '';\n      if (randomIndex >= wordleWords.length) {\n        word = OtherWords[randomIndex - wordleWords.length]\n      } else {\n        word = wordleWords[randomIndex]\n      }\n      if (!res.includes(word)) {\n        res.push(word);\n      }\n      saveCounter++;\n    }\n    return res;\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayerService {\n\n  private static playerStorageKey : string = 'playerName';\n\n  private playerName: string = '';\n\n  public isObserver: boolean = false;\n\n  constructor() {\n    const pname = localStorage.getItem(PlayerService.playerStorageKey);\n    if (pname) {\n      this.playerName = pname;\n    }\n  }\n\n  setName(name: string) {\n    this.playerName = name;\n    localStorage.setItem(PlayerService.playerStorageKey, name)\n  }\n\n  getName() {\n    return this.playerName;\n  }\n}\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'wordle-mp-fe';\r\n}\r\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { GraphQLModule } from './graphql.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NavbarComponent } from './pages/navbar/navbar.component';\r\nimport { CreateComponent } from './pages/create/create.component';\r\nimport { JoinComponent } from './pages/join/join.component';\r\nimport { GameComponent } from './pages/game/game.component';\r\nimport { KeyboardComponent } from './pages/game/keyboard/keyboard.component';\r\nimport { GameboardComponent } from './pages/game/gameboard/gameboard.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AccordionModule } from 'primeng/accordion';\r\nimport { ButtonModule } from 'primeng-lts/button';\r\nimport { InputTextModule } from 'primeng-lts/inputtext';\r\nimport { ToggleButtonModule } from 'primeng-lts/togglebutton';\r\nimport { MessagesModule } from 'primeng-lts/messages';\r\nimport { MessageModule } from 'primeng-lts/message';\r\nimport {InputNumberModule} from 'primeng-lts/inputnumber';\r\nimport {CardModule} from 'primeng-lts/card';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    NavbarComponent,\r\n    CreateComponent,\r\n    JoinComponent,\r\n    GameComponent,\r\n    KeyboardComponent,\r\n    GameboardComponent\r\n  ],\r\n  imports: [\r\n    FormsModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    GraphQLModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    ButtonModule,\r\n    InputTextModule,\r\n    ToggleButtonModule,\r\n    MessagesModule,\r\n    MessageModule,\r\n    InputNumberModule,\r\n    CardModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export  const wordleWords = [\"cigar\", \"rebut\", \"sissy\", \"humph\", \"awake\", \"blush\", \"focal\", \"evade\", \"naval\", \"serve\", \"heath\", \"dwarf\", \"model\", \"karma\", \"stink\", \"grade\", \"quiet\", \"bench\", \"abate\", \"feign\", \"major\", \"death\", \"fresh\", \"crust\", \"stool\", \"colon\", \"abase\", \"marry\", \"react\", \"batty\", \"pride\", \"floss\", \"helix\", \"croak\", \"staff\", \"paper\", \"unfed\", \"whelp\", \"trawl\", \"outdo\", \"adobe\", \"crazy\", \"sower\", \"repay\", \"digit\", \"crate\", \"cluck\", \"spike\", \"mimic\", \"pound\", \"maxim\", \"linen\", \"unmet\", \"flesh\", \"booby\", \"forth\", \"first\", \"stand\", \"belly\", \"ivory\", \"seedy\", \"print\", \"yearn\", \"drain\", \"bribe\", \"stout\", \"panel\", \"crass\", \"flume\", \"offal\", \"agree\", \"error\", \"swirl\", \"argue\", \"bleed\", \"delta\", \"flick\", \"totem\", \"wooer\", \"front\", \"shrub\", \"parry\", \"biome\", \"lapel\", \"start\", \"greet\", \"goner\", \"golem\", \"lusty\", \"loopy\", \"round\", \"audit\", \"lying\", \"gamma\", \"labor\", \"islet\", \"civic\", \"forge\", \"corny\", \"moult\", \"basic\", \"salad\", \"agate\", \"spicy\", \"spray\", \"essay\", \"fjord\", \"spend\", \"kebab\", \"guild\", \"aback\", \"motor\", \"alone\", \"hatch\", \"hyper\", \"thumb\", \"dowry\", \"ought\", \"belch\", \"dutch\", \"pilot\", \"tweed\", \"comet\", \"jaunt\", \"enema\", \"steed\", \"abyss\", \"growl\", \"fling\", \"dozen\", \"boozy\", \"erode\", \"world\", \"gouge\", \"click\", \"briar\", \"great\", \"altar\", \"pulpy\", \"blurt\", \"coast\", \"duchy\", \"groin\", \"fixer\", \"group\", \"rogue\", \"badly\", \"smart\", \"pithy\", \"gaudy\", \"chill\", \"heron\", \"vodka\", \"finer\", \"surer\", \"radio\", \"rouge\", \"perch\", \"retch\", \"wrote\", \"clock\", \"tilde\", \"store\", \"prove\", \"bring\", \"solve\", \"cheat\", \"grime\", \"exult\", \"usher\", \"epoch\", \"triad\", \"break\", \"rhino\", \"viral\", \"conic\", \"masse\", \"sonic\", \"vital\", \"trace\", \"using\", \"peach\", \"champ\", \"baton\", \"brake\", \"pluck\", \"craze\", \"gripe\", \"weary\", \"picky\", \"acute\", \"ferry\", \"aside\", \"tapir\", \"troll\", \"unify\", \"rebus\", \"boost\", \"truss\", \"siege\", \"tiger\", \"banal\", \"slump\", \"crank\", \"gorge\", \"query\", \"drink\", \"favor\", \"abbey\", \"tangy\", \"panic\", \"solar\", \"shire\", \"proxy\", \"point\", \"robot\", \"prick\", \"wince\", \"crimp\", \"knoll\", \"sugar\", \"whack\", \"mount\", \"perky\", \"could\", \"wrung\", \"light\", \"those\", \"moist\", \"shard\", \"pleat\", \"aloft\", \"skill\", \"elder\", \"frame\", \"humor\", \"pause\", \"ulcer\", \"ultra\", \"robin\", \"cynic\", \"aroma\", \"caulk\", \"shake\", \"dodge\", \"swill\", \"tacit\", \"other\", \"thorn\", \"trove\", \"bloke\", \"vivid\", \"spill\", \"chant\", \"choke\", \"rupee\", \"nasty\", \"mourn\", \"ahead\", \"brine\", \"cloth\", \"hoard\", \"sweet\", \"month\", \"lapse\", \"watch\", \"today\", \"focus\", \"smelt\", \"tease\", \"cater\", \"movie\", \"saute\", \"allow\", \"renew\", \"their\", \"slosh\", \"purge\", \"chest\", \"depot\", \"epoxy\", \"nymph\", \"found\", \"shall\", \"harry\", \"stove\", \"lowly\", \"snout\", \"trope\", \"fewer\", \"shawl\", \"natal\", \"comma\", \"foray\", \"scare\", \"stair\", \"black\", \"squad\", \"royal\", \"chunk\", \"mince\", \"shame\", \"cheek\", \"ample\", \"flair\", \"foyer\", \"cargo\", \"oxide\", \"plant\", \"olive\", \"inert\", \"askew\", \"heist\", \"shown\", \"zesty\", \"hasty\", \"trash\", \"fella\", \"larva\", \"forgo\", \"story\", \"hairy\", \"train\", \"homer\", \"badge\", \"midst\", \"canny\", \"fetus\", \"butch\", \"farce\", \"slung\", \"tipsy\", \"metal\", \"yield\", \"delve\", \"being\", \"scour\", \"glass\", \"gamer\", \"scrap\", \"money\", \"hinge\", \"album\", \"vouch\", \"asset\", \"tiara\", \"crept\", \"bayou\", \"atoll\", \"manor\", \"creak\", \"showy\", \"phase\", \"froth\", \"depth\", \"gloom\", \"flood\", \"trait\", \"girth\", \"piety\", \"payer\", \"goose\", \"float\", \"donor\", \"atone\", \"primo\", \"apron\", \"blown\", \"cacao\", \"loser\", \"input\", \"gloat\", \"awful\", \"brink\", \"smite\", \"beady\", \"rusty\", \"retro\", \"droll\", \"gawky\", \"hutch\", \"pinto\", \"gaily\", \"egret\", \"lilac\", \"sever\", \"field\", \"fluff\", \"hydro\", \"flack\", \"agape\", \"voice\", \"stead\", \"stalk\", \"berth\", \"madam\", \"night\", \"bland\", \"liver\", \"wedge\", \"augur\", \"roomy\", \"wacky\", \"flock\", \"angry\", \"bobby\", \"trite\", \"aphid\", \"tryst\", \"midge\", \"power\", \"elope\", \"cinch\", \"motto\", \"stomp\", \"upset\", \"bluff\", \"cramp\", \"quart\", \"coyly\", \"youth\", \"rhyme\", \"buggy\", \"alien\", \"smear\", \"unfit\", \"patty\", \"cling\", \"glean\", \"label\", \"hunky\", \"khaki\", \"poker\", \"gruel\", \"twice\", \"twang\", \"shrug\", \"treat\", \"unlit\", \"waste\", \"merit\", \"woven\", \"octal\", \"needy\", \"clown\", \"widow\", \"irony\", \"ruder\", \"gauze\", \"chief\", \"onset\", \"prize\", \"fungi\", \"charm\", \"gully\", \"inter\", \"whoop\", \"taunt\", \"leery\", \"class\", \"theme\", \"lofty\", \"tibia\", \"booze\", \"alpha\", \"thyme\", \"eclat\", \"doubt\", \"parer\", \"chute\", \"stick\", \"trice\", \"alike\", \"sooth\", \"recap\", \"saint\", \"liege\", \"glory\", \"grate\", \"admit\", \"brisk\", \"soggy\", \"usurp\", \"scald\", \"scorn\", \"leave\", \"twine\", \"sting\", \"bough\", \"marsh\", \"sloth\", \"dandy\", \"vigor\", \"howdy\", \"enjoy\", \"valid\", \"ionic\", \"equal\", \"unset\", \"floor\", \"catch\", \"spade\", \"stein\", \"exist\", \"quirk\", \"denim\", \"grove\", \"spiel\", \"mummy\", \"fault\", \"foggy\", \"flout\", \"carry\", \"sneak\", \"libel\", \"waltz\", \"aptly\", \"piney\", \"inept\", \"aloud\", \"photo\", \"dream\", \"stale\", \"vomit\", \"ombre\", \"fanny\", \"unite\", \"snarl\", \"baker\", \"there\", \"glyph\", \"pooch\", \"hippy\", \"spell\", \"folly\", \"louse\", \"gulch\", \"vault\", \"godly\", \"threw\", \"fleet\", \"grave\", \"inane\", \"shock\", \"crave\", \"spite\", \"valve\", \"skimp\", \"claim\", \"rainy\", \"musty\", \"pique\", \"daddy\", \"quasi\", \"arise\", \"aging\", \"valet\", \"opium\", \"avert\", \"stuck\", \"recut\", \"mulch\", \"genre\", \"plume\", \"rifle\", \"count\", \"incur\", \"total\", \"wrest\", \"mocha\", \"deter\", \"study\", \"lover\", \"safer\", \"rivet\", \"funny\", \"smoke\", \"mound\", \"undue\", \"sedan\", \"pagan\", \"swine\", \"guile\", \"gusty\", \"equip\", \"tough\", \"canoe\", \"chaos\", \"covet\", \"human\", \"udder\", \"lunch\", \"blast\", \"stray\", \"manga\", \"melee\", \"lefty\", \"quick\", \"paste\", \"given\", \"octet\", \"risen\", \"groan\", \"leaky\", \"grind\", \"carve\", \"loose\", \"sadly\", \"spilt\", \"apple\", \"slack\", \"honey\", \"final\", \"sheen\", \"eerie\", \"minty\", \"slick\", \"derby\", \"wharf\", \"spelt\", \"coach\", \"erupt\", \"singe\", \"price\", \"spawn\", \"fairy\", \"jiffy\", \"filmy\", \"stack\", \"chose\", \"sleep\", \"ardor\", \"nanny\", \"niece\", \"woozy\", \"handy\", \"grace\", \"ditto\", \"stank\", \"cream\", \"usual\", \"diode\", \"valor\", \"angle\", \"ninja\", \"muddy\", \"chase\", \"reply\", \"prone\", \"spoil\", \"heart\", \"shade\", \"diner\", \"arson\", \"onion\", \"sleet\", \"dowel\", \"couch\", \"palsy\", \"bowel\", \"smile\", \"evoke\", \"creek\", \"lance\", \"eagle\", \"idiot\", \"siren\", \"built\", \"embed\", \"award\", \"dross\", \"annul\", \"goody\", \"frown\", \"patio\", \"laden\", \"humid\", \"elite\", \"lymph\", \"edify\", \"might\", \"reset\", \"visit\", \"gusto\", \"purse\", \"vapor\", \"crock\", \"write\", \"sunny\", \"loath\", \"chaff\", \"slide\", \"queer\", \"venom\", \"stamp\", \"sorry\", \"still\", \"acorn\", \"aping\", \"pushy\", \"tamer\", \"hater\", \"mania\", \"awoke\", \"brawn\", \"swift\", \"exile\", \"birch\", \"lucky\", \"freer\", \"risky\", \"ghost\", \"plier\", \"lunar\", \"winch\", \"snare\", \"nurse\", \"house\", \"borax\", \"nicer\", \"lurch\", \"exalt\", \"about\", \"savvy\", \"toxin\", \"tunic\", \"pried\", \"inlay\", \"chump\", \"lanky\", \"cress\", \"eater\", \"elude\", \"cycle\", \"kitty\", \"boule\", \"moron\", \"tenet\", \"place\", \"lobby\", \"plush\", \"vigil\", \"index\", \"blink\", \"clung\", \"qualm\", \"croup\", \"clink\", \"juicy\", \"stage\", \"decay\", \"nerve\", \"flier\", \"shaft\", \"crook\", \"clean\", \"china\", \"ridge\", \"vowel\", \"gnome\", \"snuck\", \"icing\", \"spiny\", \"rigor\", \"snail\", \"flown\", \"rabid\", \"prose\", \"thank\", \"poppy\", \"budge\", \"fiber\", \"moldy\", \"dowdy\", \"kneel\", \"track\", \"caddy\", \"quell\", \"dumpy\", \"paler\", \"swore\", \"rebar\", \"scuba\", \"splat\", \"flyer\", \"horny\", \"mason\", \"doing\", \"ozone\", \"amply\", \"molar\", \"ovary\", \"beset\", \"queue\", \"cliff\", \"magic\", \"truce\", \"sport\", \"fritz\", \"edict\", \"twirl\", \"verse\", \"llama\", \"eaten\", \"range\", \"whisk\", \"hovel\", \"rehab\", \"macaw\", \"sigma\", \"spout\", \"verve\", \"sushi\", \"dying\", \"fetid\", \"brain\", \"buddy\", \"thump\", \"scion\", \"candy\", \"chord\", \"basin\", \"march\", \"crowd\", \"arbor\", \"gayly\", \"musky\", \"stain\", \"dally\", \"bless\", \"bravo\", \"stung\", \"title\", \"ruler\", \"kiosk\", \"blond\", \"ennui\", \"layer\", \"fluid\", \"tatty\", \"score\", \"cutie\", \"zebra\", \"barge\", \"matey\", \"bluer\", \"aider\", \"shook\", \"river\", \"privy\", \"betel\", \"frisk\", \"bongo\", \"begun\", \"azure\", \"weave\", \"genie\", \"sound\", \"glove\", \"braid\", \"scope\", \"wryly\", \"rover\", \"assay\", \"ocean\", \"bloom\", \"irate\", \"later\", \"woken\", \"silky\", \"wreck\", \"dwelt\", \"slate\", \"smack\", \"solid\", \"amaze\", \"hazel\", \"wrist\", \"jolly\", \"globe\", \"flint\", \"rouse\", \"civil\", \"vista\", \"relax\", \"cover\", \"alive\", \"beech\", \"jetty\", \"bliss\", \"vocal\", \"often\", \"dolly\", \"eight\", \"joker\", \"since\", \"event\", \"ensue\", \"shunt\", \"diver\", \"poser\", \"worst\", \"sweep\", \"alley\", \"creed\", \"anime\", \"leafy\", \"bosom\", \"dunce\", \"stare\", \"pudgy\", \"waive\", \"choir\", \"stood\", \"spoke\", \"outgo\", \"delay\", \"bilge\", \"ideal\", \"clasp\", \"seize\", \"hotly\", \"laugh\", \"sieve\", \"block\", \"meant\", \"grape\", \"noose\", \"hardy\", \"shied\", \"drawl\", \"daisy\", \"putty\", \"strut\", \"burnt\", \"tulip\", \"crick\", \"idyll\", \"vixen\", \"furor\", \"geeky\", \"cough\", \"naive\", \"shoal\", \"stork\", \"bathe\", \"aunty\", \"check\", \"prime\", \"brass\", \"outer\", \"furry\", \"razor\", \"elect\", \"evict\", \"imply\", \"demur\", \"quota\", \"haven\", \"cavil\", \"swear\", \"crump\", \"dough\", \"gavel\", \"wagon\", \"salon\", \"nudge\", \"harem\", \"pitch\", \"sworn\", \"pupil\", \"excel\", \"stony\", \"cabin\", \"unzip\", \"queen\", \"trout\", \"polyp\", \"earth\", \"storm\", \"until\", \"taper\", \"enter\", \"child\", \"adopt\", \"minor\", \"fatty\", \"husky\", \"brave\", \"filet\", \"slime\", \"glint\", \"tread\", \"steal\", \"regal\", \"guest\", \"every\", \"murky\", \"share\", \"spore\", \"hoist\", \"buxom\", \"inner\", \"otter\", \"dimly\", \"level\", \"sumac\", \"donut\", \"stilt\", \"arena\", \"sheet\", \"scrub\", \"fancy\", \"slimy\", \"pearl\", \"silly\", \"porch\", \"dingo\", \"sepia\", \"amble\", \"shady\", \"bread\", \"friar\", \"reign\", \"dairy\", \"quill\", \"cross\", \"brood\", \"tuber\", \"shear\", \"posit\", \"blank\", \"villa\", \"shank\", \"piggy\", \"freak\", \"which\", \"among\", \"fecal\", \"shell\", \"would\", \"algae\", \"large\", \"rabbi\", \"agony\", \"amuse\", \"bushy\", \"copse\", \"swoon\", \"knife\", \"pouch\", \"ascot\", \"plane\", \"crown\", \"urban\", \"snide\", \"relay\", \"abide\", \"viola\", \"rajah\", \"straw\", \"dilly\", \"crash\", \"amass\", \"third\", \"trick\", \"tutor\", \"woody\", \"blurb\", \"grief\", \"disco\", \"where\", \"sassy\", \"beach\", \"sauna\", \"comic\", \"clued\", \"creep\", \"caste\", \"graze\", \"snuff\", \"frock\", \"gonad\", \"drunk\", \"prong\", \"lurid\", \"steel\", \"halve\", \"buyer\", \"vinyl\", \"utile\", \"smell\", \"adage\", \"worry\", \"tasty\", \"local\", \"trade\", \"finch\", \"ashen\", \"modal\", \"gaunt\", \"clove\", \"enact\", \"adorn\", \"roast\", \"speck\", \"sheik\", \"missy\", \"grunt\", \"snoop\", \"party\", \"touch\", \"mafia\", \"emcee\", \"array\", \"south\", \"vapid\", \"jelly\", \"skulk\", \"angst\", \"tubal\", \"lower\", \"crest\", \"sweat\", \"cyber\", \"adore\", \"tardy\", \"swami\", \"notch\", \"groom\", \"roach\", \"hitch\", \"young\", \"align\", \"ready\", \"frond\", \"strap\", \"puree\", \"realm\", \"venue\", \"swarm\", \"offer\", \"seven\", \"dryer\", \"diary\", \"dryly\", \"drank\", \"acrid\", \"heady\", \"theta\", \"junto\", \"pixie\", \"quoth\", \"bonus\", \"shalt\", \"penne\", \"amend\", \"datum\", \"build\", \"piano\", \"shelf\", \"lodge\", \"suing\", \"rearm\", \"coral\", \"ramen\", \"worth\", \"psalm\", \"infer\", \"overt\", \"mayor\", \"ovoid\", \"glide\", \"usage\", \"poise\", \"randy\", \"chuck\", \"prank\", \"fishy\", \"tooth\", \"ether\", \"drove\", \"idler\", \"swath\", \"stint\", \"while\", \"begat\", \"apply\", \"slang\", \"tarot\", \"radar\", \"credo\", \"aware\", \"canon\", \"shift\", \"timer\", \"bylaw\", \"serum\", \"three\", \"steak\", \"iliac\", \"shirk\", \"blunt\", \"puppy\", \"penal\", \"joist\", \"bunny\", \"shape\", \"beget\", \"wheel\", \"adept\", \"stunt\", \"stole\", \"topaz\", \"chore\", \"fluke\", \"afoot\", \"bloat\", \"bully\", \"dense\", \"caper\", \"sneer\", \"boxer\", \"jumbo\", \"lunge\", \"space\", \"avail\", \"short\", \"slurp\", \"loyal\", \"flirt\", \"pizza\", \"conch\", \"tempo\", \"droop\", \"plate\", \"bible\", \"plunk\", \"afoul\", \"savoy\", \"steep\", \"agile\", \"stake\", \"dwell\", \"knave\", \"beard\", \"arose\", \"motif\", \"smash\", \"broil\", \"glare\", \"shove\", \"baggy\", \"mammy\", \"swamp\", \"along\", \"rugby\", \"wager\", \"quack\", \"squat\", \"snaky\", \"debit\", \"mange\", \"skate\", \"ninth\", \"joust\", \"tramp\", \"spurn\", \"medal\", \"micro\", \"rebel\", \"flank\", \"learn\", \"nadir\", \"maple\", \"comfy\", \"remit\", \"gruff\", \"ester\", \"least\", \"mogul\", \"fetch\", \"cause\", \"oaken\", \"aglow\", \"meaty\", \"gaffe\", \"shyly\", \"racer\", \"prowl\", \"thief\", \"stern\", \"poesy\", \"rocky\", \"tweet\", \"waist\", \"spire\", \"grope\", \"havoc\", \"patsy\", \"truly\", \"forty\", \"deity\", \"uncle\", \"swish\", \"giver\", \"preen\", \"bevel\", \"lemur\", \"draft\", \"slope\", \"annoy\", \"lingo\", \"bleak\", \"ditty\", \"curly\", \"cedar\", \"dirge\", \"grown\", \"horde\", \"drool\", \"shuck\", \"crypt\", \"cumin\", \"stock\", \"gravy\", \"locus\", \"wider\", \"breed\", \"quite\", \"chafe\", \"cache\", \"blimp\", \"deign\", \"fiend\", \"logic\", \"cheap\", \"elide\", \"rigid\", \"false\", \"renal\", \"pence\", \"rowdy\", \"shoot\", \"blaze\", \"envoy\", \"posse\", \"brief\", \"never\", \"abort\", \"mouse\", \"mucky\", \"sulky\", \"fiery\", \"media\", \"trunk\", \"yeast\", \"clear\", \"skunk\", \"scalp\", \"bitty\", \"cider\", \"koala\", \"duvet\", \"segue\", \"creme\", \"super\", \"grill\", \"after\", \"owner\", \"ember\", \"reach\", \"nobly\", \"empty\", \"speed\", \"gipsy\", \"recur\", \"smock\", \"dread\", \"merge\", \"burst\", \"kappa\", \"amity\", \"shaky\", \"hover\", \"carol\", \"snort\", \"synod\", \"faint\", \"haunt\", \"flour\", \"chair\", \"detox\", \"shrew\", \"tense\", \"plied\", \"quark\", \"burly\", \"novel\", \"waxen\", \"stoic\", \"jerky\", \"blitz\", \"beefy\", \"lyric\", \"hussy\", \"towel\", \"quilt\", \"below\", \"bingo\", \"wispy\", \"brash\", \"scone\", \"toast\", \"easel\", \"saucy\", \"value\", \"spice\", \"honor\", \"route\", \"sharp\", \"bawdy\", \"radii\", \"skull\", \"phony\", \"issue\", \"lager\", \"swell\", \"urine\", \"gassy\", \"trial\", \"flora\", \"upper\", \"latch\", \"wight\", \"brick\", \"retry\", \"holly\", \"decal\", \"grass\", \"shack\", \"dogma\", \"mover\", \"defer\", \"sober\", \"optic\", \"crier\", \"vying\", \"nomad\", \"flute\", \"hippo\", \"shark\", \"drier\", \"obese\", \"bugle\", \"tawny\", \"chalk\", \"feast\", \"ruddy\", \"pedal\", \"scarf\", \"cruel\", \"bleat\", \"tidal\", \"slush\", \"semen\", \"windy\", \"dusty\", \"sally\", \"igloo\", \"nerdy\", \"jewel\", \"shone\", \"whale\", \"hymen\", \"abuse\", \"fugue\", \"elbow\", \"crumb\", \"pansy\", \"welsh\", \"syrup\", \"terse\", \"suave\", \"gamut\", \"swung\", \"drake\", \"freed\", \"afire\", \"shirt\", \"grout\", \"oddly\", \"tithe\", \"plaid\", \"dummy\", \"broom\", \"blind\", \"torch\", \"enemy\", \"again\", \"tying\", \"pesky\", \"alter\", \"gazer\", \"noble\", \"ethos\", \"bride\", \"extol\", \"decor\", \"hobby\", \"beast\", \"idiom\", \"utter\", \"these\", \"sixth\", \"alarm\", \"erase\", \"elegy\", \"spunk\", \"piper\", \"scaly\", \"scold\", \"hefty\", \"chick\", \"sooty\", \"canal\", \"whiny\", \"slash\", \"quake\", \"joint\", \"swept\", \"prude\", \"heavy\", \"wield\", \"femme\", \"lasso\", \"maize\", \"shale\", \"screw\", \"spree\", \"smoky\", \"whiff\", \"scent\", \"glade\", \"spent\", \"prism\", \"stoke\", \"riper\", \"orbit\", \"cocoa\", \"guilt\", \"humus\", \"shush\", \"table\", \"smirk\", \"wrong\", \"noisy\", \"alert\", \"shiny\", \"elate\", \"resin\", \"whole\", \"hunch\", \"pixel\", \"polar\", \"hotel\", \"sword\", \"cleat\", \"mango\", \"rumba\", \"puffy\", \"filly\", \"billy\", \"leash\", \"clout\", \"dance\", \"ovate\", \"facet\", \"chili\", \"paint\", \"liner\", \"curio\", \"salty\", \"audio\", \"snake\", \"fable\", \"cloak\", \"navel\", \"spurt\", \"pesto\", \"balmy\", \"flash\", \"unwed\", \"early\", \"churn\", \"weedy\", \"stump\", \"lease\", \"witty\", \"wimpy\", \"spoof\", \"saner\", \"blend\", \"salsa\", \"thick\", \"warty\", \"manic\", \"blare\", \"squib\", \"spoon\", \"probe\", \"crepe\", \"knack\", \"force\", \"debut\", \"order\", \"haste\", \"teeth\", \"agent\", \"widen\", \"icily\", \"slice\", \"ingot\", \"clash\", \"juror\", \"blood\", \"abode\", \"throw\", \"unity\", \"pivot\", \"slept\", \"troop\", \"spare\", \"sewer\", \"parse\", \"morph\", \"cacti\", \"tacky\", \"spool\", \"demon\", \"moody\", \"annex\", \"begin\", \"fuzzy\", \"patch\", \"water\", \"lumpy\", \"admin\", \"omega\", \"limit\", \"tabby\", \"macho\", \"aisle\", \"skiff\", \"basis\", \"plank\", \"verge\", \"botch\", \"crawl\", \"lousy\", \"slain\", \"cubic\", \"raise\", \"wrack\", \"guide\", \"foist\", \"cameo\", \"under\", \"actor\", \"revue\", \"fraud\", \"harpy\", \"scoop\", \"climb\", \"refer\", \"olden\", \"clerk\", \"debar\", \"tally\", \"ethic\", \"cairn\", \"tulle\", \"ghoul\", \"hilly\", \"crude\", \"apart\", \"scale\", \"older\", \"plain\", \"sperm\", \"briny\", \"abbot\", \"rerun\", \"quest\", \"crisp\", \"bound\", \"befit\", \"drawn\", \"suite\", \"itchy\", \"cheer\", \"bagel\", \"guess\", \"broad\", \"axiom\", \"chard\", \"caput\", \"leant\", \"harsh\", \"curse\", \"proud\", \"swing\", \"opine\", \"taste\", \"lupus\", \"gumbo\", \"miner\", \"green\", \"chasm\", \"lipid\", \"topic\", \"armor\", \"brush\", \"crane\", \"mural\", \"abled\", \"habit\", \"bossy\", \"maker\", \"dusky\", \"dizzy\", \"lithe\", \"brook\", \"jazzy\", \"fifty\", \"sense\", \"giant\", \"surly\", \"legal\", \"fatal\", \"flunk\", \"began\", \"prune\", \"small\", \"slant\", \"scoff\", \"torus\", \"ninny\", \"covey\", \"viper\", \"taken\", \"moral\", \"vogue\", \"owing\", \"token\", \"entry\", \"booth\", \"voter\", \"chide\", \"elfin\", \"ebony\", \"neigh\", \"minim\", \"melon\", \"kneed\", \"decoy\", \"voila\", \"ankle\", \"arrow\", \"mushy\", \"tribe\", \"cease\", \"eager\", \"birth\", \"graph\", \"odder\", \"terra\", \"weird\", \"tried\", \"clack\", \"color\", \"rough\", \"weigh\", \"uncut\", \"ladle\", \"strip\", \"craft\", \"minus\", \"dicey\", \"titan\", \"lucid\", \"vicar\", \"dress\", \"ditch\", \"gypsy\", \"pasta\", \"taffy\", \"flame\", \"swoop\", \"aloof\", \"sight\", \"broke\", \"teary\", \"chart\", \"sixty\", \"wordy\", \"sheer\", \"leper\", \"nosey\", \"bulge\", \"savor\", \"clamp\", \"funky\", \"foamy\", \"toxic\", \"brand\", \"plumb\", \"dingy\", \"butte\", \"drill\", \"tripe\", \"bicep\", \"tenor\", \"krill\", \"worse\", \"drama\", \"hyena\", \"think\", \"ratio\", \"cobra\", \"basil\", \"scrum\", \"bused\", \"phone\", \"court\", \"camel\", \"proof\", \"heard\", \"angel\", \"petal\", \"pouty\", \"throb\", \"maybe\", \"fetal\", \"sprig\", \"spine\", \"shout\", \"cadet\", \"macro\", \"dodgy\", \"satyr\", \"rarer\", \"binge\", \"trend\", \"nutty\", \"leapt\", \"amiss\", \"split\", \"myrrh\", \"width\", \"sonar\", \"tower\", \"baron\", \"fever\", \"waver\", \"spark\", \"belie\", \"sloop\", \"expel\", \"smote\", \"baler\", \"above\", \"north\", \"wafer\", \"scant\", \"frill\", \"awash\", \"snack\", \"scowl\", \"frail\", \"drift\", \"limbo\", \"fence\", \"motel\", \"ounce\", \"wreak\", \"revel\", \"talon\", \"prior\", \"knelt\", \"cello\", \"flake\", \"debug\", \"anode\", \"crime\", \"salve\", \"scout\", \"imbue\", \"pinky\", \"stave\", \"vague\", \"chock\", \"fight\", \"video\", \"stone\", \"teach\", \"cleft\", \"frost\", \"prawn\", \"booty\", \"twist\", \"apnea\", \"stiff\", \"plaza\", \"ledge\", \"tweak\", \"board\", \"grant\", \"medic\", \"bacon\", \"cable\", \"brawl\", \"slunk\", \"raspy\", \"forum\", \"drone\", \"women\", \"mucus\", \"boast\", \"toddy\", \"coven\", \"tumor\", \"truer\", \"wrath\", \"stall\", \"steam\", \"axial\", \"purer\", \"daily\", \"trail\", \"niche\", \"mealy\", \"juice\", \"nylon\", \"plump\", \"merry\", \"flail\", \"papal\", \"wheat\", \"berry\", \"cower\", \"erect\", \"brute\", \"leggy\", \"snipe\", \"sinew\", \"skier\", \"penny\", \"jumpy\", \"rally\", \"umbra\", \"scary\", \"modem\", \"gross\", \"avian\", \"greed\", \"satin\", \"tonic\", \"parka\", \"sniff\", \"livid\", \"stark\", \"trump\", \"giddy\", \"reuse\", \"taboo\", \"avoid\", \"quote\", \"devil\", \"liken\", \"gloss\", \"gayer\", \"beret\", \"noise\", \"gland\", \"dealt\", \"sling\", \"rumor\", \"opera\", \"thigh\", \"tonga\", \"flare\", \"wound\", \"white\", \"bulky\", \"etude\", \"horse\", \"circa\", \"paddy\", \"inbox\", \"fizzy\", \"grain\", \"exert\", \"surge\", \"gleam\", \"belle\", \"salvo\", \"crush\", \"fruit\", \"sappy\", \"taker\", \"tract\", \"ovine\", \"spiky\", \"frank\", \"reedy\", \"filth\", \"spasm\", \"heave\", \"mambo\", \"right\", \"clank\", \"trust\", \"lumen\", \"borne\", \"spook\", \"sauce\", \"amber\", \"lathe\", \"carat\", \"corer\", \"dirty\", \"slyly\", \"affix\", \"alloy\", \"taint\", \"sheep\", \"kinky\", \"wooly\", \"mauve\", \"flung\", \"yacht\", \"fried\", \"quail\", \"brunt\", \"grimy\", \"curvy\", \"cagey\", \"rinse\", \"deuce\", \"state\", \"grasp\", \"milky\", \"bison\", \"graft\", \"sandy\", \"baste\", \"flask\", \"hedge\", \"girly\", \"swash\", \"boney\", \"coupe\", \"endow\", \"abhor\", \"welch\", \"blade\", \"tight\", \"geese\", \"miser\", \"mirth\", \"cloud\", \"cabal\", \"leech\", \"close\", \"tenth\", \"pecan\", \"droit\", \"grail\", \"clone\", \"guise\", \"ralph\", \"tango\", \"biddy\", \"smith\", \"mower\", \"payee\", \"serif\", \"drape\", \"fifth\", \"spank\", \"glaze\", \"allot\", \"truck\", \"kayak\", \"virus\", \"testy\", \"tepee\", \"fully\", \"zonal\", \"metro\", \"curry\", \"grand\", \"banjo\", \"axion\", \"bezel\", \"occur\", \"chain\", \"nasal\", \"gooey\", \"filer\", \"brace\", \"allay\", \"pubic\", \"raven\", \"plead\", \"gnash\", \"flaky\", \"munch\", \"dully\", \"eking\", \"thing\", \"slink\", \"hurry\", \"theft\", \"shorn\", \"pygmy\", \"ranch\", \"wring\", \"lemon\", \"shore\", \"mamma\", \"froze\", \"newer\", \"style\", \"moose\", \"antic\", \"drown\", \"vegan\", \"chess\", \"guppy\", \"union\", \"lever\", \"lorry\", \"image\", \"cabby\", \"druid\", \"exact\", \"truth\", \"dopey\", \"spear\", \"cried\", \"chime\", \"crony\", \"stunk\", \"timid\", \"batch\", \"gauge\", \"rotor\", \"crack\", \"curve\", \"latte\", \"witch\", \"bunch\", \"repel\", \"anvil\", \"soapy\", \"meter\", \"broth\", \"madly\", \"dried\", \"scene\", \"known\", \"magma\", \"roost\", \"woman\", \"thong\", \"punch\", \"pasty\", \"downy\", \"knead\", \"whirl\", \"rapid\", \"clang\", \"anger\", \"drive\", \"goofy\", \"email\", \"music\", \"stuff\", \"bleep\", \"rider\", \"mecca\", \"folio\", \"setup\", \"verso\", \"quash\", \"fauna\", \"gummy\", \"happy\", \"newly\", \"fussy\", \"relic\", \"guava\", \"ratty\", \"fudge\", \"femur\", \"chirp\", \"forte\", \"alibi\", \"whine\", \"petty\", \"golly\", \"plait\", \"fleck\", \"felon\", \"gourd\", \"brown\", \"thrum\", \"ficus\", \"stash\", \"decry\", \"wiser\", \"junta\", \"visor\", \"daunt\", \"scree\", \"impel\", \"await\", \"press\", \"whose\", \"turbo\", \"stoop\", \"speak\", \"mangy\", \"eying\", \"inlet\", \"crone\", \"pulse\", \"mossy\", \"staid\", \"hence\", \"pinch\", \"teddy\", \"sully\", \"snore\", \"ripen\", \"snowy\", \"attic\", \"going\", \"leach\", \"mouth\", \"hound\", \"clump\", \"tonal\", \"bigot\", \"peril\", \"piece\", \"blame\", \"haute\", \"spied\", \"undid\", \"intro\", \"basal\", \"shine\", \"gecko\", \"rodeo\", \"guard\", \"steer\", \"loamy\", \"scamp\", \"scram\", \"manly\", \"hello\", \"vaunt\", \"organ\", \"feral\", \"knock\", \"extra\", \"condo\", \"adapt\", \"willy\", \"polka\", \"rayon\", \"skirt\", \"faith\", \"torso\", \"match\", \"mercy\", \"tepid\", \"sleek\", \"riser\", \"twixt\", \"peace\", \"flush\", \"catty\", \"login\", \"eject\", \"roger\", \"rival\", \"untie\", \"refit\", \"aorta\", \"adult\", \"judge\", \"rower\", \"artsy\", \"rural\", \"shave\"];\r\n\r\nexport const OtherWords = [\"aahed\", \"aalii\", \"aargh\", \"aarti\", \"abaca\", \"abaci\", \"abacs\", \"abaft\", \"abaka\", \"abamp\", \"aband\", \"abash\", \"abask\", \"abaya\", \"abbas\", \"abbed\", \"abbes\", \"abcee\", \"abeam\", \"abear\", \"abele\", \"abers\", \"abets\", \"abies\", \"abler\", \"ables\", \"ablet\", \"ablow\", \"abmho\", \"abohm\", \"aboil\", \"aboma\", \"aboon\", \"abord\", \"abore\", \"abram\", \"abray\", \"abrim\", \"abrin\", \"abris\", \"absey\", \"absit\", \"abuna\", \"abune\", \"abuts\", \"abuzz\", \"abyes\", \"abysm\", \"acais\", \"acari\", \"accas\", \"accoy\", \"acerb\", \"acers\", \"aceta\", \"achar\", \"ached\", \"aches\", \"achoo\", \"acids\", \"acidy\", \"acing\", \"acini\", \"ackee\", \"acker\", \"acmes\", \"acmic\", \"acned\", \"acnes\", \"acock\", \"acold\", \"acred\", \"acres\", \"acros\", \"acted\", \"actin\", \"acton\", \"acyls\", \"adaws\", \"adays\", \"adbot\", \"addax\", \"added\", \"adder\", \"addio\", \"addle\", \"adeem\", \"adhan\", \"adieu\", \"adios\", \"adits\", \"adman\", \"admen\", \"admix\", \"adobo\", \"adown\", \"adoze\", \"adrad\", \"adred\", \"adsum\", \"aduki\", \"adunc\", \"adust\", \"advew\", \"adyta\", \"adzed\", \"adzes\", \"aecia\", \"aedes\", \"aegis\", \"aeons\", \"aerie\", \"aeros\", \"aesir\", \"afald\", \"afara\", \"afars\", \"afear\", \"aflaj\", \"afore\", \"afrit\", \"afros\", \"agama\", \"agami\", \"agars\", \"agast\", \"agave\", \"agaze\", \"agene\", \"agers\", \"agger\", \"aggie\", \"aggri\", \"aggro\", \"aggry\", \"aghas\", \"agila\", \"agios\", \"agism\", \"agist\", \"agita\", \"aglee\", \"aglet\", \"agley\", \"agloo\", \"aglus\", \"agmas\", \"agoge\", \"agone\", \"agons\", \"agood\", \"agria\", \"agrin\", \"agros\", \"agued\", \"agues\", \"aguna\", \"aguti\", \"aheap\", \"ahent\", \"ahigh\", \"ahind\", \"ahing\", \"ahint\", \"ahold\", \"ahull\", \"ahuru\", \"aidas\", \"aided\", \"aides\", \"aidoi\", \"aidos\", \"aiery\", \"aigas\", \"aight\", \"ailed\", \"aimed\", \"aimer\", \"ainee\", \"ainga\", \"aioli\", \"aired\", \"airer\", \"airns\", \"airth\", \"airts\", \"aitch\", \"aitus\", \"aiver\", \"aiyee\", \"aizle\", \"ajies\", \"ajiva\", \"ajuga\", \"ajwan\", \"akees\", \"akela\", \"akene\", \"aking\", \"akita\", \"akkas\", \"alaap\", \"alack\", \"alamo\", \"aland\", \"alane\", \"alang\", \"alans\", \"alant\", \"alapa\", \"alaps\", \"alary\", \"alate\", \"alays\", \"albas\", \"albee\", \"alcid\", \"alcos\", \"aldea\", \"alder\", \"aldol\", \"aleck\", \"alecs\", \"alefs\", \"aleft\", \"aleph\", \"alews\", \"aleye\", \"alfas\", \"algal\", \"algas\", \"algid\", \"algin\", \"algor\", \"algum\", \"alias\", \"alifs\", \"aline\", \"alist\", \"aliya\", \"alkie\", \"alkos\", \"alkyd\", \"alkyl\", \"allee\", \"allel\", \"allis\", \"allod\", \"allyl\", \"almah\", \"almas\", \"almeh\", \"almes\", \"almud\", \"almug\", \"alods\", \"aloed\", \"aloes\", \"aloha\", \"aloin\", \"aloos\", \"alowe\", \"altho\", \"altos\", \"alula\", \"alums\", \"alure\", \"alvar\", \"alway\", \"amahs\", \"amain\", \"amate\", \"amaut\", \"amban\", \"ambit\", \"ambos\", \"ambry\", \"ameba\", \"ameer\", \"amene\", \"amens\", \"ament\", \"amias\", \"amice\", \"amici\", \"amide\", \"amido\", \"amids\", \"amies\", \"amiga\", \"amigo\", \"amine\", \"amino\", \"amins\", \"amirs\", \"amlas\", \"amman\", \"ammon\", \"ammos\", \"amnia\", \"amnic\", \"amnio\", \"amoks\", \"amole\", \"amort\", \"amour\", \"amove\", \"amowt\", \"amped\", \"ampul\", \"amrit\", \"amuck\", \"amyls\", \"anana\", \"anata\", \"ancho\", \"ancle\", \"ancon\", \"andro\", \"anear\", \"anele\", \"anent\", \"angas\", \"anglo\", \"anigh\", \"anile\", \"anils\", \"anima\", \"animi\", \"anion\", \"anise\", \"anker\", \"ankhs\", \"ankus\", \"anlas\", \"annal\", \"annas\", \"annat\", \"anoas\", \"anole\", \"anomy\", \"ansae\", \"antae\", \"antar\", \"antas\", \"anted\", \"antes\", \"antis\", \"antra\", \"antre\", \"antsy\", \"anura\", \"anyon\", \"apace\", \"apage\", \"apaid\", \"apayd\", \"apays\", \"apeak\", \"apeek\", \"apers\", \"apert\", \"apery\", \"apgar\", \"aphis\", \"apian\", \"apiol\", \"apish\", \"apism\", \"apode\", \"apods\", \"apoop\", \"aport\", \"appal\", \"appay\", \"appel\", \"appro\", \"appui\", \"appuy\", \"apres\", \"apses\", \"apsis\", \"apsos\", \"apted\", \"apter\", \"aquae\", \"aquas\", \"araba\", \"araks\", \"arame\", \"arars\", \"arbas\", \"arced\", \"archi\", \"arcos\", \"arcus\", \"ardeb\", \"ardri\", \"aread\", \"areae\", \"areal\", \"arear\", \"areas\", \"areca\", \"aredd\", \"arede\", \"arefy\", \"areic\", \"arene\", \"arepa\", \"arere\", \"arete\", \"arets\", \"arett\", \"argal\", \"argan\", \"argil\", \"argle\", \"argol\", \"argon\", \"argot\", \"argus\", \"arhat\", \"arias\", \"ariel\", \"ariki\", \"arils\", \"ariot\", \"arish\", \"arked\", \"arled\", \"arles\", \"armed\", \"armer\", \"armet\", \"armil\", \"arnas\", \"arnut\", \"aroba\", \"aroha\", \"aroid\", \"arpas\", \"arpen\", \"arrah\", \"arras\", \"arret\", \"arris\", \"arroz\", \"arsed\", \"arses\", \"arsey\", \"arsis\", \"artal\", \"artel\", \"artic\", \"artis\", \"aruhe\", \"arums\", \"arval\", \"arvee\", \"arvos\", \"aryls\", \"asana\", \"ascon\", \"ascus\", \"asdic\", \"ashed\", \"ashes\", \"ashet\", \"asked\", \"asker\", \"askoi\", \"askos\", \"aspen\", \"asper\", \"aspic\", \"aspie\", \"aspis\", \"aspro\", \"assai\", \"assam\", \"asses\", \"assez\", \"assot\", \"aster\", \"astir\", \"astun\", \"asura\", \"asway\", \"aswim\", \"asyla\", \"ataps\", \"ataxy\", \"atigi\", \"atilt\", \"atimy\", \"atlas\", \"atman\", \"atmas\", \"atmos\", \"atocs\", \"atoke\", \"atoks\", \"atoms\", \"atomy\", \"atony\", \"atopy\", \"atria\", \"atrip\", \"attap\", \"attar\", \"atuas\", \"audad\", \"auger\", \"aught\", \"aulas\", \"aulic\", \"auloi\", \"aulos\", \"aumil\", \"aunes\", \"aunts\", \"aurae\", \"aural\", \"aurar\", \"auras\", \"aurei\", \"aures\", \"auric\", \"auris\", \"aurum\", \"autos\", \"auxin\", \"avale\", \"avant\", \"avast\", \"avels\", \"avens\", \"avers\", \"avgas\", \"avine\", \"avion\", \"avise\", \"aviso\", \"avize\", \"avows\", \"avyze\", \"awarn\", \"awato\", \"awave\", \"aways\", \"awdls\", \"aweel\", \"aweto\", \"awing\", \"awmry\", \"awned\", \"awner\", \"awols\", \"awork\", \"axels\", \"axile\", \"axils\", \"axing\", \"axite\", \"axled\", \"axles\", \"axman\", \"axmen\", \"axoid\", \"axone\", \"axons\", \"ayahs\", \"ayaya\", \"ayelp\", \"aygre\", \"ayins\", \"ayont\", \"ayres\", \"ayrie\", \"azans\", \"azide\", \"azido\", \"azine\", \"azlon\", \"azoic\", \"azole\", \"azons\", \"azote\", \"azoth\", \"azuki\", \"azurn\", \"azury\", \"azygy\", \"azyme\", \"azyms\", \"baaed\", \"baals\", \"babas\", \"babel\", \"babes\", \"babka\", \"baboo\", \"babul\", \"babus\", \"bacca\", \"bacco\", \"baccy\", \"bacha\", \"bachs\", \"backs\", \"baddy\", \"baels\", \"baffs\", \"baffy\", \"bafts\", \"baghs\", \"bagie\", \"bahts\", \"bahus\", \"bahut\", \"bails\", \"bairn\", \"baisa\", \"baith\", \"baits\", \"baiza\", \"baize\", \"bajan\", \"bajra\", \"bajri\", \"bajus\", \"baked\", \"baken\", \"bakes\", \"bakra\", \"balas\", \"balds\", \"baldy\", \"baled\", \"bales\", \"balks\", \"balky\", \"balls\", \"bally\", \"balms\", \"baloo\", \"balsa\", \"balti\", \"balun\", \"balus\", \"bambi\", \"banak\", \"banco\", \"bancs\", \"banda\", \"bandh\", \"bands\", \"bandy\", \"baned\", \"banes\", \"bangs\", \"bania\", \"banks\", \"banns\", \"bants\", \"bantu\", \"banty\", \"banya\", \"bapus\", \"barbe\", \"barbs\", \"barby\", \"barca\", \"barde\", \"bardo\", \"bards\", \"bardy\", \"bared\", \"barer\", \"bares\", \"barfi\", \"barfs\", \"baric\", \"barks\", \"barky\", \"barms\", \"barmy\", \"barns\", \"barny\", \"barps\", \"barra\", \"barre\", \"barro\", \"barry\", \"barye\", \"basan\", \"based\", \"basen\", \"baser\", \"bases\", \"basho\", \"basij\", \"basks\", \"bason\", \"basse\", \"bassi\", \"basso\", \"bassy\", \"basta\", \"basti\", \"basto\", \"basts\", \"bated\", \"bates\", \"baths\", \"batik\", \"batta\", \"batts\", \"battu\", \"bauds\", \"bauks\", \"baulk\", \"baurs\", \"bavin\", \"bawds\", \"bawks\", \"bawls\", \"bawns\", \"bawrs\", \"bawty\", \"bayed\", \"bayer\", \"bayes\", \"bayle\", \"bayts\", \"bazar\", \"bazoo\", \"beads\", \"beaks\", \"beaky\", \"beals\", \"beams\", \"beamy\", \"beano\", \"beans\", \"beany\", \"beare\", \"bears\", \"beath\", \"beats\", \"beaty\", \"beaus\", \"beaut\", \"beaux\", \"bebop\", \"becap\", \"becke\", \"becks\", \"bedad\", \"bedel\", \"bedes\", \"bedew\", \"bedim\", \"bedye\", \"beedi\", \"beefs\", \"beeps\", \"beers\", \"beery\", \"beets\", \"befog\", \"begad\", \"begar\", \"begem\", \"begot\", \"begum\", \"beige\", \"beigy\", \"beins\", \"bekah\", \"belah\", \"belar\", \"belay\", \"belee\", \"belga\", \"bells\", \"belon\", \"belts\", \"bemad\", \"bemas\", \"bemix\", \"bemud\", \"bends\", \"bendy\", \"benes\", \"benet\", \"benga\", \"benis\", \"benne\", \"benni\", \"benny\", \"bento\", \"bents\", \"benty\", \"bepat\", \"beray\", \"beres\", \"bergs\", \"berko\", \"berks\", \"berme\", \"berms\", \"berob\", \"beryl\", \"besat\", \"besaw\", \"besee\", \"beses\", \"besit\", \"besom\", \"besot\", \"besti\", \"bests\", \"betas\", \"beted\", \"betes\", \"beths\", \"betid\", \"beton\", \"betta\", \"betty\", \"bever\", \"bevor\", \"bevue\", \"bevvy\", \"bewet\", \"bewig\", \"bezes\", \"bezil\", \"bezzy\", \"bhais\", \"bhaji\", \"bhang\", \"bhats\", \"bhels\", \"bhoot\", \"bhuna\", \"bhuts\", \"biach\", \"biali\", \"bialy\", \"bibbs\", \"bibes\", \"biccy\", \"bices\", \"bided\", \"bider\", \"bides\", \"bidet\", \"bidis\", \"bidon\", \"bield\", \"biers\", \"biffo\", \"biffs\", \"biffy\", \"bifid\", \"bigae\", \"biggs\", \"biggy\", \"bigha\", \"bight\", \"bigly\", \"bigos\", \"bijou\", \"biked\", \"biker\", \"bikes\", \"bikie\", \"bilbo\", \"bilby\", \"biled\", \"biles\", \"bilgy\", \"bilks\", \"bills\", \"bimah\", \"bimas\", \"bimbo\", \"binal\", \"bindi\", \"binds\", \"biner\", \"bines\", \"bings\", \"bingy\", \"binit\", \"binks\", \"bints\", \"biogs\", \"biont\", \"biota\", \"biped\", \"bipod\", \"birds\", \"birks\", \"birle\", \"birls\", \"biros\", \"birrs\", \"birse\", \"birsy\", \"bises\", \"bisks\", \"bisom\", \"biter\", \"bites\", \"bitos\", \"bitou\", \"bitsy\", \"bitte\", \"bitts\", \"bivia\", \"bivvy\", \"bizes\", \"bizzo\", \"bizzy\", \"blabs\", \"blads\", \"blady\", \"blaer\", \"blaes\", \"blaff\", \"blags\", \"blahs\", \"blain\", \"blams\", \"blart\", \"blase\", \"blash\", \"blate\", \"blats\", \"blatt\", \"blaud\", \"blawn\", \"blaws\", \"blays\", \"blear\", \"blebs\", \"blech\", \"blees\", \"blent\", \"blert\", \"blest\", \"blets\", \"bleys\", \"blimy\", \"bling\", \"blini\", \"blins\", \"bliny\", \"blips\", \"blist\", \"blite\", \"blits\", \"blive\", \"blobs\", \"blocs\", \"blogs\", \"blook\", \"bloop\", \"blore\", \"blots\", \"blows\", \"blowy\", \"blubs\", \"blude\", \"bluds\", \"bludy\", \"blued\", \"blues\", \"bluet\", \"bluey\", \"bluid\", \"blume\", \"blunk\", \"blurs\", \"blype\", \"boabs\", \"boaks\", \"boars\", \"boart\", \"boats\", \"bobac\", \"bobak\", \"bobas\", \"bobol\", \"bobos\", \"bocca\", \"bocce\", \"bocci\", \"boche\", \"bocks\", \"boded\", \"bodes\", \"bodge\", \"bodhi\", \"bodle\", \"boeps\", \"boets\", \"boeuf\", \"boffo\", \"boffs\", \"bogan\", \"bogey\", \"boggy\", \"bogie\", \"bogle\", \"bogue\", \"bogus\", \"bohea\", \"bohos\", \"boils\", \"boing\", \"boink\", \"boite\", \"boked\", \"bokeh\", \"bokes\", \"bokos\", \"bolar\", \"bolas\", \"bolds\", \"boles\", \"bolix\", \"bolls\", \"bolos\", \"bolts\", \"bolus\", \"bomas\", \"bombe\", \"bombo\", \"bombs\", \"bonce\", \"bonds\", \"boned\", \"boner\", \"bones\", \"bongs\", \"bonie\", \"bonks\", \"bonne\", \"bonny\", \"bonza\", \"bonze\", \"booai\", \"booay\", \"boobs\", \"boody\", \"booed\", \"boofy\", \"boogy\", \"boohs\", \"books\", \"booky\", \"bools\", \"booms\", \"boomy\", \"boong\", \"boons\", \"boord\", \"boors\", \"boose\", \"boots\", \"boppy\", \"borak\", \"boral\", \"boras\", \"borde\", \"bords\", \"bored\", \"boree\", \"borel\", \"borer\", \"bores\", \"borgo\", \"boric\", \"borks\", \"borms\", \"borna\", \"boron\", \"borts\", \"borty\", \"bortz\", \"bosie\", \"bosks\", \"bosky\", \"boson\", \"bosun\", \"botas\", \"botel\", \"botes\", \"bothy\", \"botte\", \"botts\", \"botty\", \"bouge\", \"bouks\", \"boult\", \"bouns\", \"bourd\", \"bourg\", \"bourn\", \"bouse\", \"bousy\", \"bouts\", \"bovid\", \"bowat\", \"bowed\", \"bower\", \"bowes\", \"bowet\", \"bowie\", \"bowls\", \"bowne\", \"bowrs\", \"bowse\", \"boxed\", \"boxen\", \"boxes\", \"boxla\", \"boxty\", \"boyar\", \"boyau\", \"boyed\", \"boyfs\", \"boygs\", \"boyla\", \"boyos\", \"boysy\", \"bozos\", \"braai\", \"brach\", \"brack\", \"bract\", \"brads\", \"braes\", \"brags\", \"brail\", \"braks\", \"braky\", \"brame\", \"brane\", \"brank\", \"brans\", \"brant\", \"brast\", \"brats\", \"brava\", \"bravi\", \"braws\", \"braxy\", \"brays\", \"braza\", \"braze\", \"bream\", \"brede\", \"breds\", \"breem\", \"breer\", \"brees\", \"breid\", \"breis\", \"breme\", \"brens\", \"brent\", \"brere\", \"brers\", \"breve\", \"brews\", \"breys\", \"brier\", \"bries\", \"brigs\", \"briki\", \"briks\", \"brill\", \"brims\", \"brins\", \"brios\", \"brise\", \"briss\", \"brith\", \"brits\", \"britt\", \"brize\", \"broch\", \"brock\", \"brods\", \"brogh\", \"brogs\", \"brome\", \"bromo\", \"bronc\", \"brond\", \"brool\", \"broos\", \"brose\", \"brosy\", \"brows\", \"brugh\", \"bruin\", \"bruit\", \"brule\", \"brume\", \"brung\", \"brusk\", \"brust\", \"bruts\", \"buats\", \"buaze\", \"bubal\", \"bubas\", \"bubba\", \"bubbe\", \"bubby\", \"bubus\", \"buchu\", \"bucko\", \"bucks\", \"bucku\", \"budas\", \"budis\", \"budos\", \"buffa\", \"buffe\", \"buffi\", \"buffo\", \"buffs\", \"buffy\", \"bufos\", \"bufty\", \"buhls\", \"buhrs\", \"buiks\", \"buist\", \"bukes\", \"bulbs\", \"bulgy\", \"bulks\", \"bulla\", \"bulls\", \"bulse\", \"bumbo\", \"bumfs\", \"bumph\", \"bumps\", \"bumpy\", \"bunas\", \"bunce\", \"bunco\", \"bunde\", \"bundh\", \"bunds\", \"bundt\", \"bundu\", \"bundy\", \"bungs\", \"bungy\", \"bunia\", \"bunje\", \"bunjy\", \"bunko\", \"bunks\", \"bunns\", \"bunts\", \"bunty\", \"bunya\", \"buoys\", \"buppy\", \"buran\", \"buras\", \"burbs\", \"burds\", \"buret\", \"burfi\", \"burgh\", \"burgs\", \"burin\", \"burka\", \"burke\", \"burks\", \"burls\", \"burns\", \"buroo\", \"burps\", \"burqa\", \"burro\", \"burrs\", \"burry\", \"bursa\", \"burse\", \"busby\", \"buses\", \"busks\", \"busky\", \"bussu\", \"busti\", \"busts\", \"busty\", \"buteo\", \"butes\", \"butle\", \"butoh\", \"butts\", \"butty\", \"butut\", \"butyl\", \"buzzy\", \"bwana\", \"bwazi\", \"byded\", \"bydes\", \"byked\", \"bykes\", \"byres\", \"byrls\", \"byssi\", \"bytes\", \"byway\", \"caaed\", \"cabas\", \"caber\", \"cabob\", \"caboc\", \"cabre\", \"cacas\", \"cacks\", \"cacky\", \"cadee\", \"cades\", \"cadge\", \"cadgy\", \"cadie\", \"cadis\", \"cadre\", \"caeca\", \"caese\", \"cafes\", \"caffs\", \"caged\", \"cager\", \"cages\", \"cagot\", \"cahow\", \"caids\", \"cains\", \"caird\", \"cajon\", \"cajun\", \"caked\", \"cakes\", \"cakey\", \"calfs\", \"calid\", \"calif\", \"calix\", \"calks\", \"calla\", \"calls\", \"calms\", \"calmy\", \"calos\", \"calpa\", \"calps\", \"calve\", \"calyx\", \"caman\", \"camas\", \"cames\", \"camis\", \"camos\", \"campi\", \"campo\", \"camps\", \"campy\", \"camus\", \"caned\", \"caneh\", \"caner\", \"canes\", \"cangs\", \"canid\", \"canna\", \"canns\", \"canso\", \"canst\", \"canto\", \"cants\", \"canty\", \"capas\", \"caped\", \"capes\", \"capex\", \"caphs\", \"capiz\", \"caple\", \"capon\", \"capos\", \"capot\", \"capri\", \"capul\", \"carap\", \"carbo\", \"carbs\", \"carby\", \"cardi\", \"cards\", \"cardy\", \"cared\", \"carer\", \"cares\", \"caret\", \"carex\", \"carks\", \"carle\", \"carls\", \"carns\", \"carny\", \"carob\", \"carom\", \"caron\", \"carpi\", \"carps\", \"carrs\", \"carse\", \"carta\", \"carte\", \"carts\", \"carvy\", \"casas\", \"casco\", \"cased\", \"cases\", \"casks\", \"casky\", \"casts\", \"casus\", \"cates\", \"cauda\", \"cauks\", \"cauld\", \"cauls\", \"caums\", \"caups\", \"cauri\", \"causa\", \"cavas\", \"caved\", \"cavel\", \"caver\", \"caves\", \"cavie\", \"cawed\", \"cawks\", \"caxon\", \"ceaze\", \"cebid\", \"cecal\", \"cecum\", \"ceded\", \"ceder\", \"cedes\", \"cedis\", \"ceiba\", \"ceili\", \"ceils\", \"celeb\", \"cella\", \"celli\", \"cells\", \"celom\", \"celts\", \"cense\", \"cento\", \"cents\", \"centu\", \"ceorl\", \"cepes\", \"cerci\", \"cered\", \"ceres\", \"cerge\", \"ceria\", \"ceric\", \"cerne\", \"ceroc\", \"ceros\", \"certs\", \"certy\", \"cesse\", \"cesta\", \"cesti\", \"cetes\", \"cetyl\", \"cezve\", \"chace\", \"chack\", \"chaco\", \"chado\", \"chads\", \"chaft\", \"chais\", \"chals\", \"chams\", \"chana\", \"chang\", \"chank\", \"chape\", \"chaps\", \"chapt\", \"chara\", \"chare\", \"chark\", \"charr\", \"chars\", \"chary\", \"chats\", \"chave\", \"chavs\", \"chawk\", \"chaws\", \"chaya\", \"chays\", \"cheep\", \"chefs\", \"cheka\", \"chela\", \"chelp\", \"chemo\", \"chems\", \"chere\", \"chert\", \"cheth\", \"chevy\", \"chews\", \"chewy\", \"chiao\", \"chias\", \"chibs\", \"chica\", \"chich\", \"chico\", \"chics\", \"chiel\", \"chiks\", \"chile\", \"chimb\", \"chimo\", \"chimp\", \"chine\", \"ching\", \"chino\", \"chins\", \"chips\", \"chirk\", \"chirl\", \"chirm\", \"chiro\", \"chirr\", \"chirt\", \"chiru\", \"chits\", \"chive\", \"chivs\", \"chivy\", \"chizz\", \"choco\", \"chocs\", \"chode\", \"chogs\", \"choil\", \"choko\", \"choky\", \"chola\", \"choli\", \"cholo\", \"chomp\", \"chons\", \"choof\", \"chook\", \"choom\", \"choon\", \"chops\", \"chota\", \"chott\", \"chout\", \"choux\", \"chowk\", \"chows\", \"chubs\", \"chufa\", \"chuff\", \"chugs\", \"chums\", \"churl\", \"churr\", \"chuse\", \"chuts\", \"chyle\", \"chyme\", \"chynd\", \"cibol\", \"cided\", \"cides\", \"ciels\", \"ciggy\", \"cilia\", \"cills\", \"cimar\", \"cimex\", \"cinct\", \"cines\", \"cinqs\", \"cions\", \"cippi\", \"circs\", \"cires\", \"cirls\", \"cirri\", \"cisco\", \"cissy\", \"cists\", \"cital\", \"cited\", \"citer\", \"cites\", \"cives\", \"civet\", \"civie\", \"civvy\", \"clach\", \"clade\", \"clads\", \"claes\", \"clags\", \"clame\", \"clams\", \"clans\", \"claps\", \"clapt\", \"claro\", \"clart\", \"clary\", \"clast\", \"clats\", \"claut\", \"clave\", \"clavi\", \"claws\", \"clays\", \"cleck\", \"cleek\", \"cleep\", \"clefs\", \"clegs\", \"cleik\", \"clems\", \"clepe\", \"clept\", \"cleve\", \"clews\", \"clied\", \"clies\", \"clift\", \"clime\", \"cline\", \"clint\", \"clipe\", \"clips\", \"clipt\", \"clits\", \"cloam\", \"clods\", \"cloff\", \"clogs\", \"cloke\", \"clomb\", \"clomp\", \"clonk\", \"clons\", \"cloop\", \"cloot\", \"clops\", \"clote\", \"clots\", \"clour\", \"clous\", \"clows\", \"cloye\", \"cloys\", \"cloze\", \"clubs\", \"clues\", \"cluey\", \"clunk\", \"clype\", \"cnida\", \"coact\", \"coady\", \"coala\", \"coals\", \"coaly\", \"coapt\", \"coarb\", \"coate\", \"coati\", \"coats\", \"cobbs\", \"cobby\", \"cobia\", \"coble\", \"cobza\", \"cocas\", \"cocci\", \"cocco\", \"cocks\", \"cocky\", \"cocos\", \"codas\", \"codec\", \"coded\", \"coden\", \"coder\", \"codes\", \"codex\", \"codon\", \"coeds\", \"coffs\", \"cogie\", \"cogon\", \"cogue\", \"cohab\", \"cohen\", \"cohoe\", \"cohog\", \"cohos\", \"coifs\", \"coign\", \"coils\", \"coins\", \"coirs\", \"coits\", \"coked\", \"cokes\", \"colas\", \"colby\", \"colds\", \"coled\", \"coles\", \"coley\", \"colic\", \"colin\", \"colls\", \"colly\", \"colog\", \"colts\", \"colza\", \"comae\", \"comal\", \"comas\", \"combe\", \"combi\", \"combo\", \"combs\", \"comby\", \"comer\", \"comes\", \"comix\", \"commo\", \"comms\", \"commy\", \"compo\", \"comps\", \"compt\", \"comte\", \"comus\", \"coned\", \"cones\", \"coney\", \"confs\", \"conga\", \"conge\", \"congo\", \"conia\", \"conin\", \"conks\", \"conky\", \"conne\", \"conns\", \"conte\", \"conto\", \"conus\", \"convo\", \"cooch\", \"cooed\", \"cooee\", \"cooer\", \"cooey\", \"coofs\", \"cooks\", \"cooky\", \"cools\", \"cooly\", \"coomb\", \"cooms\", \"coomy\", \"coops\", \"coopt\", \"coost\", \"coots\", \"cooze\", \"copal\", \"copay\", \"coped\", \"copen\", \"coper\", \"copes\", \"coppy\", \"copra\", \"copsy\", \"coqui\", \"coram\", \"corbe\", \"corby\", \"cords\", \"cored\", \"cores\", \"corey\", \"corgi\", \"coria\", \"corks\", \"corky\", \"corms\", \"corni\", \"corno\", \"corns\", \"cornu\", \"corps\", \"corse\", \"corso\", \"cosec\", \"cosed\", \"coses\", \"coset\", \"cosey\", \"cosie\", \"costa\", \"coste\", \"costs\", \"cotan\", \"coted\", \"cotes\", \"coths\", \"cotta\", \"cotts\", \"coude\", \"coups\", \"courb\", \"courd\", \"coure\", \"cours\", \"couta\", \"couth\", \"coved\", \"coves\", \"covin\", \"cowal\", \"cowan\", \"cowed\", \"cowks\", \"cowls\", \"cowps\", \"cowry\", \"coxae\", \"coxal\", \"coxed\", \"coxes\", \"coxib\", \"coyau\", \"coyed\", \"coyer\", \"coypu\", \"cozed\", \"cozen\", \"cozes\", \"cozey\", \"cozie\", \"craal\", \"crabs\", \"crags\", \"craic\", \"craig\", \"crake\", \"crame\", \"crams\", \"crans\", \"crape\", \"craps\", \"crapy\", \"crare\", \"craws\", \"crays\", \"creds\", \"creel\", \"crees\", \"crems\", \"crena\", \"creps\", \"crepy\", \"crewe\", \"crews\", \"crias\", \"cribs\", \"cries\", \"crims\", \"crine\", \"crios\", \"cripe\", \"crips\", \"crise\", \"crith\", \"crits\", \"croci\", \"crocs\", \"croft\", \"crogs\", \"cromb\", \"crome\", \"cronk\", \"crons\", \"crool\", \"croon\", \"crops\", \"crore\", \"crost\", \"crout\", \"crows\", \"croze\", \"cruck\", \"crudo\", \"cruds\", \"crudy\", \"crues\", \"cruet\", \"cruft\", \"crunk\", \"cruor\", \"crura\", \"cruse\", \"crusy\", \"cruve\", \"crwth\", \"cryer\", \"ctene\", \"cubby\", \"cubeb\", \"cubed\", \"cuber\", \"cubes\", \"cubit\", \"cuddy\", \"cuffo\", \"cuffs\", \"cuifs\", \"cuing\", \"cuish\", \"cuits\", \"cukes\", \"culch\", \"culet\", \"culex\", \"culls\", \"cully\", \"culms\", \"culpa\", \"culti\", \"cults\", \"culty\", \"cumec\", \"cundy\", \"cunei\", \"cunit\", \"cunts\", \"cupel\", \"cupid\", \"cuppa\", \"cuppy\", \"curat\", \"curbs\", \"curch\", \"curds\", \"curdy\", \"cured\", \"curer\", \"cures\", \"curet\", \"curfs\", \"curia\", \"curie\", \"curli\", \"curls\", \"curns\", \"curny\", \"currs\", \"cursi\", \"curst\", \"cusec\", \"cushy\", \"cusks\", \"cusps\", \"cuspy\", \"cusso\", \"cusum\", \"cutch\", \"cuter\", \"cutes\", \"cutey\", \"cutin\", \"cutis\", \"cutto\", \"cutty\", \"cutup\", \"cuvee\", \"cuzes\", \"cwtch\", \"cyano\", \"cyans\", \"cycad\", \"cycas\", \"cyclo\", \"cyder\", \"cylix\", \"cymae\", \"cymar\", \"cymas\", \"cymes\", \"cymol\", \"cysts\", \"cytes\", \"cyton\", \"czars\", \"daals\", \"dabba\", \"daces\", \"dacha\", \"dacks\", \"dadah\", \"dadas\", \"dados\", \"daffs\", \"daffy\", \"dagga\", \"daggy\", \"dagos\", \"dahls\", \"daiko\", \"daine\", \"daint\", \"daker\", \"daled\", \"dales\", \"dalis\", \"dalle\", \"dalts\", \"daman\", \"damar\", \"dames\", \"damme\", \"damns\", \"damps\", \"dampy\", \"dancy\", \"dangs\", \"danio\", \"danks\", \"danny\", \"dants\", \"daraf\", \"darbs\", \"darcy\", \"dared\", \"darer\", \"dares\", \"darga\", \"dargs\", \"daric\", \"daris\", \"darks\", \"darns\", \"darre\", \"darts\", \"darzi\", \"dashi\", \"dashy\", \"datal\", \"dated\", \"dater\", \"dates\", \"datos\", \"datto\", \"daube\", \"daubs\", \"dauby\", \"dauds\", \"dault\", \"daurs\", \"dauts\", \"daven\", \"davit\", \"dawah\", \"dawds\", \"dawed\", \"dawen\", \"dawks\", \"dawns\", \"dawts\", \"dayan\", \"daych\", \"daynt\", \"dazed\", \"dazer\", \"dazes\", \"deads\", \"deair\", \"deals\", \"deans\", \"deare\", \"dearn\", \"dears\", \"deary\", \"deash\", \"deave\", \"deaws\", \"deawy\", \"debag\", \"debby\", \"debel\", \"debes\", \"debts\", \"debud\", \"debur\", \"debus\", \"debye\", \"decad\", \"decaf\", \"decan\", \"decko\", \"decks\", \"decos\", \"dedal\", \"deeds\", \"deedy\", \"deely\", \"deems\", \"deens\", \"deeps\", \"deere\", \"deers\", \"deets\", \"deeve\", \"deevs\", \"defat\", \"deffo\", \"defis\", \"defog\", \"degas\", \"degum\", \"degus\", \"deice\", \"deids\", \"deify\", \"deils\", \"deism\", \"deist\", \"deked\", \"dekes\", \"dekko\", \"deled\", \"deles\", \"delfs\", \"delft\", \"delis\", \"dells\", \"delly\", \"delos\", \"delph\", \"delts\", \"deman\", \"demes\", \"demic\", \"demit\", \"demob\", \"demoi\", \"demos\", \"dempt\", \"denar\", \"denay\", \"dench\", \"denes\", \"denet\", \"denis\", \"dents\", \"deoxy\", \"derat\", \"deray\", \"dered\", \"deres\", \"derig\", \"derma\", \"derms\", \"derns\", \"derny\", \"deros\", \"derro\", \"derry\", \"derth\", \"dervs\", \"desex\", \"deshi\", \"desis\", \"desks\", \"desse\", \"devas\", \"devel\", \"devis\", \"devon\", \"devos\", \"devot\", \"dewan\", \"dewar\", \"dewax\", \"dewed\", \"dexes\", \"dexie\", \"dhaba\", \"dhaks\", \"dhals\", \"dhikr\", \"dhobi\", \"dhole\", \"dholl\", \"dhols\", \"dhoti\", \"dhows\", \"dhuti\", \"diact\", \"dials\", \"diane\", \"diazo\", \"dibbs\", \"diced\", \"dicer\", \"dices\", \"dicht\", \"dicks\", \"dicky\", \"dicot\", \"dicta\", \"dicts\", \"dicty\", \"diddy\", \"didie\", \"didos\", \"didst\", \"diebs\", \"diels\", \"diene\", \"diets\", \"diffs\", \"dight\", \"dikas\", \"diked\", \"diker\", \"dikes\", \"dikey\", \"dildo\", \"dilli\", \"dills\", \"dimbo\", \"dimer\", \"dimes\", \"dimps\", \"dinar\", \"dined\", \"dines\", \"dinge\", \"dings\", \"dinic\", \"dinks\", \"dinky\", \"dinna\", \"dinos\", \"dints\", \"diols\", \"diota\", \"dippy\", \"dipso\", \"diram\", \"direr\", \"dirke\", \"dirks\", \"dirls\", \"dirts\", \"disas\", \"disci\", \"discs\", \"dishy\", \"disks\", \"disme\", \"dital\", \"ditas\", \"dited\", \"dites\", \"ditsy\", \"ditts\", \"ditzy\", \"divan\", \"divas\", \"dived\", \"dives\", \"divis\", \"divna\", \"divos\", \"divot\", \"divvy\", \"diwan\", \"dixie\", \"dixit\", \"diyas\", \"dizen\", \"djinn\", \"djins\", \"doabs\", \"doats\", \"dobby\", \"dobes\", \"dobie\", \"dobla\", \"dobra\", \"dobro\", \"docht\", \"docks\", \"docos\", \"docus\", \"doddy\", \"dodos\", \"doeks\", \"doers\", \"doest\", \"doeth\", \"doffs\", \"dogan\", \"doges\", \"dogey\", \"doggo\", \"doggy\", \"dogie\", \"dohyo\", \"doilt\", \"doily\", \"doits\", \"dojos\", \"dolce\", \"dolci\", \"doled\", \"doles\", \"dolia\", \"dolls\", \"dolma\", \"dolor\", \"dolos\", \"dolts\", \"domal\", \"domed\", \"domes\", \"domic\", \"donah\", \"donas\", \"donee\", \"doner\", \"donga\", \"dongs\", \"donko\", \"donna\", \"donne\", \"donny\", \"donsy\", \"doobs\", \"dooce\", \"doody\", \"dooks\", \"doole\", \"dools\", \"dooly\", \"dooms\", \"doomy\", \"doona\", \"doorn\", \"doors\", \"doozy\", \"dopas\", \"doped\", \"doper\", \"dopes\", \"dorad\", \"dorba\", \"dorbs\", \"doree\", \"dores\", \"doric\", \"doris\", \"dorks\", \"dorky\", \"dorms\", \"dormy\", \"dorps\", \"dorrs\", \"dorsa\", \"dorse\", \"dorts\", \"dorty\", \"dosai\", \"dosas\", \"dosed\", \"doseh\", \"doser\", \"doses\", \"dosha\", \"dotal\", \"doted\", \"doter\", \"dotes\", \"dotty\", \"douar\", \"douce\", \"doucs\", \"douks\", \"doula\", \"douma\", \"doums\", \"doups\", \"doura\", \"douse\", \"douts\", \"doved\", \"doven\", \"dover\", \"doves\", \"dovie\", \"dowar\", \"dowds\", \"dowed\", \"dower\", \"dowie\", \"dowle\", \"dowls\", \"dowly\", \"downa\", \"downs\", \"dowps\", \"dowse\", \"dowts\", \"doxed\", \"doxes\", \"doxie\", \"doyen\", \"doyly\", \"dozed\", \"dozer\", \"dozes\", \"drabs\", \"drack\", \"draco\", \"draff\", \"drags\", \"drail\", \"drams\", \"drant\", \"draps\", \"drats\", \"drave\", \"draws\", \"drays\", \"drear\", \"dreck\", \"dreed\", \"dreer\", \"drees\", \"dregs\", \"dreks\", \"drent\", \"drere\", \"drest\", \"dreys\", \"dribs\", \"drice\", \"dries\", \"drily\", \"drips\", \"dript\", \"droid\", \"droil\", \"droke\", \"drole\", \"drome\", \"drony\", \"droob\", \"droog\", \"drook\", \"drops\", \"dropt\", \"drouk\", \"drows\", \"drubs\", \"drugs\", \"drums\", \"drupe\", \"druse\", \"drusy\", \"druxy\", \"dryad\", \"dryas\", \"dsobo\", \"dsomo\", \"duads\", \"duals\", \"duans\", \"duars\", \"dubbo\", \"ducal\", \"ducat\", \"duces\", \"ducks\", \"ducky\", \"ducts\", \"duddy\", \"duded\", \"dudes\", \"duels\", \"duets\", \"duett\", \"duffs\", \"dufus\", \"duing\", \"duits\", \"dukas\", \"duked\", \"dukes\", \"dukka\", \"dulce\", \"dules\", \"dulia\", \"dulls\", \"dulse\", \"dumas\", \"dumbo\", \"dumbs\", \"dumka\", \"dumky\", \"dumps\", \"dunam\", \"dunch\", \"dunes\", \"dungs\", \"dungy\", \"dunks\", \"dunno\", \"dunny\", \"dunsh\", \"dunts\", \"duomi\", \"duomo\", \"duped\", \"duper\", \"dupes\", \"duple\", \"duply\", \"duppy\", \"dural\", \"duras\", \"dured\", \"dures\", \"durgy\", \"durns\", \"duroc\", \"duros\", \"duroy\", \"durra\", \"durrs\", \"durry\", \"durst\", \"durum\", \"durzi\", \"dusks\", \"dusts\", \"duxes\", \"dwaal\", \"dwale\", \"dwalm\", \"dwams\", \"dwang\", \"dwaum\", \"dweeb\", \"dwile\", \"dwine\", \"dyads\", \"dyers\", \"dykon\", \"dynel\", \"dynes\", \"dzhos\", \"eagre\", \"ealed\", \"eales\", \"eaned\", \"eards\", \"eared\", \"earls\", \"earns\", \"earnt\", \"earst\", \"eased\", \"easer\", \"eases\", \"easle\", \"easts\", \"eathe\", \"eaved\", \"eaves\", \"ebbed\", \"ebbet\", \"ebons\", \"ebook\", \"ecads\", \"eched\", \"eches\", \"echos\", \"ecrus\", \"edema\", \"edged\", \"edger\", \"edges\", \"edile\", \"edits\", \"educe\", \"educt\", \"eejit\", \"eensy\", \"eeven\", \"eevns\", \"effed\", \"egads\", \"egers\", \"egest\", \"eggar\", \"egged\", \"egger\", \"egmas\", \"ehing\", \"eider\", \"eidos\", \"eigne\", \"eiked\", \"eikon\", \"eilds\", \"eisel\", \"ejido\", \"ekkas\", \"elain\", \"eland\", \"elans\", \"elchi\", \"eldin\", \"elemi\", \"elfed\", \"eliad\", \"elint\", \"elmen\", \"eloge\", \"elogy\", \"eloin\", \"elops\", \"elpee\", \"elsin\", \"elute\", \"elvan\", \"elven\", \"elver\", \"elves\", \"emacs\", \"embar\", \"embay\", \"embog\", \"embow\", \"embox\", \"embus\", \"emeer\", \"emend\", \"emerg\", \"emery\", \"emeus\", \"emics\", \"emirs\", \"emits\", \"emmas\", \"emmer\", \"emmet\", \"emmew\", \"emmys\", \"emoji\", \"emong\", \"emote\", \"emove\", \"empts\", \"emule\", \"emure\", \"emyde\", \"emyds\", \"enarm\", \"enate\", \"ended\", \"ender\", \"endew\", \"endue\", \"enews\", \"enfix\", \"eniac\", \"enlit\", \"enmew\", \"ennog\", \"enoki\", \"enols\", \"enorm\", \"enows\", \"enrol\", \"ensew\", \"ensky\", \"entia\", \"enure\", \"enurn\", \"envoi\", \"enzym\", \"eorls\", \"eosin\", \"epact\", \"epees\", \"ephah\", \"ephas\", \"ephod\", \"ephor\", \"epics\", \"epode\", \"epopt\", \"epris\", \"eques\", \"equid\", \"erbia\", \"erevs\", \"ergon\", \"ergos\", \"ergot\", \"erhus\", \"erica\", \"erick\", \"erics\", \"ering\", \"erned\", \"ernes\", \"erose\", \"erred\", \"erses\", \"eruct\", \"erugo\", \"eruvs\", \"erven\", \"ervil\", \"escar\", \"escot\", \"esile\", \"eskar\", \"esker\", \"esnes\", \"esses\", \"estoc\", \"estop\", \"estro\", \"etage\", \"etape\", \"etats\", \"etens\", \"ethal\", \"ethne\", \"ethyl\", \"etics\", \"etnas\", \"ettin\", \"ettle\", \"etuis\", \"etwee\", \"etyma\", \"eughs\", \"euked\", \"eupad\", \"euros\", \"eusol\", \"evens\", \"evert\", \"evets\", \"evhoe\", \"evils\", \"evite\", \"evohe\", \"ewers\", \"ewest\", \"ewhow\", \"ewked\", \"exams\", \"exeat\", \"execs\", \"exeem\", \"exeme\", \"exfil\", \"exies\", \"exine\", \"exing\", \"exits\", \"exode\", \"exome\", \"exons\", \"expat\", \"expos\", \"exude\", \"exuls\", \"exurb\", \"eyass\", \"eyers\", \"eyots\", \"eyras\", \"eyres\", \"eyrie\", \"eyrir\", \"ezine\", \"fabby\", \"faced\", \"facer\", \"faces\", \"facia\", \"facta\", \"facts\", \"faddy\", \"faded\", \"fader\", \"fades\", \"fadge\", \"fados\", \"faena\", \"faery\", \"faffs\", \"faffy\", \"fagin\", \"faiks\", \"fails\", \"faine\", \"fains\", \"fairs\", \"faked\", \"faker\", \"fakes\", \"fakey\", \"fakie\", \"fakir\", \"falaj\", \"falls\", \"famed\", \"fames\", \"fanal\", \"fands\", \"fanes\", \"fanga\", \"fango\", \"fangs\", \"fanks\", \"fanon\", \"fanos\", \"fanum\", \"faqir\", \"farad\", \"farci\", \"farcy\", \"fards\", \"fared\", \"farer\", \"fares\", \"farle\", \"farls\", \"farms\", \"faros\", \"farro\", \"farse\", \"farts\", \"fasci\", \"fasti\", \"fasts\", \"fated\", \"fates\", \"fatly\", \"fatso\", \"fatwa\", \"faugh\", \"fauld\", \"fauns\", \"faurd\", \"fauts\", \"fauve\", \"favas\", \"favel\", \"faver\", \"faves\", \"favus\", \"fawns\", \"fawny\", \"faxed\", \"faxes\", \"fayed\", \"fayer\", \"fayne\", \"fayre\", \"fazed\", \"fazes\", \"feals\", \"feare\", \"fears\", \"feart\", \"fease\", \"feats\", \"feaze\", \"feces\", \"fecht\", \"fecit\", \"fecks\", \"fedex\", \"feebs\", \"feeds\", \"feels\", \"feens\", \"feers\", \"feese\", \"feeze\", \"fehme\", \"feint\", \"feist\", \"felch\", \"felid\", \"fells\", \"felly\", \"felts\", \"felty\", \"femal\", \"femes\", \"femmy\", \"fends\", \"fendy\", \"fenis\", \"fenks\", \"fenny\", \"fents\", \"feods\", \"feoff\", \"ferer\", \"feres\", \"feria\", \"ferly\", \"fermi\", \"ferms\", \"ferns\", \"ferny\", \"fesse\", \"festa\", \"fests\", \"festy\", \"fetas\", \"feted\", \"fetes\", \"fetor\", \"fetta\", \"fetts\", \"fetwa\", \"feuar\", \"feuds\", \"feued\", \"feyed\", \"feyer\", \"feyly\", \"fezes\", \"fezzy\", \"fiars\", \"fiats\", \"fibro\", \"fices\", \"fiche\", \"fichu\", \"ficin\", \"ficos\", \"fides\", \"fidge\", \"fidos\", \"fiefs\", \"fient\", \"fiere\", \"fiers\", \"fiest\", \"fifed\", \"fifer\", \"fifes\", \"fifis\", \"figgy\", \"figos\", \"fiked\", \"fikes\", \"filar\", \"filch\", \"filed\", \"files\", \"filii\", \"filks\", \"fille\", \"fillo\", \"fills\", \"filmi\", \"films\", \"filos\", \"filum\", \"finca\", \"finds\", \"fined\", \"fines\", \"finis\", \"finks\", \"finny\", \"finos\", \"fiord\", \"fiqhs\", \"fique\", \"fired\", \"firer\", \"fires\", \"firie\", \"firks\", \"firms\", \"firns\", \"firry\", \"firth\", \"fiscs\", \"fisks\", \"fists\", \"fisty\", \"fitch\", \"fitly\", \"fitna\", \"fitte\", \"fitts\", \"fiver\", \"fives\", \"fixed\", \"fixes\", \"fixit\", \"fjeld\", \"flabs\", \"flaff\", \"flags\", \"flaks\", \"flamm\", \"flams\", \"flamy\", \"flane\", \"flans\", \"flaps\", \"flary\", \"flats\", \"flava\", \"flawn\", \"flaws\", \"flawy\", \"flaxy\", \"flays\", \"fleam\", \"fleas\", \"fleek\", \"fleer\", \"flees\", \"flegs\", \"fleme\", \"fleur\", \"flews\", \"flexi\", \"flexo\", \"fleys\", \"flics\", \"flied\", \"flies\", \"flimp\", \"flims\", \"flips\", \"flirs\", \"flisk\", \"flite\", \"flits\", \"flitt\", \"flobs\", \"flocs\", \"floes\", \"flogs\", \"flong\", \"flops\", \"flors\", \"flory\", \"flosh\", \"flota\", \"flote\", \"flows\", \"flubs\", \"flued\", \"flues\", \"fluey\", \"fluky\", \"flump\", \"fluor\", \"flurr\", \"fluty\", \"fluyt\", \"flyby\", \"flype\", \"flyte\", \"foals\", \"foams\", \"foehn\", \"fogey\", \"fogie\", \"fogle\", \"fogou\", \"fohns\", \"foids\", \"foils\", \"foins\", \"folds\", \"foley\", \"folia\", \"folic\", \"folie\", \"folks\", \"folky\", \"fomes\", \"fonda\", \"fonds\", \"fondu\", \"fones\", \"fonly\", \"fonts\", \"foods\", \"foody\", \"fools\", \"foots\", \"footy\", \"foram\", \"forbs\", \"forby\", \"fordo\", \"fords\", \"forel\", \"fores\", \"forex\", \"forks\", \"forky\", \"forme\", \"forms\", \"forts\", \"forza\", \"forze\", \"fossa\", \"fosse\", \"fouat\", \"fouds\", \"fouer\", \"fouet\", \"foule\", \"fouls\", \"fount\", \"fours\", \"fouth\", \"fovea\", \"fowls\", \"fowth\", \"foxed\", \"foxes\", \"foxie\", \"foyle\", \"foyne\", \"frabs\", \"frack\", \"fract\", \"frags\", \"fraim\", \"franc\", \"frape\", \"fraps\", \"frass\", \"frate\", \"frati\", \"frats\", \"fraus\", \"frays\", \"frees\", \"freet\", \"freit\", \"fremd\", \"frena\", \"freon\", \"frere\", \"frets\", \"fribs\", \"frier\", \"fries\", \"frigs\", \"frise\", \"frist\", \"frith\", \"frits\", \"fritt\", \"frize\", \"frizz\", \"froes\", \"frogs\", \"frons\", \"frore\", \"frorn\", \"frory\", \"frosh\", \"frows\", \"frowy\", \"frugs\", \"frump\", \"frush\", \"frust\", \"fryer\", \"fubar\", \"fubby\", \"fubsy\", \"fucks\", \"fucus\", \"fuddy\", \"fudgy\", \"fuels\", \"fuero\", \"fuffs\", \"fuffy\", \"fugal\", \"fuggy\", \"fugie\", \"fugio\", \"fugle\", \"fugly\", \"fugus\", \"fujis\", \"fulls\", \"fumed\", \"fumer\", \"fumes\", \"fumet\", \"fundi\", \"funds\", \"fundy\", \"fungo\", \"fungs\", \"funks\", \"fural\", \"furan\", \"furca\", \"furls\", \"furol\", \"furrs\", \"furth\", \"furze\", \"furzy\", \"fused\", \"fusee\", \"fusel\", \"fuses\", \"fusil\", \"fusks\", \"fusts\", \"fusty\", \"futon\", \"fuzed\", \"fuzee\", \"fuzes\", \"fuzil\", \"fyces\", \"fyked\", \"fykes\", \"fyles\", \"fyrds\", \"fytte\", \"gabba\", \"gabby\", \"gable\", \"gaddi\", \"gades\", \"gadge\", \"gadid\", \"gadis\", \"gadje\", \"gadjo\", \"gadso\", \"gaffs\", \"gaged\", \"gager\", \"gages\", \"gaids\", \"gains\", \"gairs\", \"gaita\", \"gaits\", \"gaitt\", \"gajos\", \"galah\", \"galas\", \"galax\", \"galea\", \"galed\", \"gales\", \"galls\", \"gally\", \"galop\", \"galut\", \"galvo\", \"gamas\", \"gamay\", \"gamba\", \"gambe\", \"gambo\", \"gambs\", \"gamed\", \"games\", \"gamey\", \"gamic\", \"gamin\", \"gamme\", \"gammy\", \"gamps\", \"ganch\", \"gandy\", \"ganef\", \"ganev\", \"gangs\", \"ganja\", \"ganof\", \"gants\", \"gaols\", \"gaped\", \"gaper\", \"gapes\", \"gapos\", \"gappy\", \"garbe\", \"garbo\", \"garbs\", \"garda\", \"gares\", \"garis\", \"garms\", \"garni\", \"garre\", \"garth\", \"garum\", \"gases\", \"gasps\", \"gaspy\", \"gasts\", \"gatch\", \"gated\", \"gater\", \"gates\", \"gaths\", \"gator\", \"gauch\", \"gaucy\", \"gauds\", \"gauje\", \"gault\", \"gaums\", \"gaumy\", \"gaups\", \"gaurs\", \"gauss\", \"gauzy\", \"gavot\", \"gawcy\", \"gawds\", \"gawks\", \"gawps\", \"gawsy\", \"gayal\", \"gazal\", \"gazar\", \"gazed\", \"gazes\", \"gazon\", \"gazoo\", \"geals\", \"geans\", \"geare\", \"gears\", \"geats\", \"gebur\", \"gecks\", \"geeks\", \"geeps\", \"geest\", \"geist\", \"geits\", \"gelds\", \"gelee\", \"gelid\", \"gelly\", \"gelts\", \"gemel\", \"gemma\", \"gemmy\", \"gemot\", \"genal\", \"genas\", \"genes\", \"genet\", \"genic\", \"genii\", \"genip\", \"genny\", \"genoa\", \"genom\", \"genro\", \"gents\", \"genty\", \"genua\", \"genus\", \"geode\", \"geoid\", \"gerah\", \"gerbe\", \"geres\", \"gerle\", \"germs\", \"germy\", \"gerne\", \"gesse\", \"gesso\", \"geste\", \"gests\", \"getas\", \"getup\", \"geums\", \"geyan\", \"geyer\", \"ghast\", \"ghats\", \"ghaut\", \"ghazi\", \"ghees\", \"ghest\", \"ghyll\", \"gibed\", \"gibel\", \"giber\", \"gibes\", \"gibli\", \"gibus\", \"gifts\", \"gigas\", \"gighe\", \"gigot\", \"gigue\", \"gilas\", \"gilds\", \"gilet\", \"gills\", \"gilly\", \"gilpy\", \"gilts\", \"gimel\", \"gimme\", \"gimps\", \"gimpy\", \"ginch\", \"ginge\", \"gings\", \"ginks\", \"ginny\", \"ginzo\", \"gipon\", \"gippo\", \"gippy\", \"girds\", \"girls\", \"girns\", \"giron\", \"giros\", \"girrs\", \"girsh\", \"girts\", \"gismo\", \"gisms\", \"gists\", \"gitch\", \"gites\", \"giust\", \"gived\", \"gives\", \"gizmo\", \"glace\", \"glads\", \"glady\", \"glaik\", \"glair\", \"glams\", \"glans\", \"glary\", \"glaum\", \"glaur\", \"glazy\", \"gleba\", \"glebe\", \"gleby\", \"glede\", \"gleds\", \"gleed\", \"gleek\", \"glees\", \"gleet\", \"gleis\", \"glens\", \"glent\", \"gleys\", \"glial\", \"glias\", \"glibs\", \"gliff\", \"glift\", \"glike\", \"glime\", \"glims\", \"glisk\", \"glits\", \"glitz\", \"gloam\", \"globi\", \"globs\", \"globy\", \"glode\", \"glogg\", \"gloms\", \"gloop\", \"glops\", \"glost\", \"glout\", \"glows\", \"gloze\", \"glued\", \"gluer\", \"glues\", \"gluey\", \"glugs\", \"glume\", \"glums\", \"gluon\", \"glute\", \"gluts\", \"gnarl\", \"gnarr\", \"gnars\", \"gnats\", \"gnawn\", \"gnaws\", \"gnows\", \"goads\", \"goafs\", \"goals\", \"goary\", \"goats\", \"goaty\", \"goban\", \"gobar\", \"gobbi\", \"gobbo\", \"gobby\", \"gobis\", \"gobos\", \"godet\", \"godso\", \"goels\", \"goers\", \"goest\", \"goeth\", \"goety\", \"gofer\", \"goffs\", \"gogga\", \"gogos\", \"goier\", \"gojis\", \"golds\", \"goldy\", \"goles\", \"golfs\", \"golpe\", \"golps\", \"gombo\", \"gomer\", \"gompa\", \"gonch\", \"gonef\", \"gongs\", \"gonia\", \"gonif\", \"gonks\", \"gonna\", \"gonof\", \"gonys\", \"gonzo\", \"gooby\", \"goods\", \"goofs\", \"googs\", \"gooky\", \"goold\", \"gools\", \"gooly\", \"goons\", \"goony\", \"goops\", \"goopy\", \"goors\", \"goory\", \"goosy\", \"gopak\", \"gopik\", \"goral\", \"goras\", \"gored\", \"gores\", \"goris\", \"gorms\", \"gormy\", \"gorps\", \"gorse\", \"gorsy\", \"gosht\", \"gosse\", \"gotch\", \"goths\", \"gothy\", \"gotta\", \"gouch\", \"gouks\", \"goura\", \"gouts\", \"gouty\", \"gowan\", \"gowds\", \"gowfs\", \"gowks\", \"gowls\", \"gowns\", \"goxes\", \"goyim\", \"goyle\", \"graal\", \"grabs\", \"grads\", \"graff\", \"graip\", \"grama\", \"grame\", \"gramp\", \"grams\", \"grana\", \"grans\", \"grapy\", \"gravs\", \"grays\", \"grebe\", \"grebo\", \"grece\", \"greek\", \"grees\", \"grege\", \"grego\", \"grein\", \"grens\", \"grese\", \"greve\", \"grews\", \"greys\", \"grice\", \"gride\", \"grids\", \"griff\", \"grift\", \"grigs\", \"grike\", \"grins\", \"griot\", \"grips\", \"gript\", \"gripy\", \"grise\", \"grist\", \"grisy\", \"grith\", \"grits\", \"grize\", \"groat\", \"grody\", \"grogs\", \"groks\", \"groma\", \"grone\", \"groof\", \"grosz\", \"grots\", \"grouf\", \"grovy\", \"grows\", \"grrls\", \"grrrl\", \"grubs\", \"grued\", \"grues\", \"grufe\", \"grume\", \"grump\", \"grund\", \"gryce\", \"gryde\", \"gryke\", \"grype\", \"grypt\", \"guaco\", \"guana\", \"guano\", \"guans\", \"guars\", \"gucks\", \"gucky\", \"gudes\", \"guffs\", \"gugas\", \"guids\", \"guimp\", \"guiro\", \"gulag\", \"gular\", \"gulas\", \"gules\", \"gulet\", \"gulfs\", \"gulfy\", \"gulls\", \"gulph\", \"gulps\", \"gulpy\", \"gumma\", \"gummi\", \"gumps\", \"gundy\", \"gunge\", \"gungy\", \"gunks\", \"gunky\", \"gunny\", \"guqin\", \"gurdy\", \"gurge\", \"gurls\", \"gurly\", \"gurns\", \"gurry\", \"gursh\", \"gurus\", \"gushy\", \"gusla\", \"gusle\", \"gusli\", \"gussy\", \"gusts\", \"gutsy\", \"gutta\", \"gutty\", \"guyed\", \"guyle\", \"guyot\", \"guyse\", \"gwine\", \"gyals\", \"gyans\", \"gybed\", \"gybes\", \"gyeld\", \"gymps\", \"gynae\", \"gynie\", \"gynny\", \"gynos\", \"gyoza\", \"gypos\", \"gyppo\", \"gyppy\", \"gyral\", \"gyred\", \"gyres\", \"gyron\", \"gyros\", \"gyrus\", \"gytes\", \"gyved\", \"gyves\", \"haafs\", \"haars\", \"hable\", \"habus\", \"hacek\", \"hacks\", \"hadal\", \"haded\", \"hades\", \"hadji\", \"hadst\", \"haems\", \"haets\", \"haffs\", \"hafiz\", \"hafts\", \"haggs\", \"hahas\", \"haick\", \"haika\", \"haiks\", \"haiku\", \"hails\", \"haily\", \"hains\", \"haint\", \"hairs\", \"haith\", \"hajes\", \"hajis\", \"hajji\", \"hakam\", \"hakas\", \"hakea\", \"hakes\", \"hakim\", \"hakus\", \"halal\", \"haled\", \"haler\", \"hales\", \"halfa\", \"halfs\", \"halid\", \"hallo\", \"halls\", \"halma\", \"halms\", \"halon\", \"halos\", \"halse\", \"halts\", \"halva\", \"halwa\", \"hamal\", \"hamba\", \"hamed\", \"hames\", \"hammy\", \"hamza\", \"hanap\", \"hance\", \"hanch\", \"hands\", \"hangi\", \"hangs\", \"hanks\", \"hanky\", \"hansa\", \"hanse\", \"hants\", \"haole\", \"haoma\", \"hapax\", \"haply\", \"happi\", \"hapus\", \"haram\", \"hards\", \"hared\", \"hares\", \"harim\", \"harks\", \"harls\", \"harms\", \"harns\", \"haros\", \"harps\", \"harts\", \"hashy\", \"hasks\", \"hasps\", \"hasta\", \"hated\", \"hates\", \"hatha\", \"hauds\", \"haufs\", \"haugh\", \"hauld\", \"haulm\", \"hauls\", \"hault\", \"hauns\", \"hause\", \"haver\", \"haves\", \"hawed\", \"hawks\", \"hawms\", \"hawse\", \"hayed\", \"hayer\", \"hayey\", \"hayle\", \"hazan\", \"hazed\", \"hazer\", \"hazes\", \"heads\", \"heald\", \"heals\", \"heame\", \"heaps\", \"heapy\", \"heare\", \"hears\", \"heast\", \"heats\", \"heben\", \"hebes\", \"hecht\", \"hecks\", \"heder\", \"hedgy\", \"heeds\", \"heedy\", \"heels\", \"heeze\", \"hefte\", \"hefts\", \"heids\", \"heigh\", \"heils\", \"heirs\", \"hejab\", \"hejra\", \"heled\", \"heles\", \"helio\", \"hells\", \"helms\", \"helos\", \"helot\", \"helps\", \"helve\", \"hemal\", \"hemes\", \"hemic\", \"hemin\", \"hemps\", \"hempy\", \"hench\", \"hends\", \"henge\", \"henna\", \"henny\", \"henry\", \"hents\", \"hepar\", \"herbs\", \"herby\", \"herds\", \"heres\", \"herls\", \"herma\", \"herms\", \"herns\", \"heros\", \"herry\", \"herse\", \"hertz\", \"herye\", \"hesps\", \"hests\", \"hetes\", \"heths\", \"heuch\", \"heugh\", \"hevea\", \"hewed\", \"hewer\", \"hewgh\", \"hexad\", \"hexed\", \"hexer\", \"hexes\", \"hexyl\", \"heyed\", \"hiant\", \"hicks\", \"hided\", \"hider\", \"hides\", \"hiems\", \"highs\", \"hight\", \"hijab\", \"hijra\", \"hiked\", \"hiker\", \"hikes\", \"hikoi\", \"hilar\", \"hilch\", \"hillo\", \"hills\", \"hilts\", \"hilum\", \"hilus\", \"himbo\", \"hinau\", \"hinds\", \"hings\", \"hinky\", \"hinny\", \"hints\", \"hiois\", \"hiply\", \"hired\", \"hiree\", \"hirer\", \"hires\", \"hissy\", \"hists\", \"hithe\", \"hived\", \"hiver\", \"hives\", \"hizen\", \"hoaed\", \"hoagy\", \"hoars\", \"hoary\", \"hoast\", \"hobos\", \"hocks\", \"hocus\", \"hodad\", \"hodja\", \"hoers\", \"hogan\", \"hogen\", \"hoggs\", \"hoghs\", \"hohed\", \"hoick\", \"hoied\", \"hoiks\", \"hoing\", \"hoise\", \"hokas\", \"hoked\", \"hokes\", \"hokey\", \"hokis\", \"hokku\", \"hokum\", \"holds\", \"holed\", \"holes\", \"holey\", \"holks\", \"holla\", \"hollo\", \"holme\", \"holms\", \"holon\", \"holos\", \"holts\", \"homas\", \"homed\", \"homes\", \"homey\", \"homie\", \"homme\", \"honan\", \"honda\", \"honds\", \"honed\", \"honer\", \"hones\", \"hongi\", \"hongs\", \"honks\", \"honky\", \"hooch\", \"hoods\", \"hoody\", \"hooey\", \"hoofs\", \"hooka\", \"hooks\", \"hooky\", \"hooly\", \"hoons\", \"hoops\", \"hoord\", \"hoors\", \"hoosh\", \"hoots\", \"hooty\", \"hoove\", \"hopak\", \"hoped\", \"hoper\", \"hopes\", \"hoppy\", \"horah\", \"horal\", \"horas\", \"horis\", \"horks\", \"horme\", \"horns\", \"horst\", \"horsy\", \"hosed\", \"hosel\", \"hosen\", \"hoser\", \"hoses\", \"hosey\", \"hosta\", \"hosts\", \"hotch\", \"hoten\", \"hotty\", \"houff\", \"houfs\", \"hough\", \"houri\", \"hours\", \"houts\", \"hovea\", \"hoved\", \"hoven\", \"hoves\", \"howbe\", \"howes\", \"howff\", \"howfs\", \"howks\", \"howls\", \"howre\", \"howso\", \"hoxed\", \"hoxes\", \"hoyas\", \"hoyed\", \"hoyle\", \"hubby\", \"hucks\", \"hudna\", \"hudud\", \"huers\", \"huffs\", \"huffy\", \"huger\", \"huggy\", \"huhus\", \"huias\", \"hulas\", \"hules\", \"hulks\", \"hulky\", \"hullo\", \"hulls\", \"hully\", \"humas\", \"humfs\", \"humic\", \"humps\", \"humpy\", \"hunks\", \"hunts\", \"hurds\", \"hurls\", \"hurly\", \"hurra\", \"hurst\", \"hurts\", \"hushy\", \"husks\", \"husos\", \"hutia\", \"huzza\", \"huzzy\", \"hwyls\", \"hydra\", \"hyens\", \"hygge\", \"hying\", \"hykes\", \"hylas\", \"hyleg\", \"hyles\", \"hylic\", \"hymns\", \"hynde\", \"hyoid\", \"hyped\", \"hypes\", \"hypha\", \"hyphy\", \"hypos\", \"hyrax\", \"hyson\", \"hythe\", \"iambi\", \"iambs\", \"ibrik\", \"icers\", \"iched\", \"iches\", \"ichor\", \"icier\", \"icker\", \"ickle\", \"icons\", \"ictal\", \"ictic\", \"ictus\", \"idant\", \"ideas\", \"idees\", \"ident\", \"idled\", \"idles\", \"idola\", \"idols\", \"idyls\", \"iftar\", \"igapo\", \"igged\", \"iglus\", \"ihram\", \"ikans\", \"ikats\", \"ikons\", \"ileac\", \"ileal\", \"ileum\", \"ileus\", \"iliad\", \"ilial\", \"ilium\", \"iller\", \"illth\", \"imago\", \"imams\", \"imari\", \"imaum\", \"imbar\", \"imbed\", \"imide\", \"imido\", \"imids\", \"imine\", \"imino\", \"immew\", \"immit\", \"immix\", \"imped\", \"impis\", \"impot\", \"impro\", \"imshi\", \"imshy\", \"inapt\", \"inarm\", \"inbye\", \"incel\", \"incle\", \"incog\", \"incus\", \"incut\", \"indew\", \"india\", \"indie\", \"indol\", \"indow\", \"indri\", \"indue\", \"inerm\", \"infix\", \"infos\", \"infra\", \"ingan\", \"ingle\", \"inion\", \"inked\", \"inker\", \"inkle\", \"inned\", \"innit\", \"inorb\", \"inrun\", \"inset\", \"inspo\", \"intel\", \"intil\", \"intis\", \"intra\", \"inula\", \"inure\", \"inurn\", \"inust\", \"invar\", \"inwit\", \"iodic\", \"iodid\", \"iodin\", \"iotas\", \"ippon\", \"irade\", \"irids\", \"iring\", \"irked\", \"iroko\", \"irone\", \"irons\", \"isbas\", \"ishes\", \"isled\", \"isles\", \"isnae\", \"issei\", \"istle\", \"items\", \"ither\", \"ivied\", \"ivies\", \"ixias\", \"ixnay\", \"ixora\", \"ixtle\", \"izard\", \"izars\", \"izzat\", \"jaaps\", \"jabot\", \"jacal\", \"jacks\", \"jacky\", \"jaded\", \"jades\", \"jafas\", \"jaffa\", \"jagas\", \"jager\", \"jaggs\", \"jaggy\", \"jagir\", \"jagra\", \"jails\", \"jaker\", \"jakes\", \"jakey\", \"jalap\", \"jalop\", \"jambe\", \"jambo\", \"jambs\", \"jambu\", \"james\", \"jammy\", \"jamon\", \"janes\", \"janns\", \"janny\", \"janty\", \"japan\", \"japed\", \"japer\", \"japes\", \"jarks\", \"jarls\", \"jarps\", \"jarta\", \"jarul\", \"jasey\", \"jaspe\", \"jasps\", \"jatos\", \"jauks\", \"jaups\", \"javas\", \"javel\", \"jawan\", \"jawed\", \"jaxie\", \"jeans\", \"jeats\", \"jebel\", \"jedis\", \"jeels\", \"jeely\", \"jeeps\", \"jeers\", \"jeeze\", \"jefes\", \"jeffs\", \"jehad\", \"jehus\", \"jelab\", \"jello\", \"jells\", \"jembe\", \"jemmy\", \"jenny\", \"jeons\", \"jerid\", \"jerks\", \"jerry\", \"jesse\", \"jests\", \"jesus\", \"jetes\", \"jeton\", \"jeune\", \"jewed\", \"jewie\", \"jhala\", \"jiaos\", \"jibba\", \"jibbs\", \"jibed\", \"jiber\", \"jibes\", \"jiffs\", \"jiggy\", \"jigot\", \"jihad\", \"jills\", \"jilts\", \"jimmy\", \"jimpy\", \"jingo\", \"jinks\", \"jinne\", \"jinni\", \"jinns\", \"jirds\", \"jirga\", \"jirre\", \"jisms\", \"jived\", \"jiver\", \"jives\", \"jivey\", \"jnana\", \"jobed\", \"jobes\", \"jocko\", \"jocks\", \"jocky\", \"jocos\", \"jodel\", \"joeys\", \"johns\", \"joins\", \"joked\", \"jokes\", \"jokey\", \"jokol\", \"joled\", \"joles\", \"jolls\", \"jolts\", \"jolty\", \"jomon\", \"jomos\", \"jones\", \"jongs\", \"jonty\", \"jooks\", \"joram\", \"jorum\", \"jotas\", \"jotty\", \"jotun\", \"joual\", \"jougs\", \"jouks\", \"joule\", \"jours\", \"jowar\", \"jowed\", \"jowls\", \"jowly\", \"joyed\", \"jubas\", \"jubes\", \"jucos\", \"judas\", \"judgy\", \"judos\", \"jugal\", \"jugum\", \"jujus\", \"juked\", \"jukes\", \"jukus\", \"julep\", \"jumar\", \"jumby\", \"jumps\", \"junco\", \"junks\", \"junky\", \"jupes\", \"jupon\", \"jural\", \"jurat\", \"jurel\", \"jures\", \"justs\", \"jutes\", \"jutty\", \"juves\", \"juvie\", \"kaama\", \"kabab\", \"kabar\", \"kabob\", \"kacha\", \"kacks\", \"kadai\", \"kades\", \"kadis\", \"kafir\", \"kagos\", \"kagus\", \"kahal\", \"kaiak\", \"kaids\", \"kaies\", \"kaifs\", \"kaika\", \"kaiks\", \"kails\", \"kaims\", \"kaing\", \"kains\", \"kakas\", \"kakis\", \"kalam\", \"kales\", \"kalif\", \"kalis\", \"kalpa\", \"kamas\", \"kames\", \"kamik\", \"kamis\", \"kamme\", \"kanae\", \"kanas\", \"kandy\", \"kaneh\", \"kanes\", \"kanga\", \"kangs\", \"kanji\", \"kants\", \"kanzu\", \"kaons\", \"kapas\", \"kaphs\", \"kapok\", \"kapow\", \"kapus\", \"kaput\", \"karas\", \"karat\", \"karks\", \"karns\", \"karoo\", \"karos\", \"karri\", \"karst\", \"karsy\", \"karts\", \"karzy\", \"kasha\", \"kasme\", \"katal\", \"katas\", \"katis\", \"katti\", \"kaugh\", \"kauri\", \"kauru\", \"kaury\", \"kaval\", \"kavas\", \"kawas\", \"kawau\", \"kawed\", \"kayle\", \"kayos\", \"kazis\", \"kazoo\", \"kbars\", \"kebar\", \"kebob\", \"kecks\", \"kedge\", \"kedgy\", \"keech\", \"keefs\", \"keeks\", \"keels\", \"keema\", \"keeno\", \"keens\", \"keeps\", \"keets\", \"keeve\", \"kefir\", \"kehua\", \"keirs\", \"kelep\", \"kelim\", \"kells\", \"kelly\", \"kelps\", \"kelpy\", \"kelts\", \"kelty\", \"kembo\", \"kembs\", \"kemps\", \"kempt\", \"kempy\", \"kenaf\", \"kench\", \"kendo\", \"kenos\", \"kente\", \"kents\", \"kepis\", \"kerbs\", \"kerel\", \"kerfs\", \"kerky\", \"kerma\", \"kerne\", \"kerns\", \"keros\", \"kerry\", \"kerve\", \"kesar\", \"kests\", \"ketas\", \"ketch\", \"ketes\", \"ketol\", \"kevel\", \"kevil\", \"kexes\", \"keyed\", \"keyer\", \"khadi\", \"khafs\", \"khans\", \"khaph\", \"khats\", \"khaya\", \"khazi\", \"kheda\", \"kheth\", \"khets\", \"khoja\", \"khors\", \"khoum\", \"khuds\", \"kiaat\", \"kiack\", \"kiang\", \"kibbe\", \"kibbi\", \"kibei\", \"kibes\", \"kibla\", \"kicks\", \"kicky\", \"kiddo\", \"kiddy\", \"kidel\", \"kidge\", \"kiefs\", \"kiers\", \"kieve\", \"kievs\", \"kight\", \"kikoi\", \"kiley\", \"kilim\", \"kills\", \"kilns\", \"kilos\", \"kilps\", \"kilts\", \"kilty\", \"kimbo\", \"kinas\", \"kinda\", \"kinds\", \"kindy\", \"kines\", \"kings\", \"kinin\", \"kinks\", \"kinos\", \"kiore\", \"kipes\", \"kippa\", \"kipps\", \"kirby\", \"kirks\", \"kirns\", \"kirri\", \"kisan\", \"kissy\", \"kists\", \"kited\", \"kiter\", \"kites\", \"kithe\", \"kiths\", \"kitul\", \"kivas\", \"kiwis\", \"klang\", \"klaps\", \"klett\", \"klick\", \"klieg\", \"kliks\", \"klong\", \"kloof\", \"kluge\", \"klutz\", \"knags\", \"knaps\", \"knarl\", \"knars\", \"knaur\", \"knawe\", \"knees\", \"knell\", \"knish\", \"knits\", \"knive\", \"knobs\", \"knops\", \"knosp\", \"knots\", \"knout\", \"knowe\", \"knows\", \"knubs\", \"knurl\", \"knurr\", \"knurs\", \"knuts\", \"koans\", \"koaps\", \"koban\", \"kobos\", \"koels\", \"koffs\", \"kofta\", \"kogal\", \"kohas\", \"kohen\", \"kohls\", \"koine\", \"kojis\", \"kokam\", \"kokas\", \"koker\", \"kokra\", \"kokum\", \"kolas\", \"kolos\", \"kombu\", \"konbu\", \"kondo\", \"konks\", \"kooks\", \"kooky\", \"koori\", \"kopek\", \"kophs\", \"kopje\", \"koppa\", \"korai\", \"koras\", \"korat\", \"kores\", \"korma\", \"koros\", \"korun\", \"korus\", \"koses\", \"kotch\", \"kotos\", \"kotow\", \"koura\", \"kraal\", \"krabs\", \"kraft\", \"krais\", \"krait\", \"krang\", \"krans\", \"kranz\", \"kraut\", \"krays\", \"kreep\", \"kreng\", \"krewe\", \"krona\", \"krone\", \"kroon\", \"krubi\", \"krunk\", \"ksars\", \"kubie\", \"kudos\", \"kudus\", \"kudzu\", \"kufis\", \"kugel\", \"kuias\", \"kukri\", \"kukus\", \"kulak\", \"kulan\", \"kulas\", \"kulfi\", \"kumis\", \"kumys\", \"kuris\", \"kurre\", \"kurta\", \"kurus\", \"kusso\", \"kutas\", \"kutch\", \"kutis\", \"kutus\", \"kuzus\", \"kvass\", \"kvell\", \"kwela\", \"kyack\", \"kyaks\", \"kyang\", \"kyars\", \"kyats\", \"kybos\", \"kydst\", \"kyles\", \"kylie\", \"kylin\", \"kylix\", \"kyloe\", \"kynde\", \"kynds\", \"kypes\", \"kyrie\", \"kytes\", \"kythe\", \"laari\", \"labda\", \"labia\", \"labis\", \"labra\", \"laced\", \"lacer\", \"laces\", \"lacet\", \"lacey\", \"lacks\", \"laddy\", \"laded\", \"lader\", \"lades\", \"laers\", \"laevo\", \"lagan\", \"lahal\", \"lahar\", \"laich\", \"laics\", \"laids\", \"laigh\", \"laika\", \"laiks\", \"laird\", \"lairs\", \"lairy\", \"laith\", \"laity\", \"laked\", \"laker\", \"lakes\", \"lakhs\", \"lakin\", \"laksa\", \"laldy\", \"lalls\", \"lamas\", \"lambs\", \"lamby\", \"lamed\", \"lamer\", \"lames\", \"lamia\", \"lammy\", \"lamps\", \"lanai\", \"lanas\", \"lanch\", \"lande\", \"lands\", \"lanes\", \"lanks\", \"lants\", \"lapin\", \"lapis\", \"lapje\", \"larch\", \"lards\", \"lardy\", \"laree\", \"lares\", \"largo\", \"laris\", \"larks\", \"larky\", \"larns\", \"larnt\", \"larum\", \"lased\", \"laser\", \"lases\", \"lassi\", \"lassu\", \"lassy\", \"lasts\", \"latah\", \"lated\", \"laten\", \"latex\", \"lathi\", \"laths\", \"lathy\", \"latke\", \"latus\", \"lauan\", \"lauch\", \"lauds\", \"laufs\", \"laund\", \"laura\", \"laval\", \"lavas\", \"laved\", \"laver\", \"laves\", \"lavra\", \"lavvy\", \"lawed\", \"lawer\", \"lawin\", \"lawks\", \"lawns\", \"lawny\", \"laxed\", \"laxer\", \"laxes\", \"laxly\", \"layed\", \"layin\", \"layup\", \"lazar\", \"lazed\", \"lazes\", \"lazos\", \"lazzi\", \"lazzo\", \"leads\", \"leady\", \"leafs\", \"leaks\", \"leams\", \"leans\", \"leany\", \"leaps\", \"leare\", \"lears\", \"leary\", \"leats\", \"leavy\", \"leaze\", \"leben\", \"leccy\", \"ledes\", \"ledgy\", \"ledum\", \"leear\", \"leeks\", \"leeps\", \"leers\", \"leese\", \"leets\", \"leeze\", \"lefte\", \"lefts\", \"leger\", \"leges\", \"legge\", \"leggo\", \"legit\", \"lehrs\", \"lehua\", \"leirs\", \"leish\", \"leman\", \"lemed\", \"lemel\", \"lemes\", \"lemma\", \"lemme\", \"lends\", \"lenes\", \"lengs\", \"lenis\", \"lenos\", \"lense\", \"lenti\", \"lento\", \"leone\", \"lepid\", \"lepra\", \"lepta\", \"lered\", \"leres\", \"lerps\", \"leses\", \"lests\", \"letch\", \"lethe\", \"letup\", \"leuch\", \"leuco\", \"leuds\", \"leugh\", \"levas\", \"levee\", \"leves\", \"levin\", \"levis\", \"lewis\", \"lexes\", \"lexis\", \"lezes\", \"lezza\", \"lezzy\", \"liana\", \"liane\", \"liang\", \"liard\", \"liars\", \"liart\", \"liber\", \"libra\", \"libri\", \"lichi\", \"licht\", \"licit\", \"licks\", \"lidar\", \"lidos\", \"liefs\", \"liens\", \"liers\", \"lieus\", \"lieve\", \"lifer\", \"lifes\", \"lifts\", \"ligan\", \"liger\", \"ligge\", \"ligne\", \"liked\", \"liker\", \"likes\", \"likin\", \"lills\", \"lilos\", \"lilts\", \"liman\", \"limas\", \"limax\", \"limba\", \"limbi\", \"limbs\", \"limby\", \"limed\", \"limen\", \"limes\", \"limey\", \"limma\", \"limns\", \"limos\", \"limpa\", \"limps\", \"linac\", \"linch\", \"linds\", \"lindy\", \"lined\", \"lines\", \"liney\", \"linga\", \"lings\", \"lingy\", \"linin\", \"links\", \"linky\", \"linns\", \"linny\", \"linos\", \"lints\", \"linty\", \"linum\", \"linux\", \"lions\", \"lipas\", \"lipes\", \"lipin\", \"lipos\", \"lippy\", \"liras\", \"lirks\", \"lirot\", \"lisks\", \"lisle\", \"lisps\", \"lists\", \"litai\", \"litas\", \"lited\", \"liter\", \"lites\", \"litho\", \"liths\", \"litre\", \"lived\", \"liven\", \"lives\", \"livor\", \"livre\", \"llano\", \"loach\", \"loads\", \"loafs\", \"loams\", \"loans\", \"loast\", \"loave\", \"lobar\", \"lobed\", \"lobes\", \"lobos\", \"lobus\", \"loche\", \"lochs\", \"locie\", \"locis\", \"locks\", \"locos\", \"locum\", \"loden\", \"lodes\", \"loess\", \"lofts\", \"logan\", \"loges\", \"loggy\", \"logia\", \"logie\", \"logoi\", \"logon\", \"logos\", \"lohan\", \"loids\", \"loins\", \"loipe\", \"loirs\", \"lokes\", \"lolls\", \"lolly\", \"lolog\", \"lomas\", \"lomed\", \"lomes\", \"loner\", \"longa\", \"longe\", \"longs\", \"looby\", \"looed\", \"looey\", \"loofa\", \"loofs\", \"looie\", \"looks\", \"looky\", \"looms\", \"loons\", \"loony\", \"loops\", \"loord\", \"loots\", \"loped\", \"loper\", \"lopes\", \"loppy\", \"loral\", \"loran\", \"lords\", \"lordy\", \"lorel\", \"lores\", \"loric\", \"loris\", \"losed\", \"losel\", \"losen\", \"loses\", \"lossy\", \"lotah\", \"lotas\", \"lotes\", \"lotic\", \"lotos\", \"lotsa\", \"lotta\", \"lotte\", \"lotto\", \"lotus\", \"loued\", \"lough\", \"louie\", \"louis\", \"louma\", \"lound\", \"louns\", \"loupe\", \"loups\", \"loure\", \"lours\", \"loury\", \"louts\", \"lovat\", \"loved\", \"loves\", \"lovey\", \"lovie\", \"lowan\", \"lowed\", \"lowes\", \"lownd\", \"lowne\", \"lowns\", \"lowps\", \"lowry\", \"lowse\", \"lowts\", \"loxed\", \"loxes\", \"lozen\", \"luach\", \"luaus\", \"lubed\", \"lubes\", \"lubra\", \"luces\", \"lucks\", \"lucre\", \"ludes\", \"ludic\", \"ludos\", \"luffa\", \"luffs\", \"luged\", \"luger\", \"luges\", \"lulls\", \"lulus\", \"lumas\", \"lumbi\", \"lumme\", \"lummy\", \"lumps\", \"lunas\", \"lunes\", \"lunet\", \"lungi\", \"lungs\", \"lunks\", \"lunts\", \"lupin\", \"lured\", \"lurer\", \"lures\", \"lurex\", \"lurgi\", \"lurgy\", \"lurks\", \"lurry\", \"lurve\", \"luser\", \"lushy\", \"lusks\", \"lusts\", \"lusus\", \"lutea\", \"luted\", \"luter\", \"lutes\", \"luvvy\", \"luxed\", \"luxer\", \"luxes\", \"lweis\", \"lyams\", \"lyard\", \"lyart\", \"lyase\", \"lycea\", \"lycee\", \"lycra\", \"lymes\", \"lynes\", \"lyres\", \"lysed\", \"lyses\", \"lysin\", \"lysis\", \"lysol\", \"lyssa\", \"lyted\", \"lytes\", \"lythe\", \"lytic\", \"lytta\", \"maaed\", \"maare\", \"maars\", \"mabes\", \"macas\", \"maced\", \"macer\", \"maces\", \"mache\", \"machi\", \"machs\", \"macks\", \"macle\", \"macon\", \"madge\", \"madid\", \"madre\", \"maerl\", \"mafic\", \"mages\", \"maggs\", \"magot\", \"magus\", \"mahoe\", \"mahua\", \"mahwa\", \"maids\", \"maiko\", \"maiks\", \"maile\", \"maill\", \"mails\", \"maims\", \"mains\", \"maire\", \"mairs\", \"maise\", \"maist\", \"makar\", \"makes\", \"makis\", \"makos\", \"malam\", \"malar\", \"malas\", \"malax\", \"males\", \"malic\", \"malik\", \"malis\", \"malls\", \"malms\", \"malmy\", \"malts\", \"malty\", \"malus\", \"malva\", \"malwa\", \"mamas\", \"mamba\", \"mamee\", \"mamey\", \"mamie\", \"manas\", \"manat\", \"mandi\", \"maneb\", \"maned\", \"maneh\", \"manes\", \"manet\", \"mangs\", \"manis\", \"manky\", \"manna\", \"manos\", \"manse\", \"manta\", \"manto\", \"manty\", \"manul\", \"manus\", \"mapau\", \"maqui\", \"marae\", \"marah\", \"maras\", \"marcs\", \"mardy\", \"mares\", \"marge\", \"margs\", \"maria\", \"marid\", \"marka\", \"marks\", \"marle\", \"marls\", \"marly\", \"marms\", \"maron\", \"maror\", \"marra\", \"marri\", \"marse\", \"marts\", \"marvy\", \"masas\", \"mased\", \"maser\", \"mases\", \"mashy\", \"masks\", \"massa\", \"massy\", \"masts\", \"masty\", \"masus\", \"matai\", \"mated\", \"mater\", \"mates\", \"maths\", \"matin\", \"matlo\", \"matte\", \"matts\", \"matza\", \"matzo\", \"mauby\", \"mauds\", \"mauls\", \"maund\", \"mauri\", \"mausy\", \"mauts\", \"mauzy\", \"maven\", \"mavie\", \"mavin\", \"mavis\", \"mawed\", \"mawks\", \"mawky\", \"mawns\", \"mawrs\", \"maxed\", \"maxes\", \"maxis\", \"mayan\", \"mayas\", \"mayed\", \"mayos\", \"mayst\", \"mazed\", \"mazer\", \"mazes\", \"mazey\", \"mazut\", \"mbira\", \"meads\", \"meals\", \"meane\", \"means\", \"meany\", \"meare\", \"mease\", \"meath\", \"meats\", \"mebos\", \"mechs\", \"mecks\", \"medii\", \"medle\", \"meeds\", \"meers\", \"meets\", \"meffs\", \"meins\", \"meint\", \"meiny\", \"meith\", \"mekka\", \"melas\", \"melba\", \"melds\", \"melic\", \"melik\", \"mells\", \"melts\", \"melty\", \"memes\", \"memos\", \"menad\", \"mends\", \"mened\", \"menes\", \"menge\", \"mengs\", \"mensa\", \"mense\", \"mensh\", \"menta\", \"mento\", \"menus\", \"meous\", \"meows\", \"merch\", \"mercs\", \"merde\", \"mered\", \"merel\", \"merer\", \"meres\", \"meril\", \"meris\", \"merks\", \"merle\", \"merls\", \"merse\", \"mesal\", \"mesas\", \"mesel\", \"meses\", \"meshy\", \"mesic\", \"mesne\", \"meson\", \"messy\", \"mesto\", \"meted\", \"metes\", \"metho\", \"meths\", \"metic\", \"metif\", \"metis\", \"metol\", \"metre\", \"meuse\", \"meved\", \"meves\", \"mewed\", \"mewls\", \"meynt\", \"mezes\", \"mezze\", \"mezzo\", \"mhorr\", \"miaou\", \"miaow\", \"miasm\", \"miaul\", \"micas\", \"miche\", \"micht\", \"micks\", \"micky\", \"micos\", \"micra\", \"middy\", \"midgy\", \"midis\", \"miens\", \"mieve\", \"miffs\", \"miffy\", \"mifty\", \"miggs\", \"mihas\", \"mihis\", \"miked\", \"mikes\", \"mikra\", \"mikva\", \"milch\", \"milds\", \"miler\", \"miles\", \"milfs\", \"milia\", \"milko\", \"milks\", \"mille\", \"mills\", \"milor\", \"milos\", \"milpa\", \"milts\", \"milty\", \"miltz\", \"mimed\", \"mimeo\", \"mimer\", \"mimes\", \"mimsy\", \"minae\", \"minar\", \"minas\", \"mincy\", \"minds\", \"mined\", \"mines\", \"minge\", \"mings\", \"mingy\", \"minis\", \"minke\", \"minks\", \"minny\", \"minos\", \"mints\", \"mired\", \"mires\", \"mirex\", \"mirid\", \"mirin\", \"mirks\", \"mirky\", \"mirly\", \"miros\", \"mirvs\", \"mirza\", \"misch\", \"misdo\", \"mises\", \"misgo\", \"misos\", \"missa\", \"mists\", \"misty\", \"mitch\", \"miter\", \"mites\", \"mitis\", \"mitre\", \"mitts\", \"mixed\", \"mixen\", \"mixer\", \"mixes\", \"mixte\", \"mixup\", \"mizen\", \"mizzy\", \"mneme\", \"moans\", \"moats\", \"mobby\", \"mobes\", \"mobey\", \"mobie\", \"moble\", \"mochi\", \"mochs\", \"mochy\", \"mocks\", \"moder\", \"modes\", \"modge\", \"modii\", \"modus\", \"moers\", \"mofos\", \"moggy\", \"mohel\", \"mohos\", \"mohrs\", \"mohua\", \"mohur\", \"moile\", \"moils\", \"moira\", \"moire\", \"moits\", \"mojos\", \"mokes\", \"mokis\", \"mokos\", \"molal\", \"molas\", \"molds\", \"moled\", \"moles\", \"molla\", \"molls\", \"molly\", \"molto\", \"molts\", \"molys\", \"momes\", \"momma\", \"mommy\", \"momus\", \"monad\", \"monal\", \"monas\", \"monde\", \"mondo\", \"moner\", \"mongo\", \"mongs\", \"monic\", \"monie\", \"monks\", \"monos\", \"monte\", \"monty\", \"moobs\", \"mooch\", \"moods\", \"mooed\", \"mooks\", \"moola\", \"mooli\", \"mools\", \"mooly\", \"moong\", \"moons\", \"moony\", \"moops\", \"moors\", \"moory\", \"moots\", \"moove\", \"moped\", \"moper\", \"mopes\", \"mopey\", \"moppy\", \"mopsy\", \"mopus\", \"morae\", \"moras\", \"morat\", \"moray\", \"morel\", \"mores\", \"moria\", \"morne\", \"morns\", \"morra\", \"morro\", \"morse\", \"morts\", \"mosed\", \"moses\", \"mosey\", \"mosks\", \"mosso\", \"moste\", \"mosts\", \"moted\", \"moten\", \"motes\", \"motet\", \"motey\", \"moths\", \"mothy\", \"motis\", \"motte\", \"motts\", \"motty\", \"motus\", \"motza\", \"mouch\", \"moues\", \"mould\", \"mouls\", \"moups\", \"moust\", \"mousy\", \"moved\", \"moves\", \"mowas\", \"mowed\", \"mowra\", \"moxas\", \"moxie\", \"moyas\", \"moyle\", \"moyls\", \"mozed\", \"mozes\", \"mozos\", \"mpret\", \"mucho\", \"mucic\", \"mucid\", \"mucin\", \"mucks\", \"mucor\", \"mucro\", \"mudge\", \"mudir\", \"mudra\", \"muffs\", \"mufti\", \"mugga\", \"muggs\", \"muggy\", \"muhly\", \"muids\", \"muils\", \"muirs\", \"muist\", \"mujik\", \"mulct\", \"muled\", \"mules\", \"muley\", \"mulga\", \"mulie\", \"mulla\", \"mulls\", \"mulse\", \"mulsh\", \"mumms\", \"mumps\", \"mumsy\", \"mumus\", \"munga\", \"munge\", \"mungo\", \"mungs\", \"munis\", \"munts\", \"muntu\", \"muons\", \"muras\", \"mured\", \"mures\", \"murex\", \"murid\", \"murks\", \"murls\", \"murly\", \"murra\", \"murre\", \"murri\", \"murrs\", \"murry\", \"murti\", \"murva\", \"musar\", \"musca\", \"mused\", \"muser\", \"muses\", \"muset\", \"musha\", \"musit\", \"musks\", \"musos\", \"musse\", \"mussy\", \"musth\", \"musts\", \"mutch\", \"muted\", \"muter\", \"mutes\", \"mutha\", \"mutis\", \"muton\", \"mutts\", \"muxed\", \"muxes\", \"muzak\", \"muzzy\", \"mvule\", \"myall\", \"mylar\", \"mynah\", \"mynas\", \"myoid\", \"myoma\", \"myope\", \"myops\", \"myopy\", \"mysid\", \"mythi\", \"myths\", \"mythy\", \"myxos\", \"mzees\", \"naams\", \"naans\", \"nabes\", \"nabis\", \"nabks\", \"nabla\", \"nabob\", \"nache\", \"nacho\", \"nacre\", \"nadas\", \"naeve\", \"naevi\", \"naffs\", \"nagas\", \"naggy\", \"nagor\", \"nahal\", \"naiad\", \"naifs\", \"naiks\", \"nails\", \"naira\", \"nairu\", \"naked\", \"naker\", \"nakfa\", \"nalas\", \"naled\", \"nalla\", \"named\", \"namer\", \"names\", \"namma\", \"namus\", \"nanas\", \"nance\", \"nancy\", \"nandu\", \"nanna\", \"nanos\", \"nanua\", \"napas\", \"naped\", \"napes\", \"napoo\", \"nappa\", \"nappe\", \"nappy\", \"naras\", \"narco\", \"narcs\", \"nards\", \"nares\", \"naric\", \"naris\", \"narks\", \"narky\", \"narre\", \"nashi\", \"natch\", \"nates\", \"natis\", \"natty\", \"nauch\", \"naunt\", \"navar\", \"naves\", \"navew\", \"navvy\", \"nawab\", \"nazes\", \"nazir\", \"nazis\", \"nduja\", \"neafe\", \"neals\", \"neaps\", \"nears\", \"neath\", \"neats\", \"nebek\", \"nebel\", \"necks\", \"neddy\", \"needs\", \"neeld\", \"neele\", \"neemb\", \"neems\", \"neeps\", \"neese\", \"neeze\", \"negro\", \"negus\", \"neifs\", \"neist\", \"neive\", \"nelis\", \"nelly\", \"nemas\", \"nemns\", \"nempt\", \"nenes\", \"neons\", \"neper\", \"nepit\", \"neral\", \"nerds\", \"nerka\", \"nerks\", \"nerol\", \"nerts\", \"nertz\", \"nervy\", \"nests\", \"netes\", \"netop\", \"netts\", \"netty\", \"neuks\", \"neume\", \"neums\", \"nevel\", \"neves\", \"nevus\", \"newbs\", \"newed\", \"newel\", \"newie\", \"newsy\", \"newts\", \"nexts\", \"nexus\", \"ngaio\", \"ngana\", \"ngati\", \"ngoma\", \"ngwee\", \"nicad\", \"nicht\", \"nicks\", \"nicol\", \"nidal\", \"nided\", \"nides\", \"nidor\", \"nidus\", \"niefs\", \"nieve\", \"nifes\", \"niffs\", \"niffy\", \"nifty\", \"niger\", \"nighs\", \"nihil\", \"nikab\", \"nikah\", \"nikau\", \"nills\", \"nimbi\", \"nimbs\", \"nimps\", \"niner\", \"nines\", \"ninon\", \"nipas\", \"nippy\", \"niqab\", \"nirls\", \"nirly\", \"nisei\", \"nisse\", \"nisus\", \"niter\", \"nites\", \"nitid\", \"niton\", \"nitre\", \"nitro\", \"nitry\", \"nitty\", \"nival\", \"nixed\", \"nixer\", \"nixes\", \"nixie\", \"nizam\", \"nkosi\", \"noahs\", \"nobby\", \"nocks\", \"nodal\", \"noddy\", \"nodes\", \"nodus\", \"noels\", \"noggs\", \"nohow\", \"noils\", \"noily\", \"noint\", \"noirs\", \"noles\", \"nolls\", \"nolos\", \"nomas\", \"nomen\", \"nomes\", \"nomic\", \"nomoi\", \"nomos\", \"nonas\", \"nonce\", \"nones\", \"nonet\", \"nongs\", \"nonis\", \"nonny\", \"nonyl\", \"noobs\", \"nooit\", \"nooks\", \"nooky\", \"noons\", \"noops\", \"nopal\", \"noria\", \"noris\", \"norks\", \"norma\", \"norms\", \"nosed\", \"noser\", \"noses\", \"notal\", \"noted\", \"noter\", \"notes\", \"notum\", \"nould\", \"noule\", \"nouls\", \"nouns\", \"nouny\", \"noups\", \"novae\", \"novas\", \"novum\", \"noway\", \"nowed\", \"nowls\", \"nowts\", \"nowty\", \"noxal\", \"noxes\", \"noyau\", \"noyed\", \"noyes\", \"nubby\", \"nubia\", \"nucha\", \"nuddy\", \"nuder\", \"nudes\", \"nudie\", \"nudzh\", \"nuffs\", \"nugae\", \"nuked\", \"nukes\", \"nulla\", \"nulls\", \"numbs\", \"numen\", \"nummy\", \"nunny\", \"nurds\", \"nurdy\", \"nurls\", \"nurrs\", \"nutso\", \"nutsy\", \"nyaff\", \"nyala\", \"nying\", \"nyssa\", \"oaked\", \"oaker\", \"oakum\", \"oared\", \"oases\", \"oasis\", \"oasts\", \"oaten\", \"oater\", \"oaths\", \"oaves\", \"obang\", \"obeah\", \"obeli\", \"obeys\", \"obias\", \"obied\", \"obiit\", \"obits\", \"objet\", \"oboes\", \"obole\", \"oboli\", \"obols\", \"occam\", \"ocher\", \"oches\", \"ochre\", \"ochry\", \"ocker\", \"ocrea\", \"octad\", \"octan\", \"octas\", \"octyl\", \"oculi\", \"odahs\", \"odals\", \"odeon\", \"odeum\", \"odism\", \"odist\", \"odium\", \"odors\", \"odour\", \"odyle\", \"odyls\", \"ofays\", \"offed\", \"offie\", \"oflag\", \"ofter\", \"ogams\", \"ogeed\", \"ogees\", \"oggin\", \"ogham\", \"ogive\", \"ogled\", \"ogler\", \"ogles\", \"ogmic\", \"ogres\", \"ohias\", \"ohing\", \"ohmic\", \"ohone\", \"oidia\", \"oiled\", \"oiler\", \"oinks\", \"oints\", \"ojime\", \"okapi\", \"okays\", \"okehs\", \"okras\", \"oktas\", \"oldie\", \"oleic\", \"olein\", \"olent\", \"oleos\", \"oleum\", \"olios\", \"ollas\", \"ollav\", \"oller\", \"ollie\", \"ology\", \"olpae\", \"olpes\", \"omasa\", \"omber\", \"ombus\", \"omens\", \"omers\", \"omits\", \"omlah\", \"omovs\", \"omrah\", \"oncer\", \"onces\", \"oncet\", \"oncus\", \"onely\", \"oners\", \"onery\", \"onium\", \"onkus\", \"onlay\", \"onned\", \"ontic\", \"oobit\", \"oohed\", \"oomph\", \"oonts\", \"ooped\", \"oorie\", \"ooses\", \"ootid\", \"oozed\", \"oozes\", \"opahs\", \"opals\", \"opens\", \"opepe\", \"oping\", \"oppos\", \"opsin\", \"opted\", \"opter\", \"orach\", \"oracy\", \"orals\", \"orang\", \"orant\", \"orate\", \"orbed\", \"orcas\", \"orcin\", \"ordos\", \"oread\", \"orfes\", \"orgia\", \"orgic\", \"orgue\", \"oribi\", \"oriel\", \"orixa\", \"orles\", \"orlon\", \"orlop\", \"ormer\", \"ornis\", \"orpin\", \"orris\", \"ortho\", \"orval\", \"orzos\", \"oscar\", \"oshac\", \"osier\", \"osmic\", \"osmol\", \"ossia\", \"ostia\", \"otaku\", \"otary\", \"ottar\", \"ottos\", \"oubit\", \"oucht\", \"ouens\", \"ouija\", \"oulks\", \"oumas\", \"oundy\", \"oupas\", \"ouped\", \"ouphe\", \"ouphs\", \"ourie\", \"ousel\", \"ousts\", \"outby\", \"outed\", \"outre\", \"outro\", \"outta\", \"ouzel\", \"ouzos\", \"ovals\", \"ovels\", \"ovens\", \"overs\", \"ovist\", \"ovoli\", \"ovolo\", \"ovule\", \"owche\", \"owies\", \"owled\", \"owler\", \"owlet\", \"owned\", \"owres\", \"owrie\", \"owsen\", \"oxbow\", \"oxers\", \"oxeye\", \"oxids\", \"oxies\", \"oxime\", \"oxims\", \"oxlip\", \"oxter\", \"oyers\", \"ozeki\", \"ozzie\", \"paals\", \"paans\", \"pacas\", \"paced\", \"pacer\", \"paces\", \"pacey\", \"pacha\", \"packs\", \"pacos\", \"pacta\", \"pacts\", \"padis\", \"padle\", \"padma\", \"padre\", \"padri\", \"paean\", \"paedo\", \"paeon\", \"paged\", \"pager\", \"pages\", \"pagle\", \"pagod\", \"pagri\", \"paiks\", \"pails\", \"pains\", \"paire\", \"pairs\", \"paisa\", \"paise\", \"pakka\", \"palas\", \"palay\", \"palea\", \"paled\", \"pales\", \"palet\", \"palis\", \"palki\", \"palla\", \"palls\", \"pally\", \"palms\", \"palmy\", \"palpi\", \"palps\", \"palsa\", \"pampa\", \"panax\", \"pance\", \"panda\", \"pands\", \"pandy\", \"paned\", \"panes\", \"panga\", \"pangs\", \"panim\", \"panko\", \"panne\", \"panni\", \"panto\", \"pants\", \"panty\", \"paoli\", \"paolo\", \"papas\", \"papaw\", \"papes\", \"pappi\", \"pappy\", \"parae\", \"paras\", \"parch\", \"pardi\", \"pards\", \"pardy\", \"pared\", \"paren\", \"pareo\", \"pares\", \"pareu\", \"parev\", \"parge\", \"pargo\", \"paris\", \"parki\", \"parks\", \"parky\", \"parle\", \"parly\", \"parma\", \"parol\", \"parps\", \"parra\", \"parrs\", \"parti\", \"parts\", \"parve\", \"parvo\", \"paseo\", \"pases\", \"pasha\", \"pashm\", \"paska\", \"paspy\", \"passe\", \"pasts\", \"pated\", \"paten\", \"pater\", \"pates\", \"paths\", \"patin\", \"patka\", \"patly\", \"patte\", \"patus\", \"pauas\", \"pauls\", \"pavan\", \"paved\", \"paven\", \"paver\", \"paves\", \"pavid\", \"pavin\", \"pavis\", \"pawas\", \"pawaw\", \"pawed\", \"pawer\", \"pawks\", \"pawky\", \"pawls\", \"pawns\", \"paxes\", \"payed\", \"payor\", \"paysd\", \"peage\", \"peags\", \"peaks\", \"peaky\", \"peals\", \"peans\", \"peare\", \"pears\", \"peart\", \"pease\", \"peats\", \"peaty\", \"peavy\", \"peaze\", \"pebas\", \"pechs\", \"pecke\", \"pecks\", \"pecky\", \"pedes\", \"pedis\", \"pedro\", \"peece\", \"peeks\", \"peels\", \"peens\", \"peeoy\", \"peepe\", \"peeps\", \"peers\", \"peery\", \"peeve\", \"peggy\", \"peghs\", \"peins\", \"peise\", \"peize\", \"pekan\", \"pekes\", \"pekin\", \"pekoe\", \"pelas\", \"pelau\", \"peles\", \"pelfs\", \"pells\", \"pelma\", \"pelon\", \"pelta\", \"pelts\", \"pends\", \"pendu\", \"pened\", \"penes\", \"pengo\", \"penie\", \"penis\", \"penks\", \"penna\", \"penni\", \"pents\", \"peons\", \"peony\", \"pepla\", \"pepos\", \"peppy\", \"pepsi\", \"perai\", \"perce\", \"percs\", \"perdu\", \"perdy\", \"perea\", \"peres\", \"peris\", \"perks\", \"perms\", \"perns\", \"perog\", \"perps\", \"perry\", \"perse\", \"perst\", \"perts\", \"perve\", \"pervo\", \"pervs\", \"pervy\", \"pesos\", \"pests\", \"pesty\", \"petar\", \"peter\", \"petit\", \"petre\", \"petri\", \"petti\", \"petto\", \"pewee\", \"pewit\", \"peyse\", \"phage\", \"phang\", \"phare\", \"pharm\", \"pheer\", \"phene\", \"pheon\", \"phese\", \"phial\", \"phish\", \"phizz\", \"phlox\", \"phoca\", \"phono\", \"phons\", \"phots\", \"phpht\", \"phuts\", \"phyla\", \"phyle\", \"piani\", \"pians\", \"pibal\", \"pical\", \"picas\", \"piccy\", \"picks\", \"picot\", \"picra\", \"picul\", \"piend\", \"piers\", \"piert\", \"pieta\", \"piets\", \"piezo\", \"pight\", \"pigmy\", \"piing\", \"pikas\", \"pikau\", \"piked\", \"piker\", \"pikes\", \"pikey\", \"pikis\", \"pikul\", \"pilae\", \"pilaf\", \"pilao\", \"pilar\", \"pilau\", \"pilaw\", \"pilch\", \"pilea\", \"piled\", \"pilei\", \"piler\", \"piles\", \"pilis\", \"pills\", \"pilow\", \"pilum\", \"pilus\", \"pimas\", \"pimps\", \"pinas\", \"pined\", \"pines\", \"pingo\", \"pings\", \"pinko\", \"pinks\", \"pinna\", \"pinny\", \"pinon\", \"pinot\", \"pinta\", \"pints\", \"pinup\", \"pions\", \"piony\", \"pious\", \"pioye\", \"pioys\", \"pipal\", \"pipas\", \"piped\", \"pipes\", \"pipet\", \"pipis\", \"pipit\", \"pippy\", \"pipul\", \"pirai\", \"pirls\", \"pirns\", \"pirog\", \"pisco\", \"pises\", \"pisky\", \"pisos\", \"pissy\", \"piste\", \"pitas\", \"piths\", \"piton\", \"pitot\", \"pitta\", \"piums\", \"pixes\", \"pized\", \"pizes\", \"plaas\", \"plack\", \"plage\", \"plans\", \"plaps\", \"plash\", \"plasm\", \"plast\", \"plats\", \"platt\", \"platy\", \"playa\", \"plays\", \"pleas\", \"plebe\", \"plebs\", \"plena\", \"pleon\", \"plesh\", \"plews\", \"plica\", \"plies\", \"plims\", \"pling\", \"plink\", \"ploat\", \"plods\", \"plong\", \"plonk\", \"plook\", \"plops\", \"plots\", \"plotz\", \"plouk\", \"plows\", \"ploye\", \"ploys\", \"plues\", \"pluff\", \"plugs\", \"plums\", \"plumy\", \"pluot\", \"pluto\", \"plyer\", \"poach\", \"poaka\", \"poake\", \"poboy\", \"pocks\", \"pocky\", \"podal\", \"poddy\", \"podex\", \"podge\", \"podgy\", \"podia\", \"poems\", \"poeps\", \"poets\", \"pogey\", \"pogge\", \"pogos\", \"pohed\", \"poilu\", \"poind\", \"pokal\", \"poked\", \"pokes\", \"pokey\", \"pokie\", \"poled\", \"poler\", \"poles\", \"poley\", \"polio\", \"polis\", \"polje\", \"polks\", \"polls\", \"polly\", \"polos\", \"polts\", \"polys\", \"pombe\", \"pomes\", \"pommy\", \"pomos\", \"pomps\", \"ponce\", \"poncy\", \"ponds\", \"pones\", \"poney\", \"ponga\", \"pongo\", \"pongs\", \"pongy\", \"ponks\", \"ponts\", \"ponty\", \"ponzu\", \"poods\", \"pooed\", \"poofs\", \"poofy\", \"poohs\", \"pooja\", \"pooka\", \"pooks\", \"pools\", \"poons\", \"poops\", \"poopy\", \"poori\", \"poort\", \"poots\", \"poove\", \"poovy\", \"popes\", \"poppa\", \"popsy\", \"porae\", \"poral\", \"pored\", \"porer\", \"pores\", \"porge\", \"porgy\", \"porin\", \"porks\", \"porky\", \"porno\", \"porns\", \"porny\", \"porta\", \"ports\", \"porty\", \"posed\", \"poses\", \"posey\", \"posho\", \"posts\", \"potae\", \"potch\", \"poted\", \"potes\", \"potin\", \"potoo\", \"potsy\", \"potto\", \"potts\", \"potty\", \"pouff\", \"poufs\", \"pouke\", \"pouks\", \"poule\", \"poulp\", \"poult\", \"poupe\", \"poupt\", \"pours\", \"pouts\", \"powan\", \"powin\", \"pownd\", \"powns\", \"powny\", \"powre\", \"poxed\", \"poxes\", \"poynt\", \"poyou\", \"poyse\", \"pozzy\", \"praam\", \"prads\", \"prahu\", \"prams\", \"prana\", \"prang\", \"praos\", \"prase\", \"prate\", \"prats\", \"pratt\", \"praty\", \"praus\", \"prays\", \"predy\", \"preed\", \"prees\", \"preif\", \"prems\", \"premy\", \"prent\", \"preon\", \"preop\", \"preps\", \"presa\", \"prese\", \"prest\", \"preve\", \"prexy\", \"preys\", \"prial\", \"pricy\", \"prief\", \"prier\", \"pries\", \"prigs\", \"prill\", \"prima\", \"primi\", \"primp\", \"prims\", \"primy\", \"prink\", \"prion\", \"prise\", \"priss\", \"proas\", \"probs\", \"prods\", \"proem\", \"profs\", \"progs\", \"proin\", \"proke\", \"prole\", \"proll\", \"promo\", \"proms\", \"pronk\", \"props\", \"prore\", \"proso\", \"pross\", \"prost\", \"prosy\", \"proto\", \"proul\", \"prows\", \"proyn\", \"prunt\", \"pruta\", \"pryer\", \"pryse\", \"pseud\", \"pshaw\", \"psion\", \"psoae\", \"psoai\", \"psoas\", \"psora\", \"psych\", \"psyop\", \"pubco\", \"pubes\", \"pubis\", \"pucan\", \"pucer\", \"puces\", \"pucka\", \"pucks\", \"puddy\", \"pudge\", \"pudic\", \"pudor\", \"pudsy\", \"pudus\", \"puers\", \"puffa\", \"puffs\", \"puggy\", \"pugil\", \"puhas\", \"pujah\", \"pujas\", \"pukas\", \"puked\", \"puker\", \"pukes\", \"pukey\", \"pukka\", \"pukus\", \"pulao\", \"pulas\", \"puled\", \"puler\", \"pules\", \"pulik\", \"pulis\", \"pulka\", \"pulks\", \"pulli\", \"pulls\", \"pully\", \"pulmo\", \"pulps\", \"pulus\", \"pumas\", \"pumie\", \"pumps\", \"punas\", \"punce\", \"punga\", \"pungs\", \"punji\", \"punka\", \"punks\", \"punky\", \"punny\", \"punto\", \"punts\", \"punty\", \"pupae\", \"pupas\", \"pupus\", \"purda\", \"pured\", \"pures\", \"purin\", \"puris\", \"purls\", \"purpy\", \"purrs\", \"pursy\", \"purty\", \"puses\", \"pusle\", \"putid\", \"puton\", \"putti\", \"putto\", \"putts\", \"puzel\", \"pwned\", \"pyats\", \"pyets\", \"pygal\", \"pyins\", \"pylon\", \"pyned\", \"pynes\", \"pyoid\", \"pyots\", \"pyral\", \"pyran\", \"pyres\", \"pyrex\", \"pyric\", \"pyros\", \"pyxed\", \"pyxes\", \"pyxie\", \"pyxis\", \"pzazz\", \"qadis\", \"qaids\", \"qajaq\", \"qanat\", \"qapik\", \"qibla\", \"qophs\", \"qorma\", \"quads\", \"quaff\", \"quags\", \"quair\", \"quais\", \"quaky\", \"quale\", \"quant\", \"quare\", \"quass\", \"quate\", \"quats\", \"quayd\", \"quays\", \"qubit\", \"quean\", \"queme\", \"quena\", \"quern\", \"queyn\", \"queys\", \"quich\", \"quids\", \"quiff\", \"quims\", \"quina\", \"quine\", \"quino\", \"quins\", \"quint\", \"quipo\", \"quips\", \"quipu\", \"quire\", \"quirt\", \"quist\", \"quits\", \"quoad\", \"quods\", \"quoif\", \"quoin\", \"quoit\", \"quoll\", \"quonk\", \"quops\", \"qursh\", \"quyte\", \"rabat\", \"rabic\", \"rabis\", \"raced\", \"races\", \"rache\", \"racks\", \"racon\", \"radge\", \"radix\", \"radon\", \"raffs\", \"rafts\", \"ragas\", \"ragde\", \"raged\", \"ragee\", \"rager\", \"rages\", \"ragga\", \"raggs\", \"raggy\", \"ragis\", \"ragus\", \"rahed\", \"rahui\", \"raias\", \"raids\", \"raiks\", \"raile\", \"rails\", \"raine\", \"rains\", \"raird\", \"raita\", \"raits\", \"rajas\", \"rajes\", \"raked\", \"rakee\", \"raker\", \"rakes\", \"rakia\", \"rakis\", \"rakus\", \"rales\", \"ramal\", \"ramee\", \"ramet\", \"ramie\", \"ramin\", \"ramis\", \"rammy\", \"ramps\", \"ramus\", \"ranas\", \"rance\", \"rands\", \"ranee\", \"ranga\", \"rangi\", \"rangs\", \"rangy\", \"ranid\", \"ranis\", \"ranke\", \"ranks\", \"rants\", \"raped\", \"raper\", \"rapes\", \"raphe\", \"rappe\", \"rared\", \"raree\", \"rares\", \"rarks\", \"rased\", \"raser\", \"rases\", \"rasps\", \"rasse\", \"rasta\", \"ratal\", \"ratan\", \"ratas\", \"ratch\", \"rated\", \"ratel\", \"rater\", \"rates\", \"ratha\", \"rathe\", \"raths\", \"ratoo\", \"ratos\", \"ratus\", \"rauns\", \"raupo\", \"raved\", \"ravel\", \"raver\", \"raves\", \"ravey\", \"ravin\", \"rawer\", \"rawin\", \"rawly\", \"rawns\", \"raxed\", \"raxes\", \"rayah\", \"rayas\", \"rayed\", \"rayle\", \"rayne\", \"razed\", \"razee\", \"razer\", \"razes\", \"razoo\", \"readd\", \"reads\", \"reais\", \"reaks\", \"realo\", \"reals\", \"reame\", \"reams\", \"reamy\", \"reans\", \"reaps\", \"rears\", \"reast\", \"reata\", \"reate\", \"reave\", \"rebbe\", \"rebec\", \"rebid\", \"rebit\", \"rebop\", \"rebuy\", \"recal\", \"recce\", \"recco\", \"reccy\", \"recit\", \"recks\", \"recon\", \"recta\", \"recti\", \"recto\", \"redan\", \"redds\", \"reddy\", \"reded\", \"redes\", \"redia\", \"redid\", \"redip\", \"redly\", \"redon\", \"redos\", \"redox\", \"redry\", \"redub\", \"redux\", \"redye\", \"reech\", \"reede\", \"reeds\", \"reefs\", \"reefy\", \"reeks\", \"reeky\", \"reels\", \"reens\", \"reest\", \"reeve\", \"refed\", \"refel\", \"reffo\", \"refis\", \"refix\", \"refly\", \"refry\", \"regar\", \"reges\", \"reggo\", \"regie\", \"regma\", \"regna\", \"regos\", \"regur\", \"rehem\", \"reifs\", \"reify\", \"reiki\", \"reiks\", \"reink\", \"reins\", \"reird\", \"reist\", \"reive\", \"rejig\", \"rejon\", \"reked\", \"rekes\", \"rekey\", \"relet\", \"relie\", \"relit\", \"rello\", \"reman\", \"remap\", \"remen\", \"remet\", \"remex\", \"remix\", \"renay\", \"rends\", \"reney\", \"renga\", \"renig\", \"renin\", \"renne\", \"renos\", \"rente\", \"rents\", \"reoil\", \"reorg\", \"repeg\", \"repin\", \"repla\", \"repos\", \"repot\", \"repps\", \"repro\", \"reran\", \"rerig\", \"resat\", \"resaw\", \"resay\", \"resee\", \"reses\", \"resew\", \"resid\", \"resit\", \"resod\", \"resow\", \"resto\", \"rests\", \"resty\", \"resus\", \"retag\", \"retax\", \"retem\", \"retia\", \"retie\", \"retox\", \"revet\", \"revie\", \"rewan\", \"rewax\", \"rewed\", \"rewet\", \"rewin\", \"rewon\", \"rewth\", \"rexes\", \"rezes\", \"rheas\", \"rheme\", \"rheum\", \"rhies\", \"rhime\", \"rhine\", \"rhody\", \"rhomb\", \"rhone\", \"rhumb\", \"rhyne\", \"rhyta\", \"riads\", \"rials\", \"riant\", \"riata\", \"ribas\", \"ribby\", \"ribes\", \"riced\", \"ricer\", \"rices\", \"ricey\", \"richt\", \"ricin\", \"ricks\", \"rides\", \"ridgy\", \"ridic\", \"riels\", \"riems\", \"rieve\", \"rifer\", \"riffs\", \"rifte\", \"rifts\", \"rifty\", \"riggs\", \"rigol\", \"riled\", \"riles\", \"riley\", \"rille\", \"rills\", \"rimae\", \"rimed\", \"rimer\", \"rimes\", \"rimus\", \"rinds\", \"rindy\", \"rines\", \"rings\", \"rinks\", \"rioja\", \"riots\", \"riped\", \"ripes\", \"ripps\", \"rises\", \"rishi\", \"risks\", \"risps\", \"risus\", \"rites\", \"ritts\", \"ritzy\", \"rivas\", \"rived\", \"rivel\", \"riven\", \"rives\", \"riyal\", \"rizas\", \"roads\", \"roams\", \"roans\", \"roars\", \"roary\", \"roate\", \"robed\", \"robes\", \"roble\", \"rocks\", \"roded\", \"rodes\", \"roguy\", \"rohes\", \"roids\", \"roils\", \"roily\", \"roins\", \"roist\", \"rojak\", \"rojis\", \"roked\", \"roker\", \"rokes\", \"rolag\", \"roles\", \"rolfs\", \"rolls\", \"romal\", \"roman\", \"romeo\", \"romps\", \"ronde\", \"rondo\", \"roneo\", \"rones\", \"ronin\", \"ronne\", \"ronte\", \"ronts\", \"roods\", \"roofs\", \"roofy\", \"rooks\", \"rooky\", \"rooms\", \"roons\", \"roops\", \"roopy\", \"roosa\", \"roose\", \"roots\", \"rooty\", \"roped\", \"roper\", \"ropes\", \"ropey\", \"roque\", \"roral\", \"rores\", \"roric\", \"rorid\", \"rorie\", \"rorts\", \"rorty\", \"rosed\", \"roses\", \"roset\", \"roshi\", \"rosin\", \"rosit\", \"rosti\", \"rosts\", \"rotal\", \"rotan\", \"rotas\", \"rotch\", \"roted\", \"rotes\", \"rotis\", \"rotls\", \"roton\", \"rotos\", \"rotte\", \"rouen\", \"roues\", \"roule\", \"rouls\", \"roums\", \"roups\", \"roupy\", \"roust\", \"routh\", \"routs\", \"roved\", \"roven\", \"roves\", \"rowan\", \"rowed\", \"rowel\", \"rowen\", \"rowie\", \"rowme\", \"rownd\", \"rowth\", \"rowts\", \"royne\", \"royst\", \"rozet\", \"rozit\", \"ruana\", \"rubai\", \"rubby\", \"rubel\", \"rubes\", \"rubin\", \"ruble\", \"rubli\", \"rubus\", \"ruche\", \"rucks\", \"rudas\", \"rudds\", \"rudes\", \"rudie\", \"rudis\", \"rueda\", \"ruers\", \"ruffe\", \"ruffs\", \"rugae\", \"rugal\", \"ruggy\", \"ruing\", \"ruins\", \"rukhs\", \"ruled\", \"rules\", \"rumal\", \"rumbo\", \"rumen\", \"rumes\", \"rumly\", \"rummy\", \"rumpo\", \"rumps\", \"rumpy\", \"runch\", \"runds\", \"runed\", \"runes\", \"rungs\", \"runic\", \"runny\", \"runts\", \"runty\", \"rupia\", \"rurps\", \"rurus\", \"rusas\", \"ruses\", \"rushy\", \"rusks\", \"rusma\", \"russe\", \"rusts\", \"ruths\", \"rutin\", \"rutty\", \"ryals\", \"rybat\", \"ryked\", \"rykes\", \"rymme\", \"rynds\", \"ryots\", \"ryper\", \"saags\", \"sabal\", \"sabed\", \"saber\", \"sabes\", \"sabha\", \"sabin\", \"sabir\", \"sable\", \"sabot\", \"sabra\", \"sabre\", \"sacks\", \"sacra\", \"saddo\", \"sades\", \"sadhe\", \"sadhu\", \"sadis\", \"sados\", \"sadza\", \"safed\", \"safes\", \"sagas\", \"sager\", \"sages\", \"saggy\", \"sagos\", \"sagum\", \"saheb\", \"sahib\", \"saice\", \"saick\", \"saics\", \"saids\", \"saiga\", \"sails\", \"saims\", \"saine\", \"sains\", \"sairs\", \"saist\", \"saith\", \"sajou\", \"sakai\", \"saker\", \"sakes\", \"sakia\", \"sakis\", \"sakti\", \"salal\", \"salat\", \"salep\", \"sales\", \"salet\", \"salic\", \"salix\", \"salle\", \"salmi\", \"salol\", \"salop\", \"salpa\", \"salps\", \"salse\", \"salto\", \"salts\", \"salue\", \"salut\", \"saman\", \"samas\", \"samba\", \"sambo\", \"samek\", \"samel\", \"samen\", \"sames\", \"samey\", \"samfu\", \"sammy\", \"sampi\", \"samps\", \"sands\", \"saned\", \"sanes\", \"sanga\", \"sangh\", \"sango\", \"sangs\", \"sanko\", \"sansa\", \"santo\", \"sants\", \"saola\", \"sapan\", \"sapid\", \"sapor\", \"saran\", \"sards\", \"sared\", \"saree\", \"sarge\", \"sargo\", \"sarin\", \"saris\", \"sarks\", \"sarky\", \"sarod\", \"saros\", \"sarus\", \"saser\", \"sasin\", \"sasse\", \"satai\", \"satay\", \"sated\", \"satem\", \"sates\", \"satis\", \"sauba\", \"sauch\", \"saugh\", \"sauls\", \"sault\", \"saunt\", \"saury\", \"sauts\", \"saved\", \"saver\", \"saves\", \"savey\", \"savin\", \"sawah\", \"sawed\", \"sawer\", \"saxes\", \"sayed\", \"sayer\", \"sayid\", \"sayne\", \"sayon\", \"sayst\", \"sazes\", \"scabs\", \"scads\", \"scaff\", \"scags\", \"scail\", \"scala\", \"scall\", \"scams\", \"scand\", \"scans\", \"scapa\", \"scape\", \"scapi\", \"scarp\", \"scars\", \"scart\", \"scath\", \"scats\", \"scatt\", \"scaud\", \"scaup\", \"scaur\", \"scaws\", \"sceat\", \"scena\", \"scend\", \"schav\", \"schmo\", \"schul\", \"schwa\", \"sclim\", \"scody\", \"scogs\", \"scoog\", \"scoot\", \"scopa\", \"scops\", \"scots\", \"scoug\", \"scoup\", \"scowp\", \"scows\", \"scrab\", \"scrae\", \"scrag\", \"scran\", \"scrat\", \"scraw\", \"scray\", \"scrim\", \"scrip\", \"scrob\", \"scrod\", \"scrog\", \"scrow\", \"scudi\", \"scudo\", \"scuds\", \"scuff\", \"scuft\", \"scugs\", \"sculk\", \"scull\", \"sculp\", \"sculs\", \"scums\", \"scups\", \"scurf\", \"scurs\", \"scuse\", \"scuta\", \"scute\", \"scuts\", \"scuzz\", \"scyes\", \"sdayn\", \"sdein\", \"seals\", \"seame\", \"seams\", \"seamy\", \"seans\", \"seare\", \"sears\", \"sease\", \"seats\", \"seaze\", \"sebum\", \"secco\", \"sechs\", \"sects\", \"seder\", \"sedes\", \"sedge\", \"sedgy\", \"sedum\", \"seeds\", \"seeks\", \"seeld\", \"seels\", \"seely\", \"seems\", \"seeps\", \"seepy\", \"seers\", \"sefer\", \"segar\", \"segni\", \"segno\", \"segol\", \"segos\", \"sehri\", \"seifs\", \"seils\", \"seine\", \"seirs\", \"seise\", \"seism\", \"seity\", \"seiza\", \"sekos\", \"sekts\", \"selah\", \"seles\", \"selfs\", \"sella\", \"selle\", \"sells\", \"selva\", \"semee\", \"semes\", \"semie\", \"semis\", \"senas\", \"sends\", \"senes\", \"sengi\", \"senna\", \"senor\", \"sensa\", \"sensi\", \"sente\", \"senti\", \"sents\", \"senvy\", \"senza\", \"sepad\", \"sepal\", \"sepic\", \"sepoy\", \"septa\", \"septs\", \"serac\", \"serai\", \"seral\", \"sered\", \"serer\", \"seres\", \"serfs\", \"serge\", \"seric\", \"serin\", \"serks\", \"seron\", \"serow\", \"serra\", \"serre\", \"serrs\", \"serry\", \"servo\", \"sesey\", \"sessa\", \"setae\", \"setal\", \"seton\", \"setts\", \"sewan\", \"sewar\", \"sewed\", \"sewel\", \"sewen\", \"sewin\", \"sexed\", \"sexer\", \"sexes\", \"sexto\", \"sexts\", \"seyen\", \"shads\", \"shags\", \"shahs\", \"shako\", \"shakt\", \"shalm\", \"shaly\", \"shama\", \"shams\", \"shand\", \"shans\", \"shaps\", \"sharn\", \"shash\", \"shaul\", \"shawm\", \"shawn\", \"shaws\", \"shaya\", \"shays\", \"shchi\", \"sheaf\", \"sheal\", \"sheas\", \"sheds\", \"sheel\", \"shend\", \"shent\", \"sheol\", \"sherd\", \"shere\", \"shero\", \"shets\", \"sheva\", \"shewn\", \"shews\", \"shiai\", \"shiel\", \"shier\", \"shies\", \"shill\", \"shily\", \"shims\", \"shins\", \"ships\", \"shirr\", \"shirs\", \"shish\", \"shiso\", \"shist\", \"shite\", \"shits\", \"shiur\", \"shiva\", \"shive\", \"shivs\", \"shlep\", \"shlub\", \"shmek\", \"shmoe\", \"shoat\", \"shoed\", \"shoer\", \"shoes\", \"shogi\", \"shogs\", \"shoji\", \"shojo\", \"shola\", \"shool\", \"shoon\", \"shoos\", \"shope\", \"shops\", \"shorl\", \"shote\", \"shots\", \"shott\", \"showd\", \"shows\", \"shoyu\", \"shred\", \"shris\", \"shrow\", \"shtik\", \"shtum\", \"shtup\", \"shule\", \"shuln\", \"shuls\", \"shuns\", \"shura\", \"shute\", \"shuts\", \"shwas\", \"shyer\", \"sials\", \"sibbs\", \"sibyl\", \"sices\", \"sicht\", \"sicko\", \"sicks\", \"sicky\", \"sidas\", \"sided\", \"sider\", \"sides\", \"sidha\", \"sidhe\", \"sidle\", \"sield\", \"siens\", \"sient\", \"sieth\", \"sieur\", \"sifts\", \"sighs\", \"sigil\", \"sigla\", \"signa\", \"signs\", \"sijos\", \"sikas\", \"siker\", \"sikes\", \"silds\", \"siled\", \"silen\", \"siler\", \"siles\", \"silex\", \"silks\", \"sills\", \"silos\", \"silts\", \"silty\", \"silva\", \"simar\", \"simas\", \"simba\", \"simis\", \"simps\", \"simul\", \"sinds\", \"sined\", \"sines\", \"sings\", \"sinhs\", \"sinks\", \"sinky\", \"sinus\", \"siped\", \"sipes\", \"sippy\", \"sired\", \"siree\", \"sires\", \"sirih\", \"siris\", \"siroc\", \"sirra\", \"sirup\", \"sisal\", \"sises\", \"sista\", \"sists\", \"sitar\", \"sited\", \"sites\", \"sithe\", \"sitka\", \"situp\", \"situs\", \"siver\", \"sixer\", \"sixes\", \"sixmo\", \"sixte\", \"sizar\", \"sized\", \"sizel\", \"sizer\", \"sizes\", \"skags\", \"skail\", \"skald\", \"skank\", \"skart\", \"skats\", \"skatt\", \"skaws\", \"skean\", \"skear\", \"skeds\", \"skeed\", \"skeef\", \"skeen\", \"skeer\", \"skees\", \"skeet\", \"skegg\", \"skegs\", \"skein\", \"skelf\", \"skell\", \"skelm\", \"skelp\", \"skene\", \"skens\", \"skeos\", \"skeps\", \"skers\", \"skets\", \"skews\", \"skids\", \"skied\", \"skies\", \"skiey\", \"skimo\", \"skims\", \"skink\", \"skins\", \"skint\", \"skios\", \"skips\", \"skirl\", \"skirr\", \"skite\", \"skits\", \"skive\", \"skivy\", \"sklim\", \"skoal\", \"skody\", \"skoff\", \"skogs\", \"skols\", \"skool\", \"skort\", \"skosh\", \"skran\", \"skrik\", \"skuas\", \"skugs\", \"skyed\", \"skyer\", \"skyey\", \"skyfs\", \"skyre\", \"skyrs\", \"skyte\", \"slabs\", \"slade\", \"slaes\", \"slags\", \"slaid\", \"slake\", \"slams\", \"slane\", \"slank\", \"slaps\", \"slart\", \"slats\", \"slaty\", \"slaws\", \"slays\", \"slebs\", \"sleds\", \"sleer\", \"slews\", \"sleys\", \"slier\", \"slily\", \"slims\", \"slipe\", \"slips\", \"slipt\", \"slish\", \"slits\", \"slive\", \"sloan\", \"slobs\", \"sloes\", \"slogs\", \"sloid\", \"slojd\", \"slomo\", \"sloom\", \"sloot\", \"slops\", \"slopy\", \"slorm\", \"slots\", \"slove\", \"slows\", \"sloyd\", \"slubb\", \"slubs\", \"slued\", \"slues\", \"sluff\", \"slugs\", \"sluit\", \"slums\", \"slurb\", \"slurs\", \"sluse\", \"slyer\", \"slype\", \"smaak\", \"smaik\", \"smalm\", \"smalt\", \"smarm\", \"smaze\", \"smeek\", \"smees\", \"smeik\", \"smeke\", \"smerk\", \"smews\", \"smirr\", \"smirs\", \"smits\", \"smogs\", \"smoko\", \"smolt\", \"smoor\", \"smoot\", \"smore\", \"smorg\", \"smout\", \"smowt\", \"smugs\", \"smurs\", \"smush\", \"smuts\", \"snabs\", \"snafu\", \"snags\", \"snaps\", \"snarf\", \"snark\", \"snars\", \"snary\", \"snash\", \"snath\", \"snaws\", \"snead\", \"sneap\", \"snebs\", \"sneck\", \"sneds\", \"sneed\", \"snees\", \"snell\", \"snibs\", \"snick\", \"snies\", \"snift\", \"snigs\", \"snips\", \"snipy\", \"snirt\", \"snits\", \"snobs\", \"snods\", \"snoek\", \"snoep\", \"snogs\", \"snoke\", \"snood\", \"snook\", \"snool\", \"snoot\", \"snots\", \"snowk\", \"snows\", \"snubs\", \"snugs\", \"snush\", \"snyes\", \"soaks\", \"soaps\", \"soare\", \"soars\", \"soave\", \"sobas\", \"socas\", \"soces\", \"socko\", \"socks\", \"socle\", \"sodas\", \"soddy\", \"sodic\", \"sodom\", \"sofar\", \"sofas\", \"softa\", \"softs\", \"softy\", \"soger\", \"sohur\", \"soils\", \"soily\", \"sojas\", \"sojus\", \"sokah\", \"soken\", \"sokes\", \"sokol\", \"solah\", \"solan\", \"solas\", \"solde\", \"soldi\", \"soldo\", \"solds\", \"soled\", \"solei\", \"soler\", \"soles\", \"solon\", \"solos\", \"solum\", \"solus\", \"soman\", \"somas\", \"sonce\", \"sonde\", \"sones\", \"songs\", \"sonly\", \"sonne\", \"sonny\", \"sonse\", \"sonsy\", \"sooey\", \"sooks\", \"sooky\", \"soole\", \"sools\", \"sooms\", \"soops\", \"soote\", \"soots\", \"sophs\", \"sophy\", \"sopor\", \"soppy\", \"sopra\", \"soral\", \"soras\", \"sorbo\", \"sorbs\", \"sorda\", \"sordo\", \"sords\", \"sored\", \"soree\", \"sorel\", \"sorer\", \"sores\", \"sorex\", \"sorgo\", \"sorns\", \"sorra\", \"sorta\", \"sorts\", \"sorus\", \"soths\", \"sotol\", \"souce\", \"souct\", \"sough\", \"souks\", \"souls\", \"soums\", \"soups\", \"soupy\", \"sours\", \"souse\", \"souts\", \"sowar\", \"sowce\", \"sowed\", \"sowff\", \"sowfs\", \"sowle\", \"sowls\", \"sowms\", \"sownd\", \"sowne\", \"sowps\", \"sowse\", \"sowth\", \"soyas\", \"soyle\", \"soyuz\", \"sozin\", \"spacy\", \"spado\", \"spaed\", \"spaer\", \"spaes\", \"spags\", \"spahi\", \"spail\", \"spain\", \"spait\", \"spake\", \"spald\", \"spale\", \"spall\", \"spalt\", \"spams\", \"spane\", \"spang\", \"spans\", \"spard\", \"spars\", \"spart\", \"spate\", \"spats\", \"spaul\", \"spawl\", \"spaws\", \"spayd\", \"spays\", \"spaza\", \"spazz\", \"speal\", \"spean\", \"speat\", \"specs\", \"spect\", \"speel\", \"speer\", \"speil\", \"speir\", \"speks\", \"speld\", \"spelk\", \"speos\", \"spets\", \"speug\", \"spews\", \"spewy\", \"spial\", \"spica\", \"spide\", \"spier\", \"spies\", \"spiff\", \"spifs\", \"spile\", \"spims\", \"spina\", \"spink\", \"spins\", \"spirt\", \"spiry\", \"spits\", \"spitz\", \"spivs\", \"splay\", \"splog\", \"spode\", \"spods\", \"spoom\", \"spoor\", \"spoot\", \"spork\", \"sposh\", \"spots\", \"sprad\", \"sprag\", \"sprat\", \"spred\", \"sprew\", \"sprit\", \"sprod\", \"sprog\", \"sprue\", \"sprug\", \"spuds\", \"spued\", \"spuer\", \"spues\", \"spugs\", \"spule\", \"spume\", \"spumy\", \"spurs\", \"sputa\", \"spyal\", \"spyre\", \"squab\", \"squaw\", \"squeg\", \"squid\", \"squit\", \"squiz\", \"stabs\", \"stade\", \"stags\", \"stagy\", \"staig\", \"stane\", \"stang\", \"staph\", \"staps\", \"starn\", \"starr\", \"stars\", \"stats\", \"staun\", \"staws\", \"stays\", \"stean\", \"stear\", \"stedd\", \"stede\", \"steds\", \"steek\", \"steem\", \"steen\", \"steil\", \"stela\", \"stele\", \"stell\", \"steme\", \"stems\", \"stend\", \"steno\", \"stens\", \"stent\", \"steps\", \"stept\", \"stere\", \"stets\", \"stews\", \"stewy\", \"steys\", \"stich\", \"stied\", \"sties\", \"stilb\", \"stile\", \"stime\", \"stims\", \"stimy\", \"stipa\", \"stipe\", \"stire\", \"stirk\", \"stirp\", \"stirs\", \"stive\", \"stivy\", \"stoae\", \"stoai\", \"stoas\", \"stoat\", \"stobs\", \"stoep\", \"stogy\", \"stoit\", \"stoln\", \"stoma\", \"stond\", \"stong\", \"stonk\", \"stonn\", \"stook\", \"stoor\", \"stope\", \"stops\", \"stopt\", \"stoss\", \"stots\", \"stott\", \"stoun\", \"stoup\", \"stour\", \"stown\", \"stowp\", \"stows\", \"strad\", \"strae\", \"strag\", \"strak\", \"strep\", \"strew\", \"stria\", \"strig\", \"strim\", \"strop\", \"strow\", \"stroy\", \"strum\", \"stubs\", \"stude\", \"studs\", \"stull\", \"stulm\", \"stumm\", \"stums\", \"stuns\", \"stupa\", \"stupe\", \"sture\", \"sturt\", \"styed\", \"styes\", \"styli\", \"stylo\", \"styme\", \"stymy\", \"styre\", \"styte\", \"subah\", \"subas\", \"subby\", \"suber\", \"subha\", \"succi\", \"sucks\", \"sucky\", \"sucre\", \"sudds\", \"sudor\", \"sudsy\", \"suede\", \"suent\", \"suers\", \"suete\", \"suets\", \"suety\", \"sugan\", \"sughs\", \"sugos\", \"suhur\", \"suids\", \"suint\", \"suits\", \"sujee\", \"sukhs\", \"sukuk\", \"sulci\", \"sulfa\", \"sulfo\", \"sulks\", \"sulph\", \"sulus\", \"sumis\", \"summa\", \"sumos\", \"sumph\", \"sumps\", \"sunis\", \"sunks\", \"sunna\", \"sunns\", \"sunup\", \"supes\", \"supra\", \"surah\", \"sural\", \"suras\", \"surat\", \"surds\", \"sured\", \"sures\", \"surfs\", \"surfy\", \"surgy\", \"surra\", \"sused\", \"suses\", \"susus\", \"sutor\", \"sutra\", \"sutta\", \"swabs\", \"swack\", \"swads\", \"swage\", \"swags\", \"swail\", \"swain\", \"swale\", \"swaly\", \"swamy\", \"swang\", \"swank\", \"swans\", \"swaps\", \"swapt\", \"sward\", \"sware\", \"swarf\", \"swart\", \"swats\", \"swayl\", \"sways\", \"sweal\", \"swede\", \"sweed\", \"sweel\", \"sweer\", \"swees\", \"sweir\", \"swelt\", \"swerf\", \"sweys\", \"swies\", \"swigs\", \"swile\", \"swims\", \"swink\", \"swipe\", \"swire\", \"swiss\", \"swith\", \"swits\", \"swive\", \"swizz\", \"swobs\", \"swole\", \"swoln\", \"swops\", \"swopt\", \"swots\", \"swoun\", \"sybbe\", \"sybil\", \"syboe\", \"sybow\", \"sycee\", \"syces\", \"sycon\", \"syens\", \"syker\", \"sykes\", \"sylis\", \"sylph\", \"sylva\", \"symar\", \"synch\", \"syncs\", \"synds\", \"syned\", \"synes\", \"synth\", \"syped\", \"sypes\", \"syphs\", \"syrah\", \"syren\", \"sysop\", \"sythe\", \"syver\", \"taals\", \"taata\", \"taber\", \"tabes\", \"tabid\", \"tabis\", \"tabla\", \"tabor\", \"tabun\", \"tabus\", \"tacan\", \"taces\", \"tacet\", \"tache\", \"tacho\", \"tachs\", \"tacks\", \"tacos\", \"tacts\", \"taels\", \"tafia\", \"taggy\", \"tagma\", \"tahas\", \"tahrs\", \"taiga\", \"taigs\", \"taiko\", \"tails\", \"tains\", \"taira\", \"taish\", \"taits\", \"tajes\", \"takas\", \"takes\", \"takhi\", \"takin\", \"takis\", \"takky\", \"talak\", \"talaq\", \"talar\", \"talas\", \"talcs\", \"talcy\", \"talea\", \"taler\", \"tales\", \"talks\", \"talky\", \"talls\", \"talma\", \"talpa\", \"taluk\", \"talus\", \"tamal\", \"tamed\", \"tames\", \"tamin\", \"tamis\", \"tammy\", \"tamps\", \"tanas\", \"tanga\", \"tangi\", \"tangs\", \"tanhs\", \"tanka\", \"tanks\", \"tanky\", \"tanna\", \"tansy\", \"tanti\", \"tanto\", \"tanty\", \"tapas\", \"taped\", \"tapen\", \"tapes\", \"tapet\", \"tapis\", \"tappa\", \"tapus\", \"taras\", \"tardo\", \"tared\", \"tares\", \"targa\", \"targe\", \"tarns\", \"taroc\", \"tarok\", \"taros\", \"tarps\", \"tarre\", \"tarry\", \"tarsi\", \"tarts\", \"tarty\", \"tasar\", \"tased\", \"taser\", \"tases\", \"tasks\", \"tassa\", \"tasse\", \"tasso\", \"tatar\", \"tater\", \"tates\", \"taths\", \"tatie\", \"tatou\", \"tatts\", \"tatus\", \"taube\", \"tauld\", \"tauon\", \"taupe\", \"tauts\", \"tavah\", \"tavas\", \"taver\", \"tawai\", \"tawas\", \"tawed\", \"tawer\", \"tawie\", \"tawse\", \"tawts\", \"taxed\", \"taxer\", \"taxes\", \"taxis\", \"taxol\", \"taxon\", \"taxor\", \"taxus\", \"tayra\", \"tazza\", \"tazze\", \"teade\", \"teads\", \"teaed\", \"teaks\", \"teals\", \"teams\", \"tears\", \"teats\", \"teaze\", \"techs\", \"techy\", \"tecta\", \"teels\", \"teems\", \"teend\", \"teene\", \"teens\", \"teeny\", \"teers\", \"teffs\", \"teggs\", \"tegua\", \"tegus\", \"tehrs\", \"teiid\", \"teils\", \"teind\", \"teins\", \"telae\", \"telco\", \"teles\", \"telex\", \"telia\", \"telic\", \"tells\", \"telly\", \"teloi\", \"telos\", \"temed\", \"temes\", \"tempi\", \"temps\", \"tempt\", \"temse\", \"tench\", \"tends\", \"tendu\", \"tenes\", \"tenge\", \"tenia\", \"tenne\", \"tenno\", \"tenny\", \"tenon\", \"tents\", \"tenty\", \"tenue\", \"tepal\", \"tepas\", \"tepoy\", \"terai\", \"teras\", \"terce\", \"terek\", \"teres\", \"terfe\", \"terfs\", \"terga\", \"terms\", \"terne\", \"terns\", \"terry\", \"terts\", \"tesla\", \"testa\", \"teste\", \"tests\", \"tetes\", \"teths\", \"tetra\", \"tetri\", \"teuch\", \"teugh\", \"tewed\", \"tewel\", \"tewit\", \"texas\", \"texes\", \"texts\", \"thack\", \"thagi\", \"thaim\", \"thale\", \"thali\", \"thana\", \"thane\", \"thang\", \"thans\", \"thanx\", \"tharm\", \"thars\", \"thaws\", \"thawy\", \"thebe\", \"theca\", \"theed\", \"theek\", \"thees\", \"thegn\", \"theic\", \"thein\", \"thelf\", \"thema\", \"thens\", \"theow\", \"therm\", \"thesp\", \"thete\", \"thews\", \"thewy\", \"thigs\", \"thilk\", \"thill\", \"thine\", \"thins\", \"thiol\", \"thirl\", \"thoft\", \"thole\", \"tholi\", \"thoro\", \"thorp\", \"thous\", \"thowl\", \"thrae\", \"thraw\", \"thrid\", \"thrip\", \"throe\", \"thuds\", \"thugs\", \"thuja\", \"thunk\", \"thurl\", \"thuya\", \"thymi\", \"thymy\", \"tians\", \"tiars\", \"tical\", \"ticca\", \"ticed\", \"tices\", \"tichy\", \"ticks\", \"ticky\", \"tiddy\", \"tided\", \"tides\", \"tiers\", \"tiffs\", \"tifos\", \"tifts\", \"tiges\", \"tigon\", \"tikas\", \"tikes\", \"tikis\", \"tikka\", \"tilak\", \"tiled\", \"tiler\", \"tiles\", \"tills\", \"tilly\", \"tilth\", \"tilts\", \"timbo\", \"timed\", \"times\", \"timon\", \"timps\", \"tinas\", \"tinct\", \"tinds\", \"tinea\", \"tined\", \"tines\", \"tinge\", \"tings\", \"tinks\", \"tinny\", \"tints\", \"tinty\", \"tipis\", \"tippy\", \"tired\", \"tires\", \"tirls\", \"tiros\", \"tirrs\", \"titch\", \"titer\", \"titis\", \"titre\", \"titty\", \"titup\", \"tiyin\", \"tiyns\", \"tizes\", \"tizzy\", \"toads\", \"toady\", \"toaze\", \"tocks\", \"tocky\", \"tocos\", \"todde\", \"toeas\", \"toffs\", \"toffy\", \"tofts\", \"tofus\", \"togae\", \"togas\", \"toged\", \"toges\", \"togue\", \"tohos\", \"toile\", \"toils\", \"toing\", \"toise\", \"toits\", \"tokay\", \"toked\", \"toker\", \"tokes\", \"tokos\", \"tolan\", \"tolar\", \"tolas\", \"toled\", \"toles\", \"tolls\", \"tolly\", \"tolts\", \"tolus\", \"tolyl\", \"toman\", \"tombs\", \"tomes\", \"tomia\", \"tommy\", \"tomos\", \"tondi\", \"tondo\", \"toned\", \"toner\", \"tones\", \"toney\", \"tongs\", \"tonka\", \"tonks\", \"tonne\", \"tonus\", \"tools\", \"tooms\", \"toons\", \"toots\", \"toped\", \"topee\", \"topek\", \"toper\", \"topes\", \"tophe\", \"tophi\", \"tophs\", \"topis\", \"topoi\", \"topos\", \"toppy\", \"toque\", \"torah\", \"toran\", \"toras\", \"torcs\", \"tores\", \"toric\", \"torii\", \"toros\", \"torot\", \"torrs\", \"torse\", \"torsi\", \"torsk\", \"torta\", \"torte\", \"torts\", \"tosas\", \"tosed\", \"toses\", \"toshy\", \"tossy\", \"toted\", \"toter\", \"totes\", \"totty\", \"touks\", \"touns\", \"tours\", \"touse\", \"tousy\", \"touts\", \"touze\", \"touzy\", \"towed\", \"towie\", \"towns\", \"towny\", \"towse\", \"towsy\", \"towts\", \"towze\", \"towzy\", \"toyed\", \"toyer\", \"toyon\", \"toyos\", \"tozed\", \"tozes\", \"tozie\", \"trabs\", \"trads\", \"tragi\", \"traik\", \"trams\", \"trank\", \"tranq\", \"trans\", \"trant\", \"trape\", \"traps\", \"trapt\", \"trass\", \"trats\", \"tratt\", \"trave\", \"trayf\", \"trays\", \"treck\", \"treed\", \"treen\", \"trees\", \"trefa\", \"treif\", \"treks\", \"trema\", \"trems\", \"tress\", \"trest\", \"trets\", \"trews\", \"treyf\", \"treys\", \"triac\", \"tride\", \"trier\", \"tries\", \"triff\", \"trigo\", \"trigs\", \"trike\", \"trild\", \"trill\", \"trims\", \"trine\", \"trins\", \"triol\", \"trior\", \"trios\", \"trips\", \"tripy\", \"trist\", \"troad\", \"troak\", \"troat\", \"trock\", \"trode\", \"trods\", \"trogs\", \"trois\", \"troke\", \"tromp\", \"trona\", \"tronc\", \"trone\", \"tronk\", \"trons\", \"trooz\", \"troth\", \"trots\", \"trows\", \"troys\", \"trued\", \"trues\", \"trugo\", \"trugs\", \"trull\", \"tryer\", \"tryke\", \"tryma\", \"tryps\", \"tsade\", \"tsadi\", \"tsars\", \"tsked\", \"tsuba\", \"tsubo\", \"tuans\", \"tuart\", \"tuath\", \"tubae\", \"tubar\", \"tubas\", \"tubby\", \"tubed\", \"tubes\", \"tucks\", \"tufas\", \"tuffe\", \"tuffs\", \"tufts\", \"tufty\", \"tugra\", \"tuile\", \"tuina\", \"tuism\", \"tuktu\", \"tules\", \"tulpa\", \"tulsi\", \"tumid\", \"tummy\", \"tumps\", \"tumpy\", \"tunas\", \"tunds\", \"tuned\", \"tuner\", \"tunes\", \"tungs\", \"tunny\", \"tupek\", \"tupik\", \"tuple\", \"tuque\", \"turds\", \"turfs\", \"turfy\", \"turks\", \"turme\", \"turms\", \"turns\", \"turnt\", \"turps\", \"turrs\", \"tushy\", \"tusks\", \"tusky\", \"tutee\", \"tutti\", \"tutty\", \"tutus\", \"tuxes\", \"tuyer\", \"twaes\", \"twain\", \"twals\", \"twank\", \"twats\", \"tways\", \"tweel\", \"tween\", \"tweep\", \"tweer\", \"twerk\", \"twerp\", \"twier\", \"twigs\", \"twill\", \"twilt\", \"twink\", \"twins\", \"twiny\", \"twire\", \"twirp\", \"twite\", \"twits\", \"twoer\", \"twyer\", \"tyees\", \"tyers\", \"tyiyn\", \"tykes\", \"tyler\", \"tymps\", \"tynde\", \"tyned\", \"tynes\", \"typal\", \"typed\", \"types\", \"typey\", \"typic\", \"typos\", \"typps\", \"typto\", \"tyran\", \"tyred\", \"tyres\", \"tyros\", \"tythe\", \"tzars\", \"udals\", \"udons\", \"ugali\", \"ugged\", \"uhlan\", \"uhuru\", \"ukase\", \"ulama\", \"ulans\", \"ulema\", \"ulmin\", \"ulnad\", \"ulnae\", \"ulnar\", \"ulnas\", \"ulpan\", \"ulvas\", \"ulyie\", \"ulzie\", \"umami\", \"umbel\", \"umber\", \"umble\", \"umbos\", \"umbre\", \"umiac\", \"umiak\", \"umiaq\", \"ummah\", \"ummas\", \"ummed\", \"umped\", \"umphs\", \"umpie\", \"umpty\", \"umrah\", \"umras\", \"unais\", \"unapt\", \"unarm\", \"unary\", \"unaus\", \"unbag\", \"unban\", \"unbar\", \"unbed\", \"unbid\", \"unbox\", \"uncap\", \"unces\", \"uncia\", \"uncos\", \"uncoy\", \"uncus\", \"undam\", \"undee\", \"undos\", \"undug\", \"uneth\", \"unfix\", \"ungag\", \"unget\", \"ungod\", \"ungot\", \"ungum\", \"unhat\", \"unhip\", \"unica\", \"units\", \"unjam\", \"unked\", \"unket\", \"unkid\", \"unlaw\", \"unlay\", \"unled\", \"unlet\", \"unlid\", \"unman\", \"unmew\", \"unmix\", \"unpay\", \"unpeg\", \"unpen\", \"unpin\", \"unred\", \"unrid\", \"unrig\", \"unrip\", \"unsaw\", \"unsay\", \"unsee\", \"unsew\", \"unsex\", \"unsod\", \"untax\", \"untin\", \"unwet\", \"unwit\", \"unwon\", \"upbow\", \"upbye\", \"updos\", \"updry\", \"upend\", \"upjet\", \"uplay\", \"upled\", \"uplit\", \"upped\", \"upran\", \"uprun\", \"upsee\", \"upsey\", \"uptak\", \"upter\", \"uptie\", \"uraei\", \"urali\", \"uraos\", \"urare\", \"urari\", \"urase\", \"urate\", \"urbex\", \"urbia\", \"urdee\", \"ureal\", \"ureas\", \"uredo\", \"ureic\", \"urena\", \"urent\", \"urged\", \"urger\", \"urges\", \"urial\", \"urite\", \"urman\", \"urnal\", \"urned\", \"urped\", \"ursae\", \"ursid\", \"urson\", \"urubu\", \"urvas\", \"users\", \"usnea\", \"usque\", \"usure\", \"usury\", \"uteri\", \"uveal\", \"uveas\", \"uvula\", \"vacua\", \"vaded\", \"vades\", \"vagal\", \"vagus\", \"vails\", \"vaire\", \"vairs\", \"vairy\", \"vakas\", \"vakil\", \"vales\", \"valis\", \"valse\", \"vamps\", \"vampy\", \"vanda\", \"vaned\", \"vanes\", \"vangs\", \"vants\", \"vaped\", \"vaper\", \"vapes\", \"varan\", \"varas\", \"vardy\", \"varec\", \"vares\", \"varia\", \"varix\", \"varna\", \"varus\", \"varve\", \"vasal\", \"vases\", \"vasts\", \"vasty\", \"vatic\", \"vatus\", \"vauch\", \"vaute\", \"vauts\", \"vawte\", \"vaxes\", \"veale\", \"veals\", \"vealy\", \"veena\", \"veeps\", \"veers\", \"veery\", \"vegas\", \"veges\", \"vegie\", \"vegos\", \"vehme\", \"veils\", \"veily\", \"veins\", \"veiny\", \"velar\", \"velds\", \"veldt\", \"veles\", \"vells\", \"velum\", \"venae\", \"venal\", \"vends\", \"vendu\", \"veney\", \"venge\", \"venin\", \"vents\", \"venus\", \"verbs\", \"verra\", \"verry\", \"verst\", \"verts\", \"vertu\", \"vespa\", \"vesta\", \"vests\", \"vetch\", \"vexed\", \"vexer\", \"vexes\", \"vexil\", \"vezir\", \"vials\", \"viand\", \"vibes\", \"vibex\", \"vibey\", \"viced\", \"vices\", \"vichy\", \"viers\", \"views\", \"viewy\", \"vifda\", \"viffs\", \"vigas\", \"vigia\", \"vilde\", \"viler\", \"villi\", \"vills\", \"vimen\", \"vinal\", \"vinas\", \"vinca\", \"vined\", \"viner\", \"vines\", \"vinew\", \"vinic\", \"vinos\", \"vints\", \"viold\", \"viols\", \"vired\", \"vireo\", \"vires\", \"virga\", \"virge\", \"virid\", \"virls\", \"virtu\", \"visas\", \"vised\", \"vises\", \"visie\", \"visne\", \"vison\", \"visto\", \"vitae\", \"vitas\", \"vitex\", \"vitro\", \"vitta\", \"vivas\", \"vivat\", \"vivda\", \"viver\", \"vives\", \"vizir\", \"vizor\", \"vleis\", \"vlies\", \"vlogs\", \"voars\", \"vocab\", \"voces\", \"voddy\", \"vodou\", \"vodun\", \"voema\", \"vogie\", \"voids\", \"voile\", \"voips\", \"volae\", \"volar\", \"voled\", \"voles\", \"volet\", \"volks\", \"volta\", \"volte\", \"volti\", \"volts\", \"volva\", \"volve\", \"vomer\", \"voted\", \"votes\", \"vouge\", \"voulu\", \"vowed\", \"vower\", \"voxel\", \"vozhd\", \"vraic\", \"vrils\", \"vroom\", \"vrous\", \"vrouw\", \"vrows\", \"vuggs\", \"vuggy\", \"vughs\", \"vughy\", \"vulgo\", \"vulns\", \"vulva\", \"vutty\", \"waacs\", \"wacke\", \"wacko\", \"wacks\", \"wadds\", \"waddy\", \"waded\", \"wader\", \"wades\", \"wadge\", \"wadis\", \"wadts\", \"waffs\", \"wafts\", \"waged\", \"wages\", \"wagga\", \"wagyu\", \"wahoo\", \"waide\", \"waifs\", \"waift\", \"wails\", \"wains\", \"wairs\", \"waite\", \"waits\", \"wakas\", \"waked\", \"waken\", \"waker\", \"wakes\", \"wakfs\", \"waldo\", \"walds\", \"waled\", \"waler\", \"wales\", \"walie\", \"walis\", \"walks\", \"walla\", \"walls\", \"wally\", \"walty\", \"wamed\", \"wames\", \"wamus\", \"wands\", \"waned\", \"wanes\", \"waney\", \"wangs\", \"wanks\", \"wanky\", \"wanle\", \"wanly\", \"wanna\", \"wants\", \"wanty\", \"wanze\", \"waqfs\", \"warbs\", \"warby\", \"wards\", \"wared\", \"wares\", \"warez\", \"warks\", \"warms\", \"warns\", \"warps\", \"warre\", \"warst\", \"warts\", \"wases\", \"washy\", \"wasms\", \"wasps\", \"waspy\", \"wasts\", \"watap\", \"watts\", \"wauff\", \"waugh\", \"wauks\", \"waulk\", \"wauls\", \"waurs\", \"waved\", \"waves\", \"wavey\", \"wawas\", \"wawes\", \"wawls\", \"waxed\", \"waxer\", \"waxes\", \"wayed\", \"wazir\", \"wazoo\", \"weald\", \"weals\", \"weamb\", \"weans\", \"wears\", \"webby\", \"weber\", \"wecht\", \"wedel\", \"wedgy\", \"weeds\", \"weeke\", \"weeks\", \"weels\", \"weems\", \"weens\", \"weeny\", \"weeps\", \"weepy\", \"weest\", \"weete\", \"weets\", \"wefte\", \"wefts\", \"weids\", \"weils\", \"weirs\", \"weise\", \"weize\", \"wekas\", \"welds\", \"welke\", \"welks\", \"welkt\", \"wells\", \"welly\", \"welts\", \"wembs\", \"wends\", \"wenge\", \"wenny\", \"wents\", \"weros\", \"wersh\", \"wests\", \"wetas\", \"wetly\", \"wexed\", \"wexes\", \"whamo\", \"whams\", \"whang\", \"whaps\", \"whare\", \"whata\", \"whats\", \"whaup\", \"whaur\", \"wheal\", \"whear\", \"wheen\", \"wheep\", \"wheft\", \"whelk\", \"whelm\", \"whens\", \"whets\", \"whews\", \"wheys\", \"whids\", \"whift\", \"whigs\", \"whilk\", \"whims\", \"whins\", \"whios\", \"whips\", \"whipt\", \"whirr\", \"whirs\", \"whish\", \"whiss\", \"whist\", \"whits\", \"whity\", \"whizz\", \"whomp\", \"whoof\", \"whoot\", \"whops\", \"whorl\", \"whort\", \"whoso\", \"whows\", \"whump\", \"whups\", \"whyda\", \"wicca\", \"wicks\", \"wicky\", \"widdy\", \"wides\", \"wiels\", \"wifed\", \"wifes\", \"wifey\", \"wifie\", \"wifty\", \"wigan\", \"wigga\", \"wiggy\", \"wikis\", \"wilco\", \"wilds\", \"wiled\", \"wiles\", \"wilga\", \"wilis\", \"wilja\", \"wills\", \"wilts\", \"wimps\", \"winds\", \"wined\", \"wines\", \"winey\", \"winge\", \"wings\", \"wingy\", \"winks\", \"winna\", \"winns\", \"winos\", \"winze\", \"wiped\", \"wiper\", \"wipes\", \"wired\", \"wirer\", \"wires\", \"wirra\", \"wised\", \"wises\", \"wisha\", \"wisht\", \"wisps\", \"wists\", \"witan\", \"wited\", \"wites\", \"withe\", \"withs\", \"withy\", \"wived\", \"wiver\", \"wives\", \"wizen\", \"wizes\", \"woads\", \"woald\", \"wocks\", \"wodge\", \"woful\", \"wojus\", \"woker\", \"wokka\", \"wolds\", \"wolfs\", \"wolly\", \"wolve\", \"wombs\", \"womby\", \"womyn\", \"wonga\", \"wongi\", \"wonks\", \"wonky\", \"wonts\", \"woods\", \"wooed\", \"woofs\", \"woofy\", \"woold\", \"wools\", \"woons\", \"woops\", \"woopy\", \"woose\", \"woosh\", \"wootz\", \"words\", \"works\", \"worms\", \"wormy\", \"worts\", \"wowed\", \"wowee\", \"woxen\", \"wrang\", \"wraps\", \"wrapt\", \"wrast\", \"wrate\", \"wrawl\", \"wrens\", \"wrick\", \"wried\", \"wrier\", \"wries\", \"writs\", \"wroke\", \"wroot\", \"wroth\", \"wryer\", \"wuddy\", \"wudus\", \"wulls\", \"wurst\", \"wuses\", \"wushu\", \"wussy\", \"wuxia\", \"wyled\", \"wyles\", \"wynds\", \"wynns\", \"wyted\", \"wytes\", \"xebec\", \"xenia\", \"xenic\", \"xenon\", \"xeric\", \"xerox\", \"xerus\", \"xoana\", \"xrays\", \"xylan\", \"xylem\", \"xylic\", \"xylol\", \"xylyl\", \"xysti\", \"xysts\", \"yaars\", \"yabas\", \"yabba\", \"yabby\", \"yacca\", \"yacka\", \"yacks\", \"yaffs\", \"yager\", \"yages\", \"yagis\", \"yahoo\", \"yaird\", \"yakka\", \"yakow\", \"yales\", \"yamen\", \"yampy\", \"yamun\", \"yangs\", \"yanks\", \"yapok\", \"yapon\", \"yapps\", \"yappy\", \"yarak\", \"yarco\", \"yards\", \"yarer\", \"yarfa\", \"yarks\", \"yarns\", \"yarrs\", \"yarta\", \"yarto\", \"yates\", \"yauds\", \"yauld\", \"yaups\", \"yawed\", \"yawey\", \"yawls\", \"yawns\", \"yawny\", \"yawps\", \"ybore\", \"yclad\", \"ycled\", \"ycond\", \"ydrad\", \"ydred\", \"yeads\", \"yeahs\", \"yealm\", \"yeans\", \"yeard\", \"years\", \"yecch\", \"yechs\", \"yechy\", \"yedes\", \"yeeds\", \"yeesh\", \"yeggs\", \"yelks\", \"yells\", \"yelms\", \"yelps\", \"yelts\", \"yenta\", \"yente\", \"yerba\", \"yerds\", \"yerks\", \"yeses\", \"yesks\", \"yests\", \"yesty\", \"yetis\", \"yetts\", \"yeuks\", \"yeuky\", \"yeven\", \"yeves\", \"yewen\", \"yexed\", \"yexes\", \"yfere\", \"yiked\", \"yikes\", \"yills\", \"yince\", \"yipes\", \"yippy\", \"yirds\", \"yirks\", \"yirrs\", \"yirth\", \"yites\", \"yitie\", \"ylems\", \"ylike\", \"ylkes\", \"ymolt\", \"ympes\", \"yobbo\", \"yobby\", \"yocks\", \"yodel\", \"yodhs\", \"yodle\", \"yogas\", \"yogee\", \"yoghs\", \"yogic\", \"yogin\", \"yogis\", \"yoick\", \"yojan\", \"yoked\", \"yokel\", \"yoker\", \"yokes\", \"yokul\", \"yolks\", \"yolky\", \"yomim\", \"yomps\", \"yonic\", \"yonis\", \"yonks\", \"yoofs\", \"yoops\", \"yores\", \"yorks\", \"yorps\", \"youks\", \"yourn\", \"yours\", \"yourt\", \"youse\", \"yowed\", \"yowes\", \"yowie\", \"yowls\", \"yowza\", \"yrapt\", \"yrent\", \"yrivd\", \"yrneh\", \"ysame\", \"ytost\", \"yuans\", \"yucas\", \"yucca\", \"yucch\", \"yucko\", \"yucks\", \"yucky\", \"yufts\", \"yugas\", \"yuked\", \"yukes\", \"yukky\", \"yukos\", \"yulan\", \"yules\", \"yummo\", \"yummy\", \"yumps\", \"yupon\", \"yuppy\", \"yurta\", \"yurts\", \"yuzus\", \"zabra\", \"zacks\", \"zaida\", \"zaidy\", \"zaire\", \"zakat\", \"zaman\", \"zambo\", \"zamia\", \"zanja\", \"zante\", \"zanza\", \"zanze\", \"zappy\", \"zarfs\", \"zaris\", \"zatis\", \"zaxes\", \"zayin\", \"zazen\", \"zeals\", \"zebec\", \"zebub\", \"zebus\", \"zedas\", \"zeins\", \"zendo\", \"zerda\", \"zerks\", \"zeros\", \"zests\", \"zetas\", \"zexes\", \"zezes\", \"zhomo\", \"zibet\", \"ziffs\", \"zigan\", \"zilas\", \"zilch\", \"zilla\", \"zills\", \"zimbi\", \"zimbs\", \"zinco\", \"zincs\", \"zincy\", \"zineb\", \"zines\", \"zings\", \"zingy\", \"zinke\", \"zinky\", \"zippo\", \"zippy\", \"ziram\", \"zitis\", \"zizel\", \"zizit\", \"zlote\", \"zloty\", \"zoaea\", \"zobos\", \"zobus\", \"zocco\", \"zoeae\", \"zoeal\", \"zoeas\", \"zoism\", \"zoist\", \"zombi\", \"zonae\", \"zonda\", \"zoned\", \"zoner\", \"zones\", \"zonks\", \"zooea\", \"zooey\", \"zooid\", \"zooks\", \"zooms\", \"zoons\", \"zooty\", \"zoppa\", \"zoppo\", \"zoril\", \"zoris\", \"zorro\", \"zouks\", \"zowee\", \"zowie\", \"zulus\", \"zupan\", \"zupas\", \"zuppa\", \"zurfs\", \"zuzim\", \"zygal\", \"zygon\", \"zymes\", \"zymic\"]","<div class=\"container\">\n    <p-card class=\"p-p-5\">\n        <ng-template pTemplate=\"header\">\n            <i class=\"pi pi-chevron-left \" (click)=\"back()\"></i>\n\n            Creazione Partita\n        </ng-template>\n    <div class=\"label p-component\">Nome della partita</div>\n    <input pInputText type=\"text\" [(ngModel)]=\"matchname\">\n\n    <div>\n        <div class=\"label p-component\">Parole utilizzate</div>\n\n        <p-toggleButton onLabel=\"tutte le combinazioni (difficile)\"\n            offLabel=\"solo le combinazioni di wordle (semplice)\" onIcon=\"pi pi-comments\" offIcon=\"pi pi-comment\"\n            [(ngModel)]=\"allWords\"></p-toggleButton>\n\n    </div>\n\n\n    <div>\n        <div class=\"label p-component\">Numero di parole</div>\n        <p-inputNumber [(ngModel)]=\"wordNumber\" [min]=\"1\" [max]=\"20\" [showButtons]=\"true\" buttonLayout=\"horizontal\"\n            spinnerMode=\"horizontal\" decrementButtonClass=\"p-button-danger\" incrementButtonClass=\"p-button-success\"\n            incrementButtonIcon=\"pi pi-plus\" decrementButtonIcon=\"pi pi-minus\"></p-inputNumber>\n    </div>\n\n    <div>\n        <div class=\"label p-component\">Numero di giocatori</div>\n        <p-inputNumber [(ngModel)]=\"playerNumber\" [min]=\"1\" [max]=\"20\" [showButtons]=\"true\" buttonLayout=\"horizontal\"\n            spinnerMode=\"horizontal\" decrementButtonClass=\"p-button-danger\" incrementButtonClass=\"p-button-success\"\n            incrementButtonIcon=\"pi pi-plus\" decrementButtonIcon=\"pi pi-minus\"></p-inputNumber>\n    </div>\n\n    <button class=\"createBtn\" pButton (click)=\"createMatch()\" [disabled]=\"!matchname\">Crea la partita ed entra</button>\n    </p-card>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { MatchesService } from 'src/app/services/matches.service';\nimport { Location } from '@angular/common'\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.scss']\n})\nexport class CreateComponent implements OnInit {\n\n\n  public wordNumber: number = 5;\n  public playerNumber: number = 2;\n  public allWords: boolean = true;\n\n  public matchname: string = '';\n\n  constructor(\n    private matchesService: MatchesService,\n    private router: Router,\n    private location: Location\n  ) { }\n\n  async ngOnInit() {\n    \n  }\n\n  back(): void {\n    this.location.back()\n  }\n\n  async createMatch() {\n    const result = await this.matchesService.createNewMatch(this.matchname,this.playerNumber,this.wordNumber, this.allWords);\n    if (result) {\n      this.router.navigate([`game`],{ queryParams: { match: this.matchname } })\n    }\n  }\n\n}\n\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CreateComponent } from './pages/create/create.component';\r\nimport { GameComponent } from './pages/game/game.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { JoinComponent } from './pages/join/join.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomeComponent\r\n  },\r\n  {\r\n    path: 'create',\r\n    component: CreateComponent\r\n  },\r\n  {\r\n    path: 'join',\r\n    component: JoinComponent\r\n  },\r\n  {\r\n    path: 'game',\r\n    component: GameComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Answer, Player, Round, Score } from 'src/app/models/match';\nimport { MatchesService } from 'src/app/services/matches.service';\nimport { RoundService } from 'src/app/services/round.service';\n\n@Component({\n  selector: 'app-gameboard',\n  templateUrl: './gameboard.component.html',\n  styleUrls: ['./gameboard.component.scss']\n})\nexport class GameboardComponent implements OnInit {\n\n  public round: Round;\n  public player: Player;\n  public currentWord: string = '     ';\n  @Input('round') set setRound(value: Round) {\n    this.round = value;\n    this.update();\n  };\n  @Input('player') set setPlayer(value: Player) {\n    this.player = value;\n    this.update();\n  };\n  @Input('currentWord') set setCurrentWord(value: string) {\n    let word = value;\n    if (this.round?.word) {\n      while (word.length < this.round.word.length) {\n        word += ' ';\n      }\n    }\n    this.currentWord = word;\n    this.update();\n  };\n\n  public answers: Answer[] = [];\n  public currentTry = 1;\n\n  private maxTry = MatchesService.MAXTRY;\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n\n  }\n\n  update() {\n    this.generateAnswer();\n  }\n\n  generateAnswer() {\n    this.answers = [];\n    console.log(\"------- ~ GameboardComponent ~ generateAnswer ~ this.round\", this.round);\n    for (let i = 1; i <= this.maxTry; i++) {\n\n      let answered = null;\n      if (this.round) { \n        answered = this.round.answers.find(x => x.player.name == this.player.name && x.attempt == i); \n        console.log(\"------- ~ GameboardComponent ~ generateAnswer ~ answered\", answered);\n      }\n      if (answered) {\n        this.answers.push(answered);\n        this.currentTry = i + 1;\n      } else {\n        this.answers.push(\n          {\n            id: '',\n            player: this.player,\n            value: i == this.currentTry ? this.currentWord : '     ',\n            result: { chars: [2, 2, 2, 2, 2] },\n            attempt: i,\n            complete: false\n          }\n        )\n      }\n    }\n  }\n\n}\n","<div class=\"board\">\n    <div class=\"try\" *ngFor=\"let answer of answers\">\n        {{answer.result.char}}\n        <div class=\"tryLetter\" *ngFor=\"let letter of answer.value.split('');let idx = index\"\n            [ngClass]=\"{'yellow':answer?.result?.chars[idx]==-1,'gray':answer?.result?.chars[idx]==0,'green':answer?.result?.chars[idx]==1}\">\n            {{letter}}</div>\n    </div>\n</div>","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}