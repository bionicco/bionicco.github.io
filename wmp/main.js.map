{"version":3,"sources":["./src/app/matches.service.ts","./src/app/graphql.module.ts","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Apollo, gql, QueryRef } from 'apollo-angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatchesService {\n\n  private matchesQuery: QueryRef<{matches: any}, {}>;\n\n  constructor(private apollo: Apollo) { \n    this.matchesQuery = this.apollo.watchQuery({\n      query: gql`query MyQuery {\n        matches(where: {name: \"test\"}) {\n          id\n          name\n        }\n      }`\n    });\n\n  }\n\n  async getMatches(): Promise<any> {\n    const result = await this.matchesQuery.refetch({});\n    return result.data.matches;\n  }\n\n  async createMatch(name :string) : Promise<any>{   \n    console.log(\"create\",name) ;\n    const result = await this.apollo.mutate({\n      mutation: gql`mutation CreateMatch($name: String!){\n        createMatch(data: {name: $name}) {         \n            id\n            name         \n        }\n      }`,variables:{\n      name:name\n    }\n    }).toPromise();\n    return result;\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {APOLLO_OPTIONS} from 'apollo-angular';\nimport {ApolloClientOptions, InMemoryCache} from '@apollo/client/core';\nimport {HttpLink} from 'apollo-angular/http';\n\nconst uri = 'https://api-eu-central-1.graphcms.com/v2/ckzihjs4d1q5s01xs5lcf6hjr/master'; // <-- add the URL of the GraphQL server here\nexport function createApollo(httpLink: HttpLink): ApolloClientOptions<any> {\n  return {\n    link: httpLink.create({uri}),\n    cache: new InMemoryCache(),\n  };\n}\n\n@NgModule({\n  providers: [\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory: createApollo,\n      deps: [HttpLink],\n    },\n  ],\n})\nexport class GraphQLModule {}\n","This is home\n<div *ngFor=\"let match of matches\">\n    {{match.name}}\n    <input type=\"text\" [(ngModel)]=\"name\">\n    <button (click)=\"insertMatches()\">insert</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatchesService } from '../matches.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  public matches : any[] = [];\n  public name : string = '';\n\n  constructor(\n    private matchesService : MatchesService\n  ) { }\n\n  async ngOnInit(): Promise<void> {\n    await this.listMatches();\n  }\n\n  async listMatches() {\n    const result = await this.matchesService.getMatches();\n    console.log(\"------- ~ HomeComponent ~ updateMatches ~ result\", result);\n    this.matches = result;\n  }\n\n  async insertMatches() {\n    const result = await this.matchesService.createMatch(this.name);\n    console.log(\"------- ~ HomeComponent ~ insertMatches ~ result\", result);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'wordle-mp-fe';\r\n}\r\n","<app-navbar></app-navbar>\r\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { GraphQLModule } from './graphql.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    NavbarComponent\r\n  ],\r\n  imports: [\r\n    FormsModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    GraphQLModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"navbar\">\n    <div>\n      GraphQL Angular App\n    </div>\n    <nav>\n      <ul>\n        <li><a routerLink=\"/\">Home</a></li>\n      </ul>\n    </nav>\n  </div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomeComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}